load=ndlMacros
run=DNN

ndlMacros = [
    ImageW = 224
    ImageH = 224
    ImageC = 3
    LabelDim = 1000

    features = ImageInput(ImageW, ImageH, ImageC, tag = feature, imageLayout = "cudnn")
    labels = Input(LabelDim, tag = label)
    
    # Kernels width and height.
    kW = 3
    kH = 3
    # Kernel stride.
    hs = 1
    vs = 1
    
    # Initial parameter values.
    convWScale = 7.07
    convBValue = 0

    fcWScale = 1.13
    fcBValue = 0

    scValue = 1
    
    # Batch normalization time constant.
    bnTimeConst = 4096
]

DNN=[
    conv1WScale = 0.6
    cMap1 = 64
    conv1 = ConvBNReLULayer(features, cMap1, 147, 7, 7, 2, 2, conv1WScale, convBValue, scValue, bnTimeConst)
    # Max pooling
    pool1W = 3
    pool1H = 3
    pool1hs = 2
    pool1vs = 2
    pool1 = MaxNDPooling(conv1, pool1W, pool1H, pool1hs, pool1vs)
    
    rn1_1 = ResNetNode2A(pool1, cMap1, 576, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn1_2 = ResNetNode2A(rn1_1, cMap1, 576, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn1_3 = ResNetNode2A(rn1_2, cMap1, 576, kW, kH, convWScale, convBValue, scValue, bnTimeConst)

    cMap2 = 128
    rn2_1 = ResNetNode2BInc(rn1_3, cMap2, cMap1, 576, 1152, kW, kH, convWScale, convBValue, scValue, bnTimeConst, $stride1x1$, $stride3x3$)
    rn2_2 = ResNetNode2A(rn2_1, cMap2, 1152, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn2_3 = ResNetNode2A(rn2_2, cMap2, 1152, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn2_4 = ResNetNode2A(rn2_3, cMap2, 1152, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    
    cMap3 = 256
    rn3_1 = ResNetNode2BInc(rn2_4, cMap3, cMap2, 1152, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst, $stride1x1$, $stride3x3$)
    rn3_2 = ResNetNode2A(rn3_1, cMap3, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn3_3 = ResNetNode2A(rn3_2, cMap3, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn3_4 = ResNetNode2A(rn3_3, cMap3, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn3_5 = ResNetNode2A(rn3_4, cMap3, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn3_6 = ResNetNode2A(rn3_5, cMap3, 2304, kW, kH, convWScale, convBValue, scValue, bnTimeConst)

    cMap4 = 512
    rn4_1 = ResNetNode2BInc(rn3_6, cMap4, cMap3, 2304, 4608, kW, kH, convWScale, convBValue, scValue, bnTimeConst, $stride1x1$, $stride3x3$)
    rn4_2 = ResNetNode2A(rn4_1, cMap4, 4608, kW, kH, convWScale, convBValue, scValue, bnTimeConst)
    rn4_3 = ResNetNode2A(rn4_2, cMap4, 4608, kW, kH, convWScale, convBValue, scValue, bnTimeConst)

    # Global average pooling
    pool2W = 7
    pool2H = 7
    pool2hs = 1
    pool2vs = 1
    pool5 = AveragePooling(rn4_3, pool2W, pool2H, pool2hs, pool2vs, imageLayout = "cudnn")

    ol = DnnLayer(cMap4, labelDim, pool5, fcWScale, fcBValue)
    
    CE = CrossEntropyWithSoftmax(labels, ol, tag = Criteria)
    Err = ClassificationError(labels, ol, tag = Eval)
    OutputNodes = ol
]
