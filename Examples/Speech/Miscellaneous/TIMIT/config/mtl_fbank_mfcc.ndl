load=ndlMacroDefine
run=ndlMultiTask

ndlMacroDefine=[

    #Sigmoid Base Feed Forward Two Inputs
    SBFF2(input1,rowCount,colCount1,input2,colCount2)
    {
        B=Parameter(rowCount, init="fixedValue", value=0)
        W1=Parameter(rowCount, colCount1)
        W2=Parameter(rowCount, colCount2)
        T1=Times(W1,input1)
		T2=Times(W2,input2)
		P1=Plus(T1,T2)
		P2=Plus(P1,B)
		S=Sigmoid(P2)
    }

    WtObjFcn(o1,w1,o2,w2)
    {
		A1=Constant(w1)
		A2=Constant(w2)
		T1=Times(A1,o1)
		T2=Times(A2,o2)
		O=Plus(T1,T2)
    }
]

ndlMultiTask = [

FeatDim1 = 792
FeatDim2 = 39
HiddenDim = 512
LabelDim1 = 183

# input definitions
features1=Input(FeatDim1,tag="feature")
features2=Input(FeatDim2,tag="feature")
labels=Input(LabelDim1,tag="label")

featMean1=Mean(features1)
featInvStd1=InvStdDev(features1)
featInput1=PerDimMeanVarNormalization(features1,featMean1,featInvStd1)

featMean2=Mean(features2)
featInvStd2=InvStdDev(features2)
featInput2=PerDimMeanVarNormalization(features2,featMean2,featInvStd2)

# layer definitions
L1 = SBFF2(featInput1, HiddenDim, FeatDim1, featInput2, FeatDim2)
L2 = SBFF(L1, HiddenDim, HiddenDim)
L3 = SBFF(L2, HiddenDim, HiddenDim)
CE = SMBFF(L3, LabelDim1, HiddenDim, labels,tag="criterion") # do I need a tag? 
FER = ClassificationError(labels,CE.BFF.FF.P,tag="evaluation")

# outputNodes
Prior=Mean(labels)
LogPrior = Log(Prior)
ScaledLogLikelihood=Minus(CE.BFF.FF.P, LogPrior)

# root Nodes
OutputNodes=(ScaledLogLikelihood)
]


