load=ndlMacroDefine
run=ndlCreateNetwork

ndlMacroDefine=[
    # Macro definitions

    MeanVarNorm(x)
	{
		xMean = Mean(x)
    	xStdDev = InvStdDev(x)
    	xNorm=PerDimMeanVarNormalization(x,xMean,xStdDev)
    }
 
    LogPrior(labels)
    {
		Prior=Mean(labels)
		LogPrior=Log(Prior)
    }   
]

ndlCreateNetwork=[

	#define basic i/o
	featDim=560
	labelDim=2053
	hiddenDim=1024
	features=Input(featDim, tag=feature)
	labels=Input(labelDim, tag=label)
			       			       
	 # define network
	 featNorm = MeanVarNorm(features)
	 L1 = SBFF(featNorm,hiddenDim,featDim)
	 L2 = SBFF(L1,hiddenDim,hiddenDim)
	 L3 = SBFF(L2,hiddenDim,hiddenDim)
	 CE = SMBFF(L3,labelDim,hiddenDim,labels,tag=Criteria)
	 Err = ClassificationError(labels,CE.BFF.FF.P,tag=Eval)

	 # define output (scaled loglikelihood)
     logPrior = LogPrior(labels)	 
	 ScaledLogLikelihood=Minus(CE.BFF.FF.P,logPrior,tag=Output)
]
