CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/../01_OneHidden.cntk currentDirectory=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData RunDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu DataDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/.. OutputDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu DeviceId=0 timestamping=true batchNormalizationEngine=cudnn
-------------------------------------------------------------------
Build info: 

		Built time: Aug 23 2016 10:11:42
		Last modified date: Tue Aug 23 04:28:44 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.0
		Build Branch: HEAD
		Build SHA1: 66498cf414f4bbf6392730c2abfbef6a5eeb8f7b
		Built by philly on f67b30a647de
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
08/23/2016 10:53:36: -------------------------------------------------------------------
08/23/2016 10:53:36: Build info: 

08/23/2016 10:53:36: 		Built time: Aug 23 2016 10:11:42
08/23/2016 10:53:36: 		Last modified date: Tue Aug 23 04:28:44 2016
08/23/2016 10:53:36: 		Build type: release
08/23/2016 10:53:36: 		Build target: GPU
08/23/2016 10:53:36: 		With 1bit-SGD: no
08/23/2016 10:53:36: 		Math lib: mkl
08/23/2016 10:53:36: 		CUDA_PATH: /usr/local/cuda-7.5
08/23/2016 10:53:36: 		CUB_PATH: /usr/local/cub-1.4.1
08/23/2016 10:53:36: 		CUDNN_PATH: /usr/local/cudnn-5.0
08/23/2016 10:53:36: 		Build Branch: HEAD
08/23/2016 10:53:36: 		Build SHA1: 66498cf414f4bbf6392730c2abfbef6a5eeb8f7b
08/23/2016 10:53:36: 		Built by philly on f67b30a647de
08/23/2016 10:53:36: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/23/2016 10:53:36: -------------------------------------------------------------------
08/23/2016 10:53:37: -------------------------------------------------------------------
08/23/2016 10:53:37: GPU info:

08/23/2016 10:53:37: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/23/2016 10:53:37: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/23/2016 10:53:37: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/23/2016 10:53:37: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/23/2016 10:53:37: -------------------------------------------------------------------

08/23/2016 10:53:37: Running on localhost at 2016/08/23 10:53:37
08/23/2016 10:53:37: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/../01_OneHidden.cntk  currentDirectory=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData  RunDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu  DataDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/..  OutputDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu  DeviceId=0  timestamping=true  batchNormalizationEngine=cudnn



08/23/2016 10:53:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/23/2016 10:53:37: rootDir = ".."
configDir = "$rootDir$/Config"
dataDir   = "$rootDir$/Data"
outputDir = "$rootDir$/Output"
modelDir  = "$outputDir$/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "$modelDir$/01_OneHidden"
numMBsToShowResult = 500
traceLevel = 1
batchNormalizationEngine = "testMustOverrideBatchNormalizationEngine"
train = [
    action = "train"
    NDLNetworkBuilder = [
        initOnCPUOnly = true
        networkDescription = "$ConfigDir$/01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 3
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
RunDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
DataDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/..
OutputDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
DeviceId=0
timestamping=true
batchNormalizationEngine=cudnn

08/23/2016 10:53:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/23/2016 10:53:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/23/2016 10:53:37: rootDir = ".."
configDir = "../Config"
dataDir   = "../Data"
outputDir = "../Output"
modelDir  = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models"
deviceId = 0
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden"
numMBsToShowResult = 500
traceLevel = 1
batchNormalizationEngine = "testMustOverrideBatchNormalizationEngine"
train = [
    action = "train"
    NDLNetworkBuilder = [
        initOnCPUOnly = true
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/../01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 3
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]
test = [
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]
currentDirectory=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
RunDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
DataDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/..
OutputDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
DeviceId=0
timestamping=true
batchNormalizationEngine=cudnn

08/23/2016 10:53:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/23/2016 10:53:37: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 01_OneHidden.cntk:batchNormalizationEngine=cudnn
configparameters: 01_OneHidden.cntk:command=train:test
configparameters: 01_OneHidden.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/..
configparameters: 01_OneHidden.cntk:currentDirectory=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
configparameters: 01_OneHidden.cntk:dataDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:modelDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models
configparameters: 01_OneHidden.cntk:modelPath=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:numMBsToShowResult=500
configparameters: 01_OneHidden.cntk:outputDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu
configparameters: 01_OneHidden.cntk:test=[
    action = "test"
minibatchSize = 1024    
    evalNodeNames = ce:errs:top5Errs
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:train=[
    action = "train"
    NDLNetworkBuilder = [
        initOnCPUOnly = true
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/BatchNormalization/NonSpatial/CuDNN/../01_OneHidden.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerSample = 0.003125
        momentumAsTimeConstant = 0
        maxEpochs = 3
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]   
]

08/23/2016 10:53:37: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/23/2016 10:53:37: Commands: train test
08/23/2016 10:53:37: Precision = "float"
08/23/2016 10:53:37: CNTKModelPath: /tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden
08/23/2016 10:53:37: CNTKCommandTrainInfo: train : 3
08/23/2016 10:53:37: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/23/2016 10:53:37: ##############################################################################
08/23/2016 10:53:37: #                                                                            #
08/23/2016 10:53:37: # Action "train"                                                             #
08/23/2016 10:53:37: #                                                                            #
08/23/2016 10:53:37: ##############################################################################

08/23/2016 10:53:37: CNTKCommandTrainBegin: train

08/23/2016 10:53:37: Creating virgin network.
NDLBuilder Using GPU 0
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.000000.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[200 x 784] <- 0.000000.
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'b' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'sc' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'm' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'var' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'ol.W' (LearnableParameter operation): Initializing Parameter[10 x 200] <- 0.000000.
Node 'ol.b' (LearnableParameter operation): Initializing Parameter[10 x 1] <- 0.000000.
Node 'unnamed32' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.000000.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'unnamed32' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 5.000000.
Node 'featScale' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node 'h1.W' (LearnableParameter operation): Initializing Parameter[200 x 784] <- uniform(seed=1, range=0.050000*1.000000, onCPU=true).
Node 'h1.b' (LearnableParameter operation): Initializing Parameter[200 x 1] <- uniform(seed=2, range=0.050000*1.000000, onCPU=true).
Node 'b' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'sc' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 1.000000.
Node 'm' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'var' (LearnableParameter operation): Initializing Parameter[200 x 1] <- 0.000000.
Node 'ol.W' (LearnableParameter operation): Initializing Parameter[10 x 200] <- uniform(seed=3, range=0.050000*1.000000, onCPU=true).
Node 'ol.b' (LearnableParameter operation): Initializing Parameter[10 x 1] <- uniform(seed=4, range=0.050000*1.000000, onCPU=true).

Post-processing network...

4 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	ol.z = Plus()
	top5Errs = ErrorPrediction()

Validating network. 21 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *] -> [784 x 1 x *]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *] -> [200 x 1 x *]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]
Validating --> sc = LearnableParameter() :  -> [200 x 1]
Validating --> b = LearnableParameter() :  -> [200 x 1]
Validating --> m = LearnableParameter() :  -> [200 x 1]
Validating --> var = LearnableParameter() :  -> [200 x 1]
Validating --> y = BatchNormalization (h1.z, sc, b, m, var) : [200 x 1 x *], [200 x 1], [200 x 1], [200 x 1], [200 x 1] -> [200 x 1 x *]
Validating --> ol.t = Times (ol.W, y) : [10 x 200], [200 x 1 x *] -> [10 x 1 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> unnamed32 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed32) : [10 x *], [10 x 1 x *], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN batch normalization engine.


13 out of 21 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/23/2016 10:53:37: Created model with 21 nodes on GPU 0.

08/23/2016 10:53:37: Training criterion node(s):
08/23/2016 10:53:37: 	ce = CrossEntropyWithSoftmax

08/23/2016 10:53:37: Evaluation criterion node(s):
08/23/2016 10:53:37: 	top5Errs = ErrorPrediction
08/23/2016 10:53:37: 	errs = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 33 matrices, 8 are shared as 4, and 25 are not shared.

	{ h1.W : [200 x 784] (gradient)
	  h1.z : [200 x 1 x *] }
	{ h1.z : [200 x 1 x *] (gradient)
	  ol.t : [10 x 1 x *] }
	{ ol.W : [10 x 200] (gradient)
	  ol.z : [10 x 1 x *] (gradient) }
	{ ol.t : [10 x 1 x *] (gradient)
	  sc : [200 x 1] (gradient) }


08/23/2016 10:53:37: Training 159410 parameters in 6 out of 6 parameter tensors and 12 nodes with gradient:

08/23/2016 10:53:37: 	Node 'b' (LearnableParameter operation) : [200 x 1]
08/23/2016 10:53:37: 	Node 'h1.W' (LearnableParameter operation) : [200 x 784]
08/23/2016 10:53:37: 	Node 'h1.b' (LearnableParameter operation) : [200 x 1]
08/23/2016 10:53:37: 	Node 'ol.W' (LearnableParameter operation) : [10 x 200]
08/23/2016 10:53:37: 	Node 'ol.b' (LearnableParameter operation) : [10 x 1]
08/23/2016 10:53:37: 	Node 'sc' (LearnableParameter operation) : [200 x 1]

08/23/2016 10:53:37: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

08/23/2016 10:53:37: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 1: samples [0..60000] (first sequence at sample 0), worker rank 0, total workers 1

08/23/2016 10:53:37: Starting minibatch loop.
08/23/2016 10:53:39:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.46961563 * 16000; top5Errs = 1.244% * 16000; errs = 13.863% * 16000; time = 1.4505s; samplesPerSecond = 11031.1
08/23/2016 10:53:39:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.40725705 * 16000; top5Errs = 0.856% * 16000; errs = 11.963% * 16000; time = 0.4445s; samplesPerSecond = 35999.2
08/23/2016 10:53:39:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.36475122 * 16000; top5Errs = 0.769% * 16000; errs = 10.825% * 16000; time = 0.4364s; samplesPerSecond = 36667.3
08/23/2016 10:53:40: Finished Epoch[ 1 of 3]: [Training] ce = 0.40315775 * 60000; top5Errs = 0.910% * 60000; errs = 11.828% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=2.67239s
08/23/2016 10:53:40: SGD: Saving checkpoint model '/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden.1'

08/23/2016 10:53:40: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 2: samples [60000..120000] (first sequence at sample 60000), worker rank 0, total workers 1

08/23/2016 10:53:40: Starting minibatch loop.
08/23/2016 10:53:40:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.34700204 * 16000; top5Errs = 0.644% * 16000; errs = 10.000% * 16000; time = 0.4341s; samplesPerSecond = 36856.3
08/23/2016 10:53:41:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.33560123 * 16000; top5Errs = 0.562% * 16000; errs = 9.806% * 16000; time = 0.4091s; samplesPerSecond = 39105.7
08/23/2016 10:53:41:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.34191467 * 16000; top5Errs = 0.731% * 16000; errs = 9.931% * 16000; time = 0.4040s; samplesPerSecond = 39600.1
08/23/2016 10:53:41: Finished Epoch[ 2 of 3]: [Training] ce = 0.34572699 * 60000; top5Errs = 0.668% * 60000; errs = 10.023% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=1.57648s
08/23/2016 10:53:41: SGD: Saving checkpoint model '/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden.2'

08/23/2016 10:53:41: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples
BlockRandomizer::StartEpoch: epoch 3: samples [120000..180000] (first sequence at sample 120000), worker rank 0, total workers 1

08/23/2016 10:53:41: Starting minibatch loop.
08/23/2016 10:53:42:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.34088281 * 16000; top5Errs = 0.581% * 16000; errs = 9.956% * 16000; time = 0.4188s; samplesPerSecond = 38208.3
08/23/2016 10:53:42:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.32911932 * 16000; top5Errs = 0.594% * 16000; errs = 9.219% * 16000; time = 0.4313s; samplesPerSecond = 37094.1
08/23/2016 10:53:43:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.33373407 * 16000; top5Errs = 0.569% * 16000; errs = 9.556% * 16000; time = 0.4350s; samplesPerSecond = 36784.7
08/23/2016 10:53:43: Finished Epoch[ 3 of 3]: [Training] ce = 0.33020703 * 60000; top5Errs = 0.557% * 60000; errs = 9.510% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=1.622s
08/23/2016 10:53:43: SGD: Saving checkpoint model '/tmp/cntk-test-20160823105326.772713/BatchNormalization/NonSpatial_CuDNN@release_gpu/Models/01_OneHidden'
08/23/2016 10:53:43: CNTKCommandTrainEnd: train

08/23/2016 10:53:44: Action "train" complete.


08/23/2016 10:53:44: ##############################################################################
08/23/2016 10:53:44: #                                                                            #
08/23/2016 10:53:44: # Action "test"                                                              #
08/23/2016 10:53:44: #                                                                            #
08/23/2016 10:53:44: ##############################################################################

INFO: y: initialized samplesSeen from mbCount when loading pre-CuDNNv5 model

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ErrorPrediction()
	top5Errs = ErrorPrediction()

Validating network. 21 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 200]
Validating --> h1.W = LearnableParameter() :  -> [200 x 784]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [784 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [784 x *1] -> [784 x 1 x *1]
Validating --> h1.t = Times (h1.W, featScaled) : [200 x 784], [784 x 1 x *1] -> [200 x 1 x *1]
Validating --> h1.b = LearnableParameter() :  -> [200 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> sc = LearnableParameter() :  -> [200 x 1]
Validating --> b = LearnableParameter() :  -> [200 x 1]
Validating --> m = LearnableParameter() :  -> [200 x 1]
Validating --> var = LearnableParameter() :  -> [200 x 1]
Validating --> y = BatchNormalization (h1.z, sc, b, m, var) : [200 x 1 x *1], [200 x 1], [200 x 1], [200 x 1], [200 x 1] -> [200 x 1 x *1]
Validating --> ol.t = Times (ol.W, y) : [10 x 200], [200 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ErrorPrediction (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> unnamed32 = LearnableParameter() :  -> [1 x 1]
Validating --> top5Errs = ErrorPrediction (labels, ol.z, unnamed32) : [10 x *1], [10 x 1 x *1], [1 x 1] -> [1]

Validating network. 9 nodes to process in pass 2.


Validating network, final pass.


Using cuDNN batch normalization engine.


13 out of 21 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 21 matrices, 0 are shared as 0, and 21 are not shared.


BlockRandomizer::StartEpoch: epoch 1: samples [0..10000] (first sequence at sample 0), worker rank 0, total workers 1
08/23/2016 10:53:44: Minibatch[1-10]: ce = 0.29359102 * 10000; errs = 8.360% * 10000; top5Errs = 0.570% * 10000
08/23/2016 10:53:44: Final Results: Minibatch[1-10]: ce = 0.29359102 * 10000; perplexity = 1.34123525; errs = 8.360% * 10000; top5Errs = 0.570% * 10000

08/23/2016 10:53:44: Action "test" complete.

08/23/2016 10:53:44: __COMPLETED__