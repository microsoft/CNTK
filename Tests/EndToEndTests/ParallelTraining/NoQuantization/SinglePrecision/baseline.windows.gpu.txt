=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 4 E:\NetScale\CNTK\git_repos\cplx_master2\x64\debug\cntk.exe configFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining/SimpleMultiGPU.config RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining DeviceId=0 precision=float SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]] stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 4 nodes pinging each other
ping [requestnodes (before change)]: 4 nodes pinging each other
ping [requestnodes (before change)]: 4 nodes pinging each other
ping [requestnodes (before change)]: 4 nodes pinging each other
ping [requestnodes (before change)]: all 4 nodes responded
ping [requestnodes (before change)]: all 4 nodes responded
ping [requestnodes (before change)]: all 4 nodes responded
ping [requestnodes (before change)]: all 4 nodes responded
requestnodes [MPIWrapper]: using 4 out of 4 MPI nodes (4 requested); we (1) are in (participating)
requestnodes [MPIWrapper]: using 4 out of 4 MPI nodes (4 requested); we (3) are in (participating)
requestnodes [MPIWrapper]: using 4 out of 4 MPI nodes (4 requested); we (0) are in (participating)
requestnodes [MPIWrapper]: using 4 out of 4 MPI nodes (4 requested); we (2) are in (participating)
ping [requestnodes (after change)]: 4 nodes pinging each other
ping [requestnodes (after change)]: 4 nodes pinging each other
ping [requestnodes (after change)]: 4 nodes pinging each other
ping [requestnodes (after change)]: 4 nodes pinging each other
ping [requestnodes (after change)]: all 4 nodes responded
ping [requestnodes (after change)]: all 4 nodes responded
ping [requestnodes (after change)]: all 4 nodes responded
ping [requestnodes (after change)]: all 4 nodes responded
mpihelper: we are cog 0 in a gearbox of 4
mpihelper: we are cog 2 in a gearbox of 4
mpihelper: we are cog 3 in a gearbox of 4
mpihelper: we are cog 1 in a gearbox of 4
ping [mpihelper]: 4 nodes pinging each other
ping [mpihelper]: 4 nodes pinging each other
ping [mpihelper]: 4 nodes pinging each other
ping [mpihelper]: 4 nodes pinging each other
ping [mpihelper]: all 4 nodes responded
ping [mpihelper]: all 4 nodes responded
ping [mpihelper]: all 4 nodes responded
ping [mpihelper]: all 4 nodes responded
MPI Rank 0: Redirecting stderr to file C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr_SimpleMultiGPU.logrank0
MPI Rank 0: -------------------------------------------------------------------
MPI Rank 0: Build info: 
MPI Rank 0: 
MPI Rank 0: 		Built time: Oct 24 2015 13:33:25
MPI Rank 0: 		Last modified date: Thu Oct 22 16:00:27 2015
MPI Rank 0: 		Built by amitaga on Amitaga-Win-DT3           
MPI Rank 0: 		Build Path: E:\NetScale\CNTK\git_repos\cplx_master2\MachineLearning\CNTK\
MPI Rank 0: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 0: -------------------------------------------------------------------
MPI Rank 0: running on Amitaga-Win-DT3 at 2015/10/24 21:49:38
MPI Rank 0: command line: 
MPI Rank 0: E:\NetScale\CNTK\git_repos\cplx_master2\x64\debug\cntk.exe configFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining/SimpleMultiGPU.config RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining DeviceId=0 precision=float SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]] stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr 
MPI Rank 0: 
MPI Rank 0: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: deviceId=$DeviceId$
MPI Rank 0: command=SimpleMultiGPU
MPI Rank 0: precision=float
MPI Rank 0: parallelTrain=true
MPI Rank 0: SimpleMultiGPU=[
MPI Rank 0:     action=train
MPI Rank 0:     modelPath=$RunDir$/models/Simple.dnn
MPI Rank 0:     deviceId=$DeviceId$
MPI Rank 0:     traceLevel=1
MPI Rank 0:     SimpleNetworkBuilder=[
MPI Rank 0:         layerSizes=2:50*2:2
MPI Rank 0:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 0:         evalCriterion=ErrorPrediction
MPI Rank 0:         layerTypes=Sigmoid
MPI Rank 0:         initValueScale=1.0
MPI Rank 0:         applyMeanVarNorm=true
MPI Rank 0:         uniformInit=true
MPI Rank 0:         needPrior=true
MPI Rank 0:     ]
MPI Rank 0:     SGD=[
MPI Rank 0:         epochSize=0 
MPI Rank 0:         minibatchSize=25
MPI Rank 0:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 0:         momentumPerMB=0.9
MPI Rank 0:         dropoutRate=0.0
MPI Rank 0:         maxEpochs=4
MPI Rank 0:         ParallelTrain=[
MPI Rank 0:             parallelizationMethod=DataParallelSGD
MPI Rank 0:             DataParallelSGD=[
MPI Rank 0:               gradientBits=1
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader=[
MPI Rank 0:       readerType=UCIFastReader
MPI Rank 0:       file=$DataDir$/SimpleDataTrain.txt
MPI Rank 0:       miniBatchMode=Partial
MPI Rank 0:       randomize=None
MPI Rank 0:       verbosity=1   
MPI Rank 0:       features=[
MPI Rank 0: dim=2      
MPI Rank 0: start=0    
MPI Rank 0:       ]
MPI Rank 0:       labels=[
MPI Rank 0: start=2      
MPI Rank 0: dim=1        
MPI Rank 0: labelDim=2   
MPI Rank 0:         labelMappingFile=$DataDir$/SimpleMapping.txt
MPI Rank 0:       ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 0: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 0: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 0: DeviceId=0
MPI Rank 0: precision=float
MPI Rank 0: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 0: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 0: 
MPI Rank 0: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: deviceId=0
MPI Rank 0: command=SimpleMultiGPU
MPI Rank 0: precision=float
MPI Rank 0: parallelTrain=true
MPI Rank 0: SimpleMultiGPU=[
MPI Rank 0:     action=train
MPI Rank 0:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 0:     deviceId=0
MPI Rank 0:     traceLevel=1
MPI Rank 0:     SimpleNetworkBuilder=[
MPI Rank 0:         layerSizes=2:50*2:2
MPI Rank 0:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 0:         evalCriterion=ErrorPrediction
MPI Rank 0:         layerTypes=Sigmoid
MPI Rank 0:         initValueScale=1.0
MPI Rank 0:         applyMeanVarNorm=true
MPI Rank 0:         uniformInit=true
MPI Rank 0:         needPrior=true
MPI Rank 0:     ]
MPI Rank 0:     SGD=[
MPI Rank 0:         epochSize=0 
MPI Rank 0:         minibatchSize=25
MPI Rank 0:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 0:         momentumPerMB=0.9
MPI Rank 0:         dropoutRate=0.0
MPI Rank 0:         maxEpochs=4
MPI Rank 0:         ParallelTrain=[
MPI Rank 0:             parallelizationMethod=DataParallelSGD
MPI Rank 0:             DataParallelSGD=[
MPI Rank 0:               gradientBits=1
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader=[
MPI Rank 0:       readerType=UCIFastReader
MPI Rank 0:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 0:       miniBatchMode=Partial
MPI Rank 0:       randomize=None
MPI Rank 0:       verbosity=1   
MPI Rank 0:       features=[
MPI Rank 0: dim=2      
MPI Rank 0: start=0    
MPI Rank 0:       ]
MPI Rank 0:       labels=[
MPI Rank 0: start=2      
MPI Rank 0: dim=1        
MPI Rank 0: labelDim=2   
MPI Rank 0:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 0:       ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 0: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 0: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 0: DeviceId=0
MPI Rank 0: precision=float
MPI Rank 0: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 0: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 0: 
MPI Rank 0: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: SimpleMultiGPU.config:command=SimpleMultiGPU
MPI Rank 0: configparameters: SimpleMultiGPU.config:ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 0: configparameters: SimpleMultiGPU.config:DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 0: configparameters: SimpleMultiGPU.config:deviceId=0
MPI Rank 0: configparameters: SimpleMultiGPU.config:parallelTrain=true
MPI Rank 0: configparameters: SimpleMultiGPU.config:precision=float
MPI Rank 0: configparameters: SimpleMultiGPU.config:RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 0: configparameters: SimpleMultiGPU.config:SimpleMultiGPU=[
MPI Rank 0:     action=train
MPI Rank 0:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 0:     deviceId=0
MPI Rank 0:     traceLevel=1
MPI Rank 0:     SimpleNetworkBuilder=[
MPI Rank 0:         layerSizes=2:50*2:2
MPI Rank 0:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 0:         evalCriterion=ErrorPrediction
MPI Rank 0:         layerTypes=Sigmoid
MPI Rank 0:         initValueScale=1.0
MPI Rank 0:         applyMeanVarNorm=true
MPI Rank 0:         uniformInit=true
MPI Rank 0:         needPrior=true
MPI Rank 0:     ]
MPI Rank 0:     SGD=[
MPI Rank 0:         epochSize=0 
MPI Rank 0:         minibatchSize=25
MPI Rank 0:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 0:         momentumPerMB=0.9
MPI Rank 0:         dropoutRate=0.0
MPI Rank 0:         maxEpochs=4
MPI Rank 0:         ParallelTrain=[
MPI Rank 0:             parallelizationMethod=DataParallelSGD
MPI Rank 0:             DataParallelSGD=[
MPI Rank 0:               gradientBits=1
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader=[
MPI Rank 0:       readerType=UCIFastReader
MPI Rank 0:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 0:       miniBatchMode=Partial
MPI Rank 0:       randomize=None
MPI Rank 0:       verbosity=1   
MPI Rank 0:       features=[
MPI Rank 0: dim=2      
MPI Rank 0: start=0    
MPI Rank 0:       ]
MPI Rank 0:       labels=[
MPI Rank 0: start=2      
MPI Rank 0: dim=1        
MPI Rank 0: labelDim=2   
MPI Rank 0:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 0:       ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 0: 
MPI Rank 0: configparameters: SimpleMultiGPU.config:stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 0: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: command: SimpleMultiGPU 
MPI Rank 0: precision = float
MPI Rank 0: CNTKModelPath: C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 0: CNTKCommandTrainInfo: SimpleMultiGPU : 4
MPI Rank 0: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 4
MPI Rank 0: CNTKCommandTrainBegin: SimpleMultiGPU
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading uci file E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 0: SetUniformRandomValue (GPU): creating curand object with seed 1
MPI Rank 0: GetTrainCriterionNodes  ...
MPI Rank 0: GetEvalCriterionNodes  ...
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating for node CrossEntropyWithSoftmax. 20 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node CrossEntropyWithSoftmax. 12 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node CrossEntropyWithSoftmax, final verification.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 	NodeName: InvStdOfFeatures
MPI Rank 0: 	NodeName: MeanOfFeatures
MPI Rank 0: 	NodeName: Prior
MPI Rank 0: starting at epoch 0 counting lines to determine record count
MPI Rank 0: 
MPI Rank 0:  10000 records found
MPI Rank 0: starting epoch 0 at record count 0, and file position 0
MPI Rank 0: already there from last epoch
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating for node InvStdOfFeatures. 2 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node InvStdOfFeatures, final verification.
MPI Rank 0: 
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating for node MeanOfFeatures. 2 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node MeanOfFeatures, final verification.
MPI Rank 0: 
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating for node Prior. 2 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node Prior. 1 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node Prior, final verification.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 0: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 0: 
MPI Rank 0: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: Set Max Temp Mem Size For Convolution Nodes to 0 samples.
MPI Rank 0: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000 
MPI Rank 0: starting epoch 0 at record count 0, and file position 0
MPI Rank 0: already there from last epoch
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating for node EvalErrorPrediction. 20 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node EvalErrorPrediction. 10 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: Validating for node EvalErrorPrediction, final verification.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 0: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 0: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 0: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 0: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 0: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 0: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 0: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 0: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 0: 
MPI Rank 0: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 4, NumGradientBits = 32).
MPI Rank 0: DecimateMinibatchSequences: WARNING: Number of parallel utterances 25 not a multiple of number of GPUs 4, GPU usage will be suboptimal.
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[   1-  10]: SamplesSeen = 250; TrainLossPerSample =  0.70007977; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.21274s; TotalTimePerSample = 0.85096ms; SamplesPerSecond = 1175
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  11-  20]: SamplesSeen = 250; TrainLossPerSample =  0.71514542; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.17175s; TotalTimePerSample = 0.68700ms; SamplesPerSecond = 1455
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  21-  30]: SamplesSeen = 250; TrainLossPerSample =  0.72945595; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.16870s; TotalTimePerSample = 0.67482ms; SamplesPerSecond = 1481
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  31-  40]: SamplesSeen = 250; TrainLossPerSample =  0.70079058; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.16118s; TotalTimePerSample = 0.64471ms; SamplesPerSecond = 1551
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  41-  50]: SamplesSeen = 250; TrainLossPerSample =  0.70605615; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.16159s; TotalTimePerSample = 0.64636ms; SamplesPerSecond = 1547
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  51-  60]: SamplesSeen = 250; TrainLossPerSample =  0.71572398; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.15234s; TotalTimePerSample = 0.60934ms; SamplesPerSecond = 1641
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  61-  70]: SamplesSeen = 250; TrainLossPerSample =  0.72149851; EvalErr[0]PerSample = 0.48000000; TotalTime = 0.14166s; TotalTimePerSample = 0.56666ms; SamplesPerSecond = 1764
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  71-  80]: SamplesSeen = 250; TrainLossPerSample =  0.79845604; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.14173s; TotalTimePerSample = 0.56692ms; SamplesPerSecond = 1763
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  81-  90]: SamplesSeen = 250; TrainLossPerSample =  0.69665186; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.13864s; TotalTimePerSample = 0.55454ms; SamplesPerSecond = 1803
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[  91- 100]: SamplesSeen = 250; TrainLossPerSample =  0.70723326; EvalErr[0]PerSample = 0.49200000; TotalTime = 0.12738s; TotalTimePerSample = 0.50953ms; SamplesPerSecond = 1962
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 101- 110]: SamplesSeen = 250; TrainLossPerSample =  0.71420345; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.13068s; TotalTimePerSample = 0.52273ms; SamplesPerSecond = 1913
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 111- 120]: SamplesSeen = 250; TrainLossPerSample =  0.69535258; EvalErr[0]PerSample = 0.43600000; TotalTime = 0.12783s; TotalTimePerSample = 0.51133ms; SamplesPerSecond = 1955
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 121- 130]: SamplesSeen = 250; TrainLossPerSample =  0.70078531; EvalErr[0]PerSample = 0.44000000; TotalTime = 0.12405s; TotalTimePerSample = 0.49618ms; SamplesPerSecond = 2015
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 131- 140]: SamplesSeen = 250; TrainLossPerSample =  0.71857916; EvalErr[0]PerSample = 0.54800000; TotalTime = 0.11956s; TotalTimePerSample = 0.47822ms; SamplesPerSecond = 2091
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 141- 150]: SamplesSeen = 250; TrainLossPerSample =  0.72088358; EvalErr[0]PerSample = 0.48800000; TotalTime = 0.11897s; TotalTimePerSample = 0.47589ms; SamplesPerSecond = 2101
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 151- 160]: SamplesSeen = 250; TrainLossPerSample =  0.71798840; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.11620s; TotalTimePerSample = 0.46478ms; SamplesPerSecond = 2151
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 161- 170]: SamplesSeen = 250; TrainLossPerSample =  0.74162164; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11800s; TotalTimePerSample = 0.47198ms; SamplesPerSecond = 2118
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 171- 180]: SamplesSeen = 250; TrainLossPerSample =  0.71835128; EvalErr[0]PerSample = 0.51600000; TotalTime = 0.11839s; TotalTimePerSample = 0.47358ms; SamplesPerSecond = 2111
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 181- 190]: SamplesSeen = 250; TrainLossPerSample =  0.71529463; EvalErr[0]PerSample = 0.48400000; TotalTime = 0.12527s; TotalTimePerSample = 0.50107ms; SamplesPerSecond = 1995
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 191- 200]: SamplesSeen = 250; TrainLossPerSample =  0.71727657; EvalErr[0]PerSample = 0.53200000; TotalTime = 0.11979s; TotalTimePerSample = 0.47917ms; SamplesPerSecond = 2086
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 201- 210]: SamplesSeen = 250; TrainLossPerSample =  0.71745517; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11901s; TotalTimePerSample = 0.47605ms; SamplesPerSecond = 2100
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 211- 220]: SamplesSeen = 250; TrainLossPerSample =  0.72088398; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11482s; TotalTimePerSample = 0.45926ms; SamplesPerSecond = 2177
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 221- 230]: SamplesSeen = 250; TrainLossPerSample =  0.72006809; EvalErr[0]PerSample = 0.50800000; TotalTime = 0.12406s; TotalTimePerSample = 0.49625ms; SamplesPerSecond = 2015
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 231- 240]: SamplesSeen = 250; TrainLossPerSample =  0.71275468; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12120s; TotalTimePerSample = 0.48478ms; SamplesPerSecond = 2062
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 241- 250]: SamplesSeen = 250; TrainLossPerSample =  0.69644781; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11779s; TotalTimePerSample = 0.47117ms; SamplesPerSecond = 2122
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 251- 260]: SamplesSeen = 250; TrainLossPerSample =  0.70129698; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12147s; TotalTimePerSample = 0.48589ms; SamplesPerSecond = 2058
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 261- 270]: SamplesSeen = 250; TrainLossPerSample =  0.70768095; EvalErr[0]PerSample = 0.54400000; TotalTime = 0.12140s; TotalTimePerSample = 0.48561ms; SamplesPerSecond = 2059
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 271- 280]: SamplesSeen = 250; TrainLossPerSample =  0.69744379; EvalErr[0]PerSample = 0.52800000; TotalTime = 0.11737s; TotalTimePerSample = 0.46946ms; SamplesPerSecond = 2130
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 281- 290]: SamplesSeen = 250; TrainLossPerSample =  0.69266187; EvalErr[0]PerSample = 0.44800000; TotalTime = 0.11798s; TotalTimePerSample = 0.47194ms; SamplesPerSecond = 2118
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 291- 300]: SamplesSeen = 250; TrainLossPerSample =  0.69347266; EvalErr[0]PerSample = 0.49600000; TotalTime = 0.12121s; TotalTimePerSample = 0.48485ms; SamplesPerSecond = 2062
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 301- 310]: SamplesSeen = 250; TrainLossPerSample =  0.69257409; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.12546s; TotalTimePerSample = 0.50186ms; SamplesPerSecond = 1992
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 311- 320]: SamplesSeen = 250; TrainLossPerSample =  0.68625741; EvalErr[0]PerSample = 0.38000000; TotalTime = 0.12595s; TotalTimePerSample = 0.50380ms; SamplesPerSecond = 1984
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 321- 330]: SamplesSeen = 250; TrainLossPerSample =  0.69064011; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.12351s; TotalTimePerSample = 0.49405ms; SamplesPerSecond = 2024
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 331- 340]: SamplesSeen = 250; TrainLossPerSample =  0.70192154; EvalErr[0]PerSample = 0.46000000; TotalTime = 0.12384s; TotalTimePerSample = 0.49536ms; SamplesPerSecond = 2018
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 341- 350]: SamplesSeen = 250; TrainLossPerSample =  0.69058912; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.12360s; TotalTimePerSample = 0.49439ms; SamplesPerSecond = 2022
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 351- 360]: SamplesSeen = 250; TrainLossPerSample =  0.67041492; EvalErr[0]PerSample = 0.39200000; TotalTime = 0.12239s; TotalTimePerSample = 0.48957ms; SamplesPerSecond = 2042
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 361- 370]: SamplesSeen = 250; TrainLossPerSample =  0.65913973; EvalErr[0]PerSample = 0.35600000; TotalTime = 0.12837s; TotalTimePerSample = 0.51346ms; SamplesPerSecond = 1947
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 371- 380]: SamplesSeen = 250; TrainLossPerSample =  0.63919877; EvalErr[0]PerSample = 0.36400000; TotalTime = 0.14480s; TotalTimePerSample = 0.57919ms; SamplesPerSecond = 1726
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 381- 390]: SamplesSeen = 250; TrainLossPerSample =  0.61293883; EvalErr[0]PerSample = 0.19200000; TotalTime = 0.14498s; TotalTimePerSample = 0.57991ms; SamplesPerSecond = 1724
MPI Rank 0:  Epoch[ 1 of 4]-Minibatch[ 391- 400]: SamplesSeen = 250; TrainLossPerSample =  0.55255352; EvalErr[0]PerSample = 0.18800000; TotalTime = 0.14514s; TotalTimePerSample = 0.58057ms; SamplesPerSecond = 1722
MPI Rank 0: Finished Epoch[ 1 of 4]: [Training Set] TrainLossPerSample = 0.70019555; EvalErrPerSample = 0.4735; AvgLearningRatePerSample = 0.01999999955; EpochTime=5.368447
MPI Rank 0: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 0: starting epoch 1 at record count 10000, and file position 0
MPI Rank 0: already there from last epoch
MPI Rank 0: 
MPI Rank 0: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 4, NumGradientBits = 32).
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.50774625; EvalErr[0]PerSample = 0.24000000; TotalTime = 0.13805s; TotalTimePerSample = 0.55221ms; SamplesPerSecond = 1810
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.43388927; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.13897s; TotalTimePerSample = 0.55587ms; SamplesPerSecond = 1798
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.36674870; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14035s; TotalTimePerSample = 0.56139ms; SamplesPerSecond = 1781
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.33768765; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.13735s; TotalTimePerSample = 0.54939ms; SamplesPerSecond = 1820
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.30320946; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12889s; TotalTimePerSample = 0.51557ms; SamplesPerSecond = 1939
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.29576043; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.14907s; TotalTimePerSample = 0.59630ms; SamplesPerSecond = 1677
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24924491; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14579s; TotalTimePerSample = 0.58317ms; SamplesPerSecond = 1714
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24632415; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14396s; TotalTimePerSample = 0.57584ms; SamplesPerSecond = 1736
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20943158; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13623s; TotalTimePerSample = 0.54492ms; SamplesPerSecond = 1835
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19115996; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.13589s; TotalTimePerSample = 0.54355ms; SamplesPerSecond = 1839
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17923231; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13511s; TotalTimePerSample = 0.54042ms; SamplesPerSecond = 1850
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17075422; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.13630s; TotalTimePerSample = 0.54521ms; SamplesPerSecond = 1834
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14442371; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.13115s; TotalTimePerSample = 0.52461ms; SamplesPerSecond = 1906
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17753819; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.13713s; TotalTimePerSample = 0.54852ms; SamplesPerSecond = 1823
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15087855; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13776s; TotalTimePerSample = 0.55104ms; SamplesPerSecond = 1814
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19253023; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13519s; TotalTimePerSample = 0.54077ms; SamplesPerSecond = 1849
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17830684; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14500s; TotalTimePerSample = 0.58000ms; SamplesPerSecond = 1724
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15115428; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.14318s; TotalTimePerSample = 0.57271ms; SamplesPerSecond = 1746
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19135968; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14350s; TotalTimePerSample = 0.57402ms; SamplesPerSecond = 1742
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.21491485; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14562s; TotalTimePerSample = 0.58247ms; SamplesPerSecond = 1716
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18682346; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13541s; TotalTimePerSample = 0.54166ms; SamplesPerSecond = 1846
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18483205; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14328s; TotalTimePerSample = 0.57310ms; SamplesPerSecond = 1744
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14684504; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.14565s; TotalTimePerSample = 0.58259ms; SamplesPerSecond = 1716
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15322115; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14666s; TotalTimePerSample = 0.58663ms; SamplesPerSecond = 1704
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19882571; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.14043s; TotalTimePerSample = 0.56172ms; SamplesPerSecond = 1780
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13683833; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14034s; TotalTimePerSample = 0.56138ms; SamplesPerSecond = 1781
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18621188; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.13422s; TotalTimePerSample = 0.53688ms; SamplesPerSecond = 1862
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19408048; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13252s; TotalTimePerSample = 0.53009ms; SamplesPerSecond = 1886
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17298137; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14529s; TotalTimePerSample = 0.58114ms; SamplesPerSecond = 1720
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13265130; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.13280s; TotalTimePerSample = 0.53118ms; SamplesPerSecond = 1882
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17627178; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.13158s; TotalTimePerSample = 0.52633ms; SamplesPerSecond = 1899
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12734628; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12716s; TotalTimePerSample = 0.50865ms; SamplesPerSecond = 1965
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15108451; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12641s; TotalTimePerSample = 0.50564ms; SamplesPerSecond = 1977
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19729184; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12382s; TotalTimePerSample = 0.49529ms; SamplesPerSecond = 2019
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12857332; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12221s; TotalTimePerSample = 0.48882ms; SamplesPerSecond = 2045
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13867804; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12107s; TotalTimePerSample = 0.48428ms; SamplesPerSecond = 2064
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12786050; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12283s; TotalTimePerSample = 0.49134ms; SamplesPerSecond = 2035
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16643303; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12578s; TotalTimePerSample = 0.50312ms; SamplesPerSecond = 1987
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20440409; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12240s; TotalTimePerSample = 0.48960ms; SamplesPerSecond = 2042
MPI Rank 0:  Epoch[ 2 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14566238; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12173s; TotalTimePerSample = 0.48692ms; SamplesPerSecond = 2053
MPI Rank 0: Finished Epoch[ 2 of 4]: [Training Set] TrainLossPerSample = 0.20373029; EvalErrPerSample = 0.0827; AvgLearningRatePerSample = 0.00800000038; EpochTime=5.454988
MPI Rank 0: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 0: starting epoch 2 at record count 20000, and file position 0
MPI Rank 0: already there from last epoch
MPI Rank 0: 
MPI Rank 0: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 4, NumGradientBits = 32).
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12590085; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11986s; TotalTimePerSample = 0.47944ms; SamplesPerSecond = 2085
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17780229; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12511s; TotalTimePerSample = 0.50043ms; SamplesPerSecond = 1998
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14417637; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12349s; TotalTimePerSample = 0.49395ms; SamplesPerSecond = 2024
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15796895; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12131s; TotalTimePerSample = 0.48522ms; SamplesPerSecond = 2060
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17002999; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12305s; TotalTimePerSample = 0.49220ms; SamplesPerSecond = 2031
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18262114; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11573s; TotalTimePerSample = 0.46292ms; SamplesPerSecond = 2160
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14643694; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11568s; TotalTimePerSample = 0.46271ms; SamplesPerSecond = 2161
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18030528; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12346s; TotalTimePerSample = 0.49385ms; SamplesPerSecond = 2024
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15846150; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12240s; TotalTimePerSample = 0.48958ms; SamplesPerSecond = 2042
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14486534; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12005s; TotalTimePerSample = 0.48020ms; SamplesPerSecond = 2082
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13469093; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11867s; TotalTimePerSample = 0.47468ms; SamplesPerSecond = 2106
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13720019; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12647s; TotalTimePerSample = 0.50587ms; SamplesPerSecond = 1976
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11641295; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12012s; TotalTimePerSample = 0.48047ms; SamplesPerSecond = 2081
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16786647; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.11872s; TotalTimePerSample = 0.47488ms; SamplesPerSecond = 2105
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12811514; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12433s; TotalTimePerSample = 0.49730ms; SamplesPerSecond = 2010
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17257851; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.11777s; TotalTimePerSample = 0.47109ms; SamplesPerSecond = 2122
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17623656; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12099s; TotalTimePerSample = 0.48397ms; SamplesPerSecond = 2066
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14121117; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12178s; TotalTimePerSample = 0.48710ms; SamplesPerSecond = 2052
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19243443; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12140s; TotalTimePerSample = 0.48558ms; SamplesPerSecond = 2059
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20908161; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12905s; TotalTimePerSample = 0.51618ms; SamplesPerSecond = 1937
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18472067; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12856s; TotalTimePerSample = 0.51424ms; SamplesPerSecond = 1944
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18185535; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12184s; TotalTimePerSample = 0.48735ms; SamplesPerSecond = 2051
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14074205; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.13076s; TotalTimePerSample = 0.52305ms; SamplesPerSecond = 1911
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14871620; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11964s; TotalTimePerSample = 0.47857ms; SamplesPerSecond = 2089
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20299704; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12301s; TotalTimePerSample = 0.49202ms; SamplesPerSecond = 2032
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12852038; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12072s; TotalTimePerSample = 0.48289ms; SamplesPerSecond = 2070
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18660439; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12280s; TotalTimePerSample = 0.49120ms; SamplesPerSecond = 2035
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19575997; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12056s; TotalTimePerSample = 0.48223ms; SamplesPerSecond = 2073
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16667676; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12549s; TotalTimePerSample = 0.50197ms; SamplesPerSecond = 1992
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12526169; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12500s; TotalTimePerSample = 0.50000ms; SamplesPerSecond = 2000
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17392131; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12278s; TotalTimePerSample = 0.49111ms; SamplesPerSecond = 2036
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12281615; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12280s; TotalTimePerSample = 0.49121ms; SamplesPerSecond = 2035
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14759390; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.11641s; TotalTimePerSample = 0.46564ms; SamplesPerSecond = 2147
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19801300; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12504s; TotalTimePerSample = 0.50017ms; SamplesPerSecond = 1999
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12593395; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12272s; TotalTimePerSample = 0.49090ms; SamplesPerSecond = 2037
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13756617; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12083s; TotalTimePerSample = 0.48331ms; SamplesPerSecond = 2069
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12838526; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12856s; TotalTimePerSample = 0.51424ms; SamplesPerSecond = 1944
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16654369; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.13337s; TotalTimePerSample = 0.53348ms; SamplesPerSecond = 1874
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20658951; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12150s; TotalTimePerSample = 0.48602ms; SamplesPerSecond = 2057
MPI Rank 0:  Epoch[ 3 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14583322; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.11497s; TotalTimePerSample = 0.45986ms; SamplesPerSecond = 2174
MPI Rank 0: Finished Epoch[ 3 of 4]: [Training Set] TrainLossPerSample = 0.15948618; EvalErrPerSample = 0.0766; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.926197
MPI Rank 0: Starting Epoch 4: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 0: starting epoch 3 at record count 30000, and file position 0
MPI Rank 0: already there from last epoch
MPI Rank 0: 
MPI Rank 0: Starting minibatch loop, DataParallelSGD training (MyRank = 0, NumNodes = 4, NumGradientBits = 32).
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12371232; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12039s; TotalTimePerSample = 0.48155ms; SamplesPerSecond = 2076
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18070515; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12069s; TotalTimePerSample = 0.48277ms; SamplesPerSecond = 2071
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14239730; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12713s; TotalTimePerSample = 0.50853ms; SamplesPerSecond = 1966
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15630155; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.11918s; TotalTimePerSample = 0.47671ms; SamplesPerSecond = 2097
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16935525; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11887s; TotalTimePerSample = 0.47550ms; SamplesPerSecond = 2103
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18198833; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12215s; TotalTimePerSample = 0.48859ms; SamplesPerSecond = 2046
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14475946; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12015s; TotalTimePerSample = 0.48061ms; SamplesPerSecond = 2080
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18021601; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11829s; TotalTimePerSample = 0.47316ms; SamplesPerSecond = 2113
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15849308; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11851s; TotalTimePerSample = 0.47403ms; SamplesPerSecond = 2109
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14474425; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12129s; TotalTimePerSample = 0.48518ms; SamplesPerSecond = 2061
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13362926; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12019s; TotalTimePerSample = 0.48075ms; SamplesPerSecond = 2080
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13708299; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12225s; TotalTimePerSample = 0.48900ms; SamplesPerSecond = 2045
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11569777; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12067s; TotalTimePerSample = 0.48266ms; SamplesPerSecond = 2071
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16892331; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.11980s; TotalTimePerSample = 0.47918ms; SamplesPerSecond = 2086
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12752162; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12049s; TotalTimePerSample = 0.48195ms; SamplesPerSecond = 2074
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17100866; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12280s; TotalTimePerSample = 0.49119ms; SamplesPerSecond = 2035
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17660425; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.11920s; TotalTimePerSample = 0.47680ms; SamplesPerSecond = 2097
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14105803; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12263s; TotalTimePerSample = 0.49050ms; SamplesPerSecond = 2038
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19333552; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12588s; TotalTimePerSample = 0.50350ms; SamplesPerSecond = 1986
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20859524; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14396s; TotalTimePerSample = 0.57582ms; SamplesPerSecond = 1736
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18499677; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12856s; TotalTimePerSample = 0.51423ms; SamplesPerSecond = 1944
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18152438; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12753s; TotalTimePerSample = 0.51010ms; SamplesPerSecond = 1960
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14037157; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11991s; TotalTimePerSample = 0.47965ms; SamplesPerSecond = 2084
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14866862; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12057s; TotalTimePerSample = 0.48229ms; SamplesPerSecond = 2073
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20347747; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.11798s; TotalTimePerSample = 0.47193ms; SamplesPerSecond = 2118
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12815012; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12094s; TotalTimePerSample = 0.48378ms; SamplesPerSecond = 2067
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18672810; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12091s; TotalTimePerSample = 0.48365ms; SamplesPerSecond = 2067
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19552990; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12224s; TotalTimePerSample = 0.48896ms; SamplesPerSecond = 2045
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16452642; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12373s; TotalTimePerSample = 0.49491ms; SamplesPerSecond = 2020
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12461825; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12109s; TotalTimePerSample = 0.48435ms; SamplesPerSecond = 2064
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17285251; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12231s; TotalTimePerSample = 0.48923ms; SamplesPerSecond = 2044
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12253620; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12255s; TotalTimePerSample = 0.49020ms; SamplesPerSecond = 2039
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14723334; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12410s; TotalTimePerSample = 0.49640ms; SamplesPerSecond = 2014
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19789537; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12264s; TotalTimePerSample = 0.49054ms; SamplesPerSecond = 2038
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12575877; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12440s; TotalTimePerSample = 0.49760ms; SamplesPerSecond = 2009
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13745928; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12623s; TotalTimePerSample = 0.50490ms; SamplesPerSecond = 1980
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12839652; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12027s; TotalTimePerSample = 0.48109ms; SamplesPerSecond = 2078
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16647280; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12139s; TotalTimePerSample = 0.48556ms; SamplesPerSecond = 2059
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20679434; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12487s; TotalTimePerSample = 0.49948ms; SamplesPerSecond = 2002
MPI Rank 0:  Epoch[ 4 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14585245; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12520s; TotalTimePerSample = 0.50081ms; SamplesPerSecond = 1996
MPI Rank 0: Finished Epoch[ 4 of 4]: [Training Set] TrainLossPerSample = 0.15914931; EvalErrPerSample = 0.0767; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.931563
MPI Rank 0: CNTKCommandTrainEnd: SimpleMultiGPU
MPI Rank 0: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: Redirecting stderr to file C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr_SimpleMultiGPU.logrank1
MPI Rank 1: -------------------------------------------------------------------
MPI Rank 1: Build info: 
MPI Rank 1: 
MPI Rank 1: 		Built time: Oct 24 2015 13:33:25
MPI Rank 1: 		Last modified date: Thu Oct 22 16:00:27 2015
MPI Rank 1: 		Built by amitaga on Amitaga-Win-DT3           
MPI Rank 1: 		Build Path: E:\NetScale\CNTK\git_repos\cplx_master2\MachineLearning\CNTK\
MPI Rank 1: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 1: -------------------------------------------------------------------
MPI Rank 1: running on Amitaga-Win-DT3 at 2015/10/24 21:49:38
MPI Rank 1: command line: 
MPI Rank 1: E:\NetScale\CNTK\git_repos\cplx_master2\x64\debug\cntk.exe configFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining/SimpleMultiGPU.config RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining DeviceId=0 precision=float SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]] stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr 
MPI Rank 1: 
MPI Rank 1: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: deviceId=$DeviceId$
MPI Rank 1: command=SimpleMultiGPU
MPI Rank 1: precision=float
MPI Rank 1: parallelTrain=true
MPI Rank 1: SimpleMultiGPU=[
MPI Rank 1:     action=train
MPI Rank 1:     modelPath=$RunDir$/models/Simple.dnn
MPI Rank 1:     deviceId=$DeviceId$
MPI Rank 1:     traceLevel=1
MPI Rank 1:     SimpleNetworkBuilder=[
MPI Rank 1:         layerSizes=2:50*2:2
MPI Rank 1:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 1:         evalCriterion=ErrorPrediction
MPI Rank 1:         layerTypes=Sigmoid
MPI Rank 1:         initValueScale=1.0
MPI Rank 1:         applyMeanVarNorm=true
MPI Rank 1:         uniformInit=true
MPI Rank 1:         needPrior=true
MPI Rank 1:     ]
MPI Rank 1:     SGD=[
MPI Rank 1:         epochSize=0 
MPI Rank 1:         minibatchSize=25
MPI Rank 1:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 1:         momentumPerMB=0.9
MPI Rank 1:         dropoutRate=0.0
MPI Rank 1:         maxEpochs=4
MPI Rank 1:         ParallelTrain=[
MPI Rank 1:             parallelizationMethod=DataParallelSGD
MPI Rank 1:             DataParallelSGD=[
MPI Rank 1:               gradientBits=1
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader=[
MPI Rank 1:       readerType=UCIFastReader
MPI Rank 1:       file=$DataDir$/SimpleDataTrain.txt
MPI Rank 1:       miniBatchMode=Partial
MPI Rank 1:       randomize=None
MPI Rank 1:       verbosity=1   
MPI Rank 1:       features=[
MPI Rank 1: dim=2      
MPI Rank 1: start=0    
MPI Rank 1:       ]
MPI Rank 1:       labels=[
MPI Rank 1: start=2      
MPI Rank 1: dim=1        
MPI Rank 1: labelDim=2   
MPI Rank 1:         labelMappingFile=$DataDir$/SimpleMapping.txt
MPI Rank 1:       ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 1: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 1: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 1: DeviceId=0
MPI Rank 1: precision=float
MPI Rank 1: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 1: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 1: 
MPI Rank 1: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: deviceId=0
MPI Rank 1: command=SimpleMultiGPU
MPI Rank 1: precision=float
MPI Rank 1: parallelTrain=true
MPI Rank 1: SimpleMultiGPU=[
MPI Rank 1:     action=train
MPI Rank 1:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 1:     deviceId=0
MPI Rank 1:     traceLevel=1
MPI Rank 1:     SimpleNetworkBuilder=[
MPI Rank 1:         layerSizes=2:50*2:2
MPI Rank 1:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 1:         evalCriterion=ErrorPrediction
MPI Rank 1:         layerTypes=Sigmoid
MPI Rank 1:         initValueScale=1.0
MPI Rank 1:         applyMeanVarNorm=true
MPI Rank 1:         uniformInit=true
MPI Rank 1:         needPrior=true
MPI Rank 1:     ]
MPI Rank 1:     SGD=[
MPI Rank 1:         epochSize=0 
MPI Rank 1:         minibatchSize=25
MPI Rank 1:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 1:         momentumPerMB=0.9
MPI Rank 1:         dropoutRate=0.0
MPI Rank 1:         maxEpochs=4
MPI Rank 1:         ParallelTrain=[
MPI Rank 1:             parallelizationMethod=DataParallelSGD
MPI Rank 1:             DataParallelSGD=[
MPI Rank 1:               gradientBits=1
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader=[
MPI Rank 1:       readerType=UCIFastReader
MPI Rank 1:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 1:       miniBatchMode=Partial
MPI Rank 1:       randomize=None
MPI Rank 1:       verbosity=1   
MPI Rank 1:       features=[
MPI Rank 1: dim=2      
MPI Rank 1: start=0    
MPI Rank 1:       ]
MPI Rank 1:       labels=[
MPI Rank 1: start=2      
MPI Rank 1: dim=1        
MPI Rank 1: labelDim=2   
MPI Rank 1:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 1:       ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 1: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 1: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 1: DeviceId=0
MPI Rank 1: precision=float
MPI Rank 1: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 1: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 1: 
MPI Rank 1: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: SimpleMultiGPU.config:command=SimpleMultiGPU
MPI Rank 1: configparameters: SimpleMultiGPU.config:ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 1: configparameters: SimpleMultiGPU.config:DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 1: configparameters: SimpleMultiGPU.config:deviceId=0
MPI Rank 1: configparameters: SimpleMultiGPU.config:parallelTrain=true
MPI Rank 1: configparameters: SimpleMultiGPU.config:precision=float
MPI Rank 1: configparameters: SimpleMultiGPU.config:RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 1: configparameters: SimpleMultiGPU.config:SimpleMultiGPU=[
MPI Rank 1:     action=train
MPI Rank 1:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 1:     deviceId=0
MPI Rank 1:     traceLevel=1
MPI Rank 1:     SimpleNetworkBuilder=[
MPI Rank 1:         layerSizes=2:50*2:2
MPI Rank 1:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 1:         evalCriterion=ErrorPrediction
MPI Rank 1:         layerTypes=Sigmoid
MPI Rank 1:         initValueScale=1.0
MPI Rank 1:         applyMeanVarNorm=true
MPI Rank 1:         uniformInit=true
MPI Rank 1:         needPrior=true
MPI Rank 1:     ]
MPI Rank 1:     SGD=[
MPI Rank 1:         epochSize=0 
MPI Rank 1:         minibatchSize=25
MPI Rank 1:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 1:         momentumPerMB=0.9
MPI Rank 1:         dropoutRate=0.0
MPI Rank 1:         maxEpochs=4
MPI Rank 1:         ParallelTrain=[
MPI Rank 1:             parallelizationMethod=DataParallelSGD
MPI Rank 1:             DataParallelSGD=[
MPI Rank 1:               gradientBits=1
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader=[
MPI Rank 1:       readerType=UCIFastReader
MPI Rank 1:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 1:       miniBatchMode=Partial
MPI Rank 1:       randomize=None
MPI Rank 1:       verbosity=1   
MPI Rank 1:       features=[
MPI Rank 1: dim=2      
MPI Rank 1: start=0    
MPI Rank 1:       ]
MPI Rank 1:       labels=[
MPI Rank 1: start=2      
MPI Rank 1: dim=1        
MPI Rank 1: labelDim=2   
MPI Rank 1:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 1:       ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 1: 
MPI Rank 1: configparameters: SimpleMultiGPU.config:stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 1: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: command: SimpleMultiGPU 
MPI Rank 1: precision = float
MPI Rank 1: CNTKModelPath: C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 1: CNTKCommandTrainInfo: SimpleMultiGPU : 4
MPI Rank 1: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 4
MPI Rank 1: CNTKCommandTrainBegin: SimpleMultiGPU
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading uci file E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 1: SetUniformRandomValue (GPU): creating curand object with seed 1
MPI Rank 1: GetTrainCriterionNodes  ...
MPI Rank 1: GetEvalCriterionNodes  ...
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating for node CrossEntropyWithSoftmax. 20 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node CrossEntropyWithSoftmax. 12 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node CrossEntropyWithSoftmax, final verification.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 	NodeName: InvStdOfFeatures
MPI Rank 1: 	NodeName: MeanOfFeatures
MPI Rank 1: 	NodeName: Prior
MPI Rank 1: starting at epoch 0 counting lines to determine record count
MPI Rank 1: 
MPI Rank 1:  10000 records found
MPI Rank 1: starting epoch 0 at record count 0, and file position 0
MPI Rank 1: already there from last epoch
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating for node InvStdOfFeatures. 2 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node InvStdOfFeatures, final verification.
MPI Rank 1: 
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating for node MeanOfFeatures. 2 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node MeanOfFeatures, final verification.
MPI Rank 1: 
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating for node Prior. 2 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node Prior. 1 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node Prior, final verification.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 1: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 1: 
MPI Rank 1: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: Set Max Temp Mem Size For Convolution Nodes to 0 samples.
MPI Rank 1: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000 
MPI Rank 1: starting epoch 0 at record count 0, and file position 0
MPI Rank 1: already there from last epoch
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating for node EvalErrorPrediction. 20 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node EvalErrorPrediction. 10 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: Validating for node EvalErrorPrediction, final verification.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 1: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 1: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 1: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 1: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 1: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 1: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 1: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 1: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 1: 
MPI Rank 1: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Starting minibatch loop, DataParallelSGD training (MyRank = 1, NumNodes = 4, NumGradientBits = 32).
MPI Rank 1: DecimateMinibatchSequences: WARNING: Number of parallel utterances 25 not a multiple of number of GPUs 4, GPU usage will be suboptimal.
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[   1-  10]: SamplesSeen = 250; TrainLossPerSample =  0.70007977; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.21240s; TotalTimePerSample = 0.84959ms; SamplesPerSecond = 1177
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  11-  20]: SamplesSeen = 250; TrainLossPerSample =  0.71514542; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.17214s; TotalTimePerSample = 0.68857ms; SamplesPerSecond = 1452
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  21-  30]: SamplesSeen = 250; TrainLossPerSample =  0.72945595; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.16860s; TotalTimePerSample = 0.67442ms; SamplesPerSecond = 1482
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  31-  40]: SamplesSeen = 250; TrainLossPerSample =  0.70079058; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.16047s; TotalTimePerSample = 0.64187ms; SamplesPerSecond = 1557
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  41-  50]: SamplesSeen = 250; TrainLossPerSample =  0.70605615; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.16232s; TotalTimePerSample = 0.64926ms; SamplesPerSecond = 1540
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  51-  60]: SamplesSeen = 250; TrainLossPerSample =  0.71572398; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.15152s; TotalTimePerSample = 0.60609ms; SamplesPerSecond = 1649
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  61-  70]: SamplesSeen = 250; TrainLossPerSample =  0.72149851; EvalErr[0]PerSample = 0.48000000; TotalTime = 0.14175s; TotalTimePerSample = 0.56700ms; SamplesPerSecond = 1763
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  71-  80]: SamplesSeen = 250; TrainLossPerSample =  0.79845604; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.14218s; TotalTimePerSample = 0.56872ms; SamplesPerSecond = 1758
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  81-  90]: SamplesSeen = 250; TrainLossPerSample =  0.69665186; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.13820s; TotalTimePerSample = 0.55280ms; SamplesPerSecond = 1808
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[  91- 100]: SamplesSeen = 250; TrainLossPerSample =  0.70723326; EvalErr[0]PerSample = 0.49200000; TotalTime = 0.12737s; TotalTimePerSample = 0.50948ms; SamplesPerSecond = 1962
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 101- 110]: SamplesSeen = 250; TrainLossPerSample =  0.71420345; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.13145s; TotalTimePerSample = 0.52581ms; SamplesPerSecond = 1901
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 111- 120]: SamplesSeen = 250; TrainLossPerSample =  0.69535258; EvalErr[0]PerSample = 0.43600000; TotalTime = 0.12711s; TotalTimePerSample = 0.50843ms; SamplesPerSecond = 1966
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 121- 130]: SamplesSeen = 250; TrainLossPerSample =  0.70078531; EvalErr[0]PerSample = 0.44000000; TotalTime = 0.12442s; TotalTimePerSample = 0.49766ms; SamplesPerSecond = 2009
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 131- 140]: SamplesSeen = 250; TrainLossPerSample =  0.71857916; EvalErr[0]PerSample = 0.54800000; TotalTime = 0.11861s; TotalTimePerSample = 0.47442ms; SamplesPerSecond = 2107
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 141- 150]: SamplesSeen = 250; TrainLossPerSample =  0.72088358; EvalErr[0]PerSample = 0.48800000; TotalTime = 0.11955s; TotalTimePerSample = 0.47821ms; SamplesPerSecond = 2091
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 151- 160]: SamplesSeen = 250; TrainLossPerSample =  0.71798840; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.11551s; TotalTimePerSample = 0.46204ms; SamplesPerSecond = 2164
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 161- 170]: SamplesSeen = 250; TrainLossPerSample =  0.74162164; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11801s; TotalTimePerSample = 0.47202ms; SamplesPerSecond = 2118
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 171- 180]: SamplesSeen = 250; TrainLossPerSample =  0.71835128; EvalErr[0]PerSample = 0.51600000; TotalTime = 0.11850s; TotalTimePerSample = 0.47402ms; SamplesPerSecond = 2109
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 181- 190]: SamplesSeen = 250; TrainLossPerSample =  0.71529463; EvalErr[0]PerSample = 0.48400000; TotalTime = 0.12523s; TotalTimePerSample = 0.50093ms; SamplesPerSecond = 1996
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 191- 200]: SamplesSeen = 250; TrainLossPerSample =  0.71727657; EvalErr[0]PerSample = 0.53200000; TotalTime = 0.12007s; TotalTimePerSample = 0.48030ms; SamplesPerSecond = 2082
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 201- 210]: SamplesSeen = 250; TrainLossPerSample =  0.71745517; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11898s; TotalTimePerSample = 0.47592ms; SamplesPerSecond = 2101
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 211- 220]: SamplesSeen = 250; TrainLossPerSample =  0.72088398; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11488s; TotalTimePerSample = 0.45952ms; SamplesPerSecond = 2176
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 221- 230]: SamplesSeen = 250; TrainLossPerSample =  0.72006809; EvalErr[0]PerSample = 0.50800000; TotalTime = 0.12370s; TotalTimePerSample = 0.49478ms; SamplesPerSecond = 2021
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 231- 240]: SamplesSeen = 250; TrainLossPerSample =  0.71275468; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12142s; TotalTimePerSample = 0.48566ms; SamplesPerSecond = 2059
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 241- 250]: SamplesSeen = 250; TrainLossPerSample =  0.69644781; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11773s; TotalTimePerSample = 0.47092ms; SamplesPerSecond = 2123
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 251- 260]: SamplesSeen = 250; TrainLossPerSample =  0.70129698; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12147s; TotalTimePerSample = 0.48588ms; SamplesPerSecond = 2058
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 261- 270]: SamplesSeen = 250; TrainLossPerSample =  0.70768095; EvalErr[0]PerSample = 0.54400000; TotalTime = 0.12122s; TotalTimePerSample = 0.48487ms; SamplesPerSecond = 2062
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 271- 280]: SamplesSeen = 250; TrainLossPerSample =  0.69744379; EvalErr[0]PerSample = 0.52800000; TotalTime = 0.11718s; TotalTimePerSample = 0.46871ms; SamplesPerSecond = 2133
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 281- 290]: SamplesSeen = 250; TrainLossPerSample =  0.69266187; EvalErr[0]PerSample = 0.44800000; TotalTime = 0.11804s; TotalTimePerSample = 0.47215ms; SamplesPerSecond = 2117
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 291- 300]: SamplesSeen = 250; TrainLossPerSample =  0.69347266; EvalErr[0]PerSample = 0.49600000; TotalTime = 0.12116s; TotalTimePerSample = 0.48466ms; SamplesPerSecond = 2063
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 301- 310]: SamplesSeen = 250; TrainLossPerSample =  0.69257409; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.12555s; TotalTimePerSample = 0.50218ms; SamplesPerSecond = 1991
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 311- 320]: SamplesSeen = 250; TrainLossPerSample =  0.68625741; EvalErr[0]PerSample = 0.38000000; TotalTime = 0.12602s; TotalTimePerSample = 0.50407ms; SamplesPerSecond = 1983
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 321- 330]: SamplesSeen = 250; TrainLossPerSample =  0.69064011; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.12332s; TotalTimePerSample = 0.49329ms; SamplesPerSecond = 2027
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 331- 340]: SamplesSeen = 250; TrainLossPerSample =  0.70192154; EvalErr[0]PerSample = 0.46000000; TotalTime = 0.12449s; TotalTimePerSample = 0.49795ms; SamplesPerSecond = 2008
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 341- 350]: SamplesSeen = 250; TrainLossPerSample =  0.69058912; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.12387s; TotalTimePerSample = 0.49546ms; SamplesPerSecond = 2018
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 351- 360]: SamplesSeen = 250; TrainLossPerSample =  0.67041492; EvalErr[0]PerSample = 0.39200000; TotalTime = 0.12148s; TotalTimePerSample = 0.48592ms; SamplesPerSecond = 2057
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 361- 370]: SamplesSeen = 250; TrainLossPerSample =  0.65913973; EvalErr[0]PerSample = 0.35600000; TotalTime = 0.12846s; TotalTimePerSample = 0.51382ms; SamplesPerSecond = 1946
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 371- 380]: SamplesSeen = 250; TrainLossPerSample =  0.63919877; EvalErr[0]PerSample = 0.36400000; TotalTime = 0.14472s; TotalTimePerSample = 0.57890ms; SamplesPerSecond = 1727
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 381- 390]: SamplesSeen = 250; TrainLossPerSample =  0.61293883; EvalErr[0]PerSample = 0.19200000; TotalTime = 0.14464s; TotalTimePerSample = 0.57857ms; SamplesPerSecond = 1728
MPI Rank 1:  Epoch[ 1 of 4]-Minibatch[ 391- 400]: SamplesSeen = 250; TrainLossPerSample =  0.55255352; EvalErr[0]PerSample = 0.18800000; TotalTime = 0.14544s; TotalTimePerSample = 0.58177ms; SamplesPerSecond = 1718
MPI Rank 1: Finished Epoch[ 1 of 4]: [Training Set] TrainLossPerSample = 0.70019555; EvalErrPerSample = 0.4735; AvgLearningRatePerSample = 0.01999999955; EpochTime=5.368273
MPI Rank 1: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 1: starting epoch 1 at record count 10000, and file position 0
MPI Rank 1: already there from last epoch
MPI Rank 1: 
MPI Rank 1: Starting minibatch loop, DataParallelSGD training (MyRank = 1, NumNodes = 4, NumGradientBits = 32).
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.50774625; EvalErr[0]PerSample = 0.24000000; TotalTime = 0.13816s; TotalTimePerSample = 0.55263ms; SamplesPerSecond = 1809
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.43388927; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.13876s; TotalTimePerSample = 0.55503ms; SamplesPerSecond = 1801
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.36674870; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14014s; TotalTimePerSample = 0.56057ms; SamplesPerSecond = 1783
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.33768765; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.13764s; TotalTimePerSample = 0.55054ms; SamplesPerSecond = 1816
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.30320946; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12862s; TotalTimePerSample = 0.51449ms; SamplesPerSecond = 1943
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.29576043; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.14846s; TotalTimePerSample = 0.59382ms; SamplesPerSecond = 1684
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24924491; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14674s; TotalTimePerSample = 0.58698ms; SamplesPerSecond = 1703
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24632415; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14428s; TotalTimePerSample = 0.57712ms; SamplesPerSecond = 1732
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20943158; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13610s; TotalTimePerSample = 0.54438ms; SamplesPerSecond = 1836
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19115996; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.13467s; TotalTimePerSample = 0.53866ms; SamplesPerSecond = 1856
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17923231; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13753s; TotalTimePerSample = 0.55014ms; SamplesPerSecond = 1817
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17075422; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.13578s; TotalTimePerSample = 0.54313ms; SamplesPerSecond = 1841
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14442371; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.13113s; TotalTimePerSample = 0.52451ms; SamplesPerSecond = 1906
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17753819; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.13552s; TotalTimePerSample = 0.54206ms; SamplesPerSecond = 1844
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15087855; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13849s; TotalTimePerSample = 0.55396ms; SamplesPerSecond = 1805
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19253023; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13517s; TotalTimePerSample = 0.54068ms; SamplesPerSecond = 1849
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17830684; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14493s; TotalTimePerSample = 0.57970ms; SamplesPerSecond = 1725
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15115428; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.14346s; TotalTimePerSample = 0.57384ms; SamplesPerSecond = 1742
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19135968; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14339s; TotalTimePerSample = 0.57354ms; SamplesPerSecond = 1743
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.21491485; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14541s; TotalTimePerSample = 0.58166ms; SamplesPerSecond = 1719
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18682346; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13568s; TotalTimePerSample = 0.54271ms; SamplesPerSecond = 1842
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18483205; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14328s; TotalTimePerSample = 0.57313ms; SamplesPerSecond = 1744
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14684504; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.14565s; TotalTimePerSample = 0.58262ms; SamplesPerSecond = 1716
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15322115; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14660s; TotalTimePerSample = 0.58641ms; SamplesPerSecond = 1705
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19882571; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.14054s; TotalTimePerSample = 0.56215ms; SamplesPerSecond = 1778
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13683833; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14033s; TotalTimePerSample = 0.56131ms; SamplesPerSecond = 1781
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18621188; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.13395s; TotalTimePerSample = 0.53582ms; SamplesPerSecond = 1866
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19408048; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13231s; TotalTimePerSample = 0.52925ms; SamplesPerSecond = 1889
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17298137; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14681s; TotalTimePerSample = 0.58725ms; SamplesPerSecond = 1702
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13265130; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.13163s; TotalTimePerSample = 0.52651ms; SamplesPerSecond = 1899
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17627178; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.13127s; TotalTimePerSample = 0.52509ms; SamplesPerSecond = 1904
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12734628; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12747s; TotalTimePerSample = 0.50988ms; SamplesPerSecond = 1961
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15108451; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12633s; TotalTimePerSample = 0.50532ms; SamplesPerSecond = 1978
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19729184; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12381s; TotalTimePerSample = 0.49523ms; SamplesPerSecond = 2019
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12857332; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12245s; TotalTimePerSample = 0.48981ms; SamplesPerSecond = 2041
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13867804; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12077s; TotalTimePerSample = 0.48310ms; SamplesPerSecond = 2069
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12786050; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12252s; TotalTimePerSample = 0.49008ms; SamplesPerSecond = 2040
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16643303; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12600s; TotalTimePerSample = 0.50401ms; SamplesPerSecond = 1984
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20440409; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12218s; TotalTimePerSample = 0.48874ms; SamplesPerSecond = 2046
MPI Rank 1:  Epoch[ 2 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14566238; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12172s; TotalTimePerSample = 0.48689ms; SamplesPerSecond = 2053
MPI Rank 1: Finished Epoch[ 2 of 4]: [Training Set] TrainLossPerSample = 0.20373029; EvalErrPerSample = 0.0827; AvgLearningRatePerSample = 0.00800000038; EpochTime=5.454826
MPI Rank 1: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 1: starting epoch 2 at record count 20000, and file position 0
MPI Rank 1: already there from last epoch
MPI Rank 1: 
MPI Rank 1: Starting minibatch loop, DataParallelSGD training (MyRank = 1, NumNodes = 4, NumGradientBits = 32).
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12590085; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12007s; TotalTimePerSample = 0.48028ms; SamplesPerSecond = 2082
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17780229; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12506s; TotalTimePerSample = 0.50025ms; SamplesPerSecond = 1999
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14417637; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12289s; TotalTimePerSample = 0.49155ms; SamplesPerSecond = 2034
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15796895; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12196s; TotalTimePerSample = 0.48784ms; SamplesPerSecond = 2049
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17002999; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12311s; TotalTimePerSample = 0.49244ms; SamplesPerSecond = 2030
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18262114; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11534s; TotalTimePerSample = 0.46136ms; SamplesPerSecond = 2167
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14643694; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11576s; TotalTimePerSample = 0.46302ms; SamplesPerSecond = 2159
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18030528; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12379s; TotalTimePerSample = 0.49516ms; SamplesPerSecond = 2019
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15846150; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12204s; TotalTimePerSample = 0.48814ms; SamplesPerSecond = 2048
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14486534; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12041s; TotalTimePerSample = 0.48164ms; SamplesPerSecond = 2076
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13469093; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11856s; TotalTimePerSample = 0.47423ms; SamplesPerSecond = 2108
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13720019; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12682s; TotalTimePerSample = 0.50730ms; SamplesPerSecond = 1971
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11641295; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11948s; TotalTimePerSample = 0.47792ms; SamplesPerSecond = 2092
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16786647; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.11879s; TotalTimePerSample = 0.47514ms; SamplesPerSecond = 2104
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12811514; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12407s; TotalTimePerSample = 0.49630ms; SamplesPerSecond = 2014
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17257851; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.11792s; TotalTimePerSample = 0.47167ms; SamplesPerSecond = 2120
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17623656; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12138s; TotalTimePerSample = 0.48552ms; SamplesPerSecond = 2059
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14121117; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12145s; TotalTimePerSample = 0.48581ms; SamplesPerSecond = 2058
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19243443; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12131s; TotalTimePerSample = 0.48526ms; SamplesPerSecond = 2060
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20908161; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12898s; TotalTimePerSample = 0.51590ms; SamplesPerSecond = 1938
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18472067; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12863s; TotalTimePerSample = 0.51450ms; SamplesPerSecond = 1943
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18185535; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12226s; TotalTimePerSample = 0.48902ms; SamplesPerSecond = 2044
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14074205; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.13032s; TotalTimePerSample = 0.52128ms; SamplesPerSecond = 1918
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14871620; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12011s; TotalTimePerSample = 0.48045ms; SamplesPerSecond = 2081
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20299704; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12255s; TotalTimePerSample = 0.49020ms; SamplesPerSecond = 2040
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12852038; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12023s; TotalTimePerSample = 0.48093ms; SamplesPerSecond = 2079
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18660439; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12387s; TotalTimePerSample = 0.49548ms; SamplesPerSecond = 2018
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19575997; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12145s; TotalTimePerSample = 0.48581ms; SamplesPerSecond = 2058
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16667676; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12442s; TotalTimePerSample = 0.49768ms; SamplesPerSecond = 2009
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12526169; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12472s; TotalTimePerSample = 0.49888ms; SamplesPerSecond = 2004
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17392131; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12284s; TotalTimePerSample = 0.49135ms; SamplesPerSecond = 2035
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12281615; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12305s; TotalTimePerSample = 0.49218ms; SamplesPerSecond = 2031
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14759390; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.11614s; TotalTimePerSample = 0.46454ms; SamplesPerSecond = 2152
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19801300; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12518s; TotalTimePerSample = 0.50072ms; SamplesPerSecond = 1997
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12593395; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12264s; TotalTimePerSample = 0.49056ms; SamplesPerSecond = 2038
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13756617; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12058s; TotalTimePerSample = 0.48234ms; SamplesPerSecond = 2073
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12838526; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12910s; TotalTimePerSample = 0.51639ms; SamplesPerSecond = 1936
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16654369; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.13325s; TotalTimePerSample = 0.53300ms; SamplesPerSecond = 1876
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20658951; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12111s; TotalTimePerSample = 0.48445ms; SamplesPerSecond = 2064
MPI Rank 1:  Epoch[ 3 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14583322; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.11517s; TotalTimePerSample = 0.46067ms; SamplesPerSecond = 2170
MPI Rank 1: Finished Epoch[ 3 of 4]: [Training Set] TrainLossPerSample = 0.15948618; EvalErrPerSample = 0.0766; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.926445
MPI Rank 1: Starting Epoch 4: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 1: starting epoch 3 at record count 30000, and file position 0
MPI Rank 1: already there from last epoch
MPI Rank 1: 
MPI Rank 1: Starting minibatch loop, DataParallelSGD training (MyRank = 1, NumNodes = 4, NumGradientBits = 32).
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12371232; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12017s; TotalTimePerSample = 0.48068ms; SamplesPerSecond = 2080
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18070515; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12035s; TotalTimePerSample = 0.48139ms; SamplesPerSecond = 2077
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14239730; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12719s; TotalTimePerSample = 0.50874ms; SamplesPerSecond = 1965
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15630155; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.11979s; TotalTimePerSample = 0.47914ms; SamplesPerSecond = 2087
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16935525; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11890s; TotalTimePerSample = 0.47562ms; SamplesPerSecond = 2102
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18198833; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12220s; TotalTimePerSample = 0.48880ms; SamplesPerSecond = 2045
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14475946; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12005s; TotalTimePerSample = 0.48020ms; SamplesPerSecond = 2082
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18021601; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11799s; TotalTimePerSample = 0.47197ms; SamplesPerSecond = 2118
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15849308; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11827s; TotalTimePerSample = 0.47310ms; SamplesPerSecond = 2113
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14474425; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12205s; TotalTimePerSample = 0.48818ms; SamplesPerSecond = 2048
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13362926; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11950s; TotalTimePerSample = 0.47799ms; SamplesPerSecond = 2092
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13708299; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12274s; TotalTimePerSample = 0.49095ms; SamplesPerSecond = 2036
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11569777; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12041s; TotalTimePerSample = 0.48166ms; SamplesPerSecond = 2076
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16892331; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12018s; TotalTimePerSample = 0.48073ms; SamplesPerSecond = 2080
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12752162; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.11985s; TotalTimePerSample = 0.47938ms; SamplesPerSecond = 2086
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17100866; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12315s; TotalTimePerSample = 0.49262ms; SamplesPerSecond = 2029
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17660425; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.11828s; TotalTimePerSample = 0.47312ms; SamplesPerSecond = 2113
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14105803; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12278s; TotalTimePerSample = 0.49111ms; SamplesPerSecond = 2036
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19333552; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12607s; TotalTimePerSample = 0.50429ms; SamplesPerSecond = 1982
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20859524; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14369s; TotalTimePerSample = 0.57476ms; SamplesPerSecond = 1739
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18499677; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12830s; TotalTimePerSample = 0.51322ms; SamplesPerSecond = 1948
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18152438; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12787s; TotalTimePerSample = 0.51148ms; SamplesPerSecond = 1955
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14037157; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11950s; TotalTimePerSample = 0.47798ms; SamplesPerSecond = 2092
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14866862; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12108s; TotalTimePerSample = 0.48433ms; SamplesPerSecond = 2064
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20347747; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.11742s; TotalTimePerSample = 0.46968ms; SamplesPerSecond = 2129
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12815012; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12145s; TotalTimePerSample = 0.48580ms; SamplesPerSecond = 2058
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18672810; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12065s; TotalTimePerSample = 0.48258ms; SamplesPerSecond = 2072
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19552990; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12248s; TotalTimePerSample = 0.48990ms; SamplesPerSecond = 2041
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16452642; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12369s; TotalTimePerSample = 0.49474ms; SamplesPerSecond = 2021
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12461825; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12129s; TotalTimePerSample = 0.48516ms; SamplesPerSecond = 2061
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17285251; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12227s; TotalTimePerSample = 0.48908ms; SamplesPerSecond = 2044
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12253620; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12242s; TotalTimePerSample = 0.48967ms; SamplesPerSecond = 2042
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14723334; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12409s; TotalTimePerSample = 0.49637ms; SamplesPerSecond = 2014
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19789537; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12229s; TotalTimePerSample = 0.48915ms; SamplesPerSecond = 2044
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12575877; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12467s; TotalTimePerSample = 0.49868ms; SamplesPerSecond = 2005
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13745928; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12625s; TotalTimePerSample = 0.50498ms; SamplesPerSecond = 1980
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12839652; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12036s; TotalTimePerSample = 0.48143ms; SamplesPerSecond = 2077
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16647280; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12133s; TotalTimePerSample = 0.48530ms; SamplesPerSecond = 2060
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20679434; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12414s; TotalTimePerSample = 0.49655ms; SamplesPerSecond = 2013
MPI Rank 1:  Epoch[ 4 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14585245; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12625s; TotalTimePerSample = 0.50498ms; SamplesPerSecond = 1980
MPI Rank 1: Finished Epoch[ 4 of 4]: [Training Set] TrainLossPerSample = 0.15914931; EvalErrPerSample = 0.0767; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.931591
MPI Rank 1: CNTKCommandTrainEnd: SimpleMultiGPU
MPI Rank 1: __COMPLETED__
MPI Rank 1: ~MPIWrapper
MPI Rank 2: Redirecting stderr to file C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr_SimpleMultiGPU.logrank2
MPI Rank 2: -------------------------------------------------------------------
MPI Rank 2: Build info: 
MPI Rank 2: 
MPI Rank 2: 		Built time: Oct 24 2015 13:33:25
MPI Rank 2: 		Last modified date: Thu Oct 22 16:00:27 2015
MPI Rank 2: 		Built by amitaga on Amitaga-Win-DT3           
MPI Rank 2: 		Build Path: E:\NetScale\CNTK\git_repos\cplx_master2\MachineLearning\CNTK\
MPI Rank 2: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 2: -------------------------------------------------------------------
MPI Rank 2: running on Amitaga-Win-DT3 at 2015/10/24 21:49:39
MPI Rank 2: command line: 
MPI Rank 2: E:\NetScale\CNTK\git_repos\cplx_master2\x64\debug\cntk.exe configFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining/SimpleMultiGPU.config RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining DeviceId=0 precision=float SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]] stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr 
MPI Rank 2: 
MPI Rank 2: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 2: deviceId=$DeviceId$
MPI Rank 2: command=SimpleMultiGPU
MPI Rank 2: precision=float
MPI Rank 2: parallelTrain=true
MPI Rank 2: SimpleMultiGPU=[
MPI Rank 2:     action=train
MPI Rank 2:     modelPath=$RunDir$/models/Simple.dnn
MPI Rank 2:     deviceId=$DeviceId$
MPI Rank 2:     traceLevel=1
MPI Rank 2:     SimpleNetworkBuilder=[
MPI Rank 2:         layerSizes=2:50*2:2
MPI Rank 2:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 2:         evalCriterion=ErrorPrediction
MPI Rank 2:         layerTypes=Sigmoid
MPI Rank 2:         initValueScale=1.0
MPI Rank 2:         applyMeanVarNorm=true
MPI Rank 2:         uniformInit=true
MPI Rank 2:         needPrior=true
MPI Rank 2:     ]
MPI Rank 2:     SGD=[
MPI Rank 2:         epochSize=0 
MPI Rank 2:         minibatchSize=25
MPI Rank 2:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 2:         momentumPerMB=0.9
MPI Rank 2:         dropoutRate=0.0
MPI Rank 2:         maxEpochs=4
MPI Rank 2:         ParallelTrain=[
MPI Rank 2:             parallelizationMethod=DataParallelSGD
MPI Rank 2:             DataParallelSGD=[
MPI Rank 2:               gradientBits=1
MPI Rank 2:             ]
MPI Rank 2:         ]
MPI Rank 2:     ]
MPI Rank 2:     reader=[
MPI Rank 2:       readerType=UCIFastReader
MPI Rank 2:       file=$DataDir$/SimpleDataTrain.txt
MPI Rank 2:       miniBatchMode=Partial
MPI Rank 2:       randomize=None
MPI Rank 2:       verbosity=1   
MPI Rank 2:       features=[
MPI Rank 2: dim=2      
MPI Rank 2: start=0    
MPI Rank 2:       ]
MPI Rank 2:       labels=[
MPI Rank 2: start=2      
MPI Rank 2: dim=1        
MPI Rank 2: labelDim=2   
MPI Rank 2:         labelMappingFile=$DataDir$/SimpleMapping.txt
MPI Rank 2:       ]
MPI Rank 2:     ]
MPI Rank 2: ]
MPI Rank 2: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 2: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 2: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 2: DeviceId=0
MPI Rank 2: precision=float
MPI Rank 2: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 2: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 2: 
MPI Rank 2: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 2: 
MPI Rank 2: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 2: deviceId=0
MPI Rank 2: command=SimpleMultiGPU
MPI Rank 2: precision=float
MPI Rank 2: parallelTrain=true
MPI Rank 2: SimpleMultiGPU=[
MPI Rank 2:     action=train
MPI Rank 2:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 2:     deviceId=0
MPI Rank 2:     traceLevel=1
MPI Rank 2:     SimpleNetworkBuilder=[
MPI Rank 2:         layerSizes=2:50*2:2
MPI Rank 2:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 2:         evalCriterion=ErrorPrediction
MPI Rank 2:         layerTypes=Sigmoid
MPI Rank 2:         initValueScale=1.0
MPI Rank 2:         applyMeanVarNorm=true
MPI Rank 2:         uniformInit=true
MPI Rank 2:         needPrior=true
MPI Rank 2:     ]
MPI Rank 2:     SGD=[
MPI Rank 2:         epochSize=0 
MPI Rank 2:         minibatchSize=25
MPI Rank 2:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 2:         momentumPerMB=0.9
MPI Rank 2:         dropoutRate=0.0
MPI Rank 2:         maxEpochs=4
MPI Rank 2:         ParallelTrain=[
MPI Rank 2:             parallelizationMethod=DataParallelSGD
MPI Rank 2:             DataParallelSGD=[
MPI Rank 2:               gradientBits=1
MPI Rank 2:             ]
MPI Rank 2:         ]
MPI Rank 2:     ]
MPI Rank 2:     reader=[
MPI Rank 2:       readerType=UCIFastReader
MPI Rank 2:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 2:       miniBatchMode=Partial
MPI Rank 2:       randomize=None
MPI Rank 2:       verbosity=1   
MPI Rank 2:       features=[
MPI Rank 2: dim=2      
MPI Rank 2: start=0    
MPI Rank 2:       ]
MPI Rank 2:       labels=[
MPI Rank 2: start=2      
MPI Rank 2: dim=1        
MPI Rank 2: labelDim=2   
MPI Rank 2:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 2:       ]
MPI Rank 2:     ]
MPI Rank 2: ]
MPI Rank 2: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 2: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 2: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 2: DeviceId=0
MPI Rank 2: precision=float
MPI Rank 2: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 2: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 2: 
MPI Rank 2: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 2: 
MPI Rank 2: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 2: configparameters: SimpleMultiGPU.config:command=SimpleMultiGPU
MPI Rank 2: configparameters: SimpleMultiGPU.config:ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 2: configparameters: SimpleMultiGPU.config:DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 2: configparameters: SimpleMultiGPU.config:deviceId=0
MPI Rank 2: configparameters: SimpleMultiGPU.config:parallelTrain=true
MPI Rank 2: configparameters: SimpleMultiGPU.config:precision=float
MPI Rank 2: configparameters: SimpleMultiGPU.config:RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 2: configparameters: SimpleMultiGPU.config:SimpleMultiGPU=[
MPI Rank 2:     action=train
MPI Rank 2:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 2:     deviceId=0
MPI Rank 2:     traceLevel=1
MPI Rank 2:     SimpleNetworkBuilder=[
MPI Rank 2:         layerSizes=2:50*2:2
MPI Rank 2:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 2:         evalCriterion=ErrorPrediction
MPI Rank 2:         layerTypes=Sigmoid
MPI Rank 2:         initValueScale=1.0
MPI Rank 2:         applyMeanVarNorm=true
MPI Rank 2:         uniformInit=true
MPI Rank 2:         needPrior=true
MPI Rank 2:     ]
MPI Rank 2:     SGD=[
MPI Rank 2:         epochSize=0 
MPI Rank 2:         minibatchSize=25
MPI Rank 2:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 2:         momentumPerMB=0.9
MPI Rank 2:         dropoutRate=0.0
MPI Rank 2:         maxEpochs=4
MPI Rank 2:         ParallelTrain=[
MPI Rank 2:             parallelizationMethod=DataParallelSGD
MPI Rank 2:             DataParallelSGD=[
MPI Rank 2:               gradientBits=1
MPI Rank 2:             ]
MPI Rank 2:         ]
MPI Rank 2:     ]
MPI Rank 2:     reader=[
MPI Rank 2:       readerType=UCIFastReader
MPI Rank 2:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 2:       miniBatchMode=Partial
MPI Rank 2:       randomize=None
MPI Rank 2:       verbosity=1   
MPI Rank 2:       features=[
MPI Rank 2: dim=2      
MPI Rank 2: start=0    
MPI Rank 2:       ]
MPI Rank 2:       labels=[
MPI Rank 2: start=2      
MPI Rank 2: dim=1        
MPI Rank 2: labelDim=2   
MPI Rank 2:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 2:       ]
MPI Rank 2:     ]
MPI Rank 2: ] [SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 2: 
MPI Rank 2: configparameters: SimpleMultiGPU.config:stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 2: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 2: command: SimpleMultiGPU 
MPI Rank 2: precision = float
MPI Rank 2: CNTKModelPath: C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 2: CNTKCommandTrainInfo: SimpleMultiGPU : 4
MPI Rank 2: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 4
MPI Rank 2: CNTKCommandTrainBegin: SimpleMultiGPU
MPI Rank 2: SimpleNetworkBuilder Using GPU 0
MPI Rank 2: reading uci file E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 2: SetUniformRandomValue (GPU): creating curand object with seed 1
MPI Rank 2: GetTrainCriterionNodes  ...
MPI Rank 2: GetEvalCriterionNodes  ...
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Validating for node CrossEntropyWithSoftmax. 20 nodes to process in pass 1.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node CrossEntropyWithSoftmax. 12 nodes to process in pass 2.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node CrossEntropyWithSoftmax, final verification.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 2: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Precomputing --> 3 PreCompute nodes found.
MPI Rank 2: 
MPI Rank 2: 	NodeName: InvStdOfFeatures
MPI Rank 2: 	NodeName: MeanOfFeatures
MPI Rank 2: 	NodeName: Prior
MPI Rank 2: starting at epoch 0 counting lines to determine record count
MPI Rank 2: 
MPI Rank 2:  10000 records found
MPI Rank 2: starting epoch 0 at record count 0, and file position 0
MPI Rank 2: already there from last epoch
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Validating for node InvStdOfFeatures. 2 nodes to process in pass 1.
MPI Rank 2: 
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node InvStdOfFeatures, final verification.
MPI Rank 2: 
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Validating for node MeanOfFeatures. 2 nodes to process in pass 1.
MPI Rank 2: 
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node MeanOfFeatures, final verification.
MPI Rank 2: 
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Validating for node Prior. 2 nodes to process in pass 1.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node Prior. 1 nodes to process in pass 2.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node Prior, final verification.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 2: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 2: 
MPI Rank 2: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Precomputing --> Completed.
MPI Rank 2: 
MPI Rank 2: Set Max Temp Mem Size For Convolution Nodes to 0 samples.
MPI Rank 2: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000 
MPI Rank 2: starting epoch 0 at record count 0, and file position 0
MPI Rank 2: already there from last epoch
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Validating for node EvalErrorPrediction. 20 nodes to process in pass 1.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node EvalErrorPrediction. 10 nodes to process in pass 2.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: Validating for node EvalErrorPrediction, final verification.
MPI Rank 2: 
MPI Rank 2: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 2: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 2: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 2: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 2: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 2: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 2: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 2: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 2: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 2: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 2: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 2: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 2: 
MPI Rank 2: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 2: 
MPI Rank 2: 
MPI Rank 2: Starting minibatch loop, DataParallelSGD training (MyRank = 2, NumNodes = 4, NumGradientBits = 32).
MPI Rank 2: DecimateMinibatchSequences: WARNING: Number of parallel utterances 25 not a multiple of number of GPUs 4, GPU usage will be suboptimal.
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[   1-  10]: SamplesSeen = 250; TrainLossPerSample =  0.70007977; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.21351s; TotalTimePerSample = 0.85404ms; SamplesPerSecond = 1170
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  11-  20]: SamplesSeen = 250; TrainLossPerSample =  0.71514542; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.17145s; TotalTimePerSample = 0.68580ms; SamplesPerSecond = 1458
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  21-  30]: SamplesSeen = 250; TrainLossPerSample =  0.72945595; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.16870s; TotalTimePerSample = 0.67481ms; SamplesPerSecond = 1481
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  31-  40]: SamplesSeen = 250; TrainLossPerSample =  0.70079058; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.16017s; TotalTimePerSample = 0.64067ms; SamplesPerSecond = 1560
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  41-  50]: SamplesSeen = 250; TrainLossPerSample =  0.70605615; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.16272s; TotalTimePerSample = 0.65088ms; SamplesPerSecond = 1536
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  51-  60]: SamplesSeen = 250; TrainLossPerSample =  0.71572398; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.15165s; TotalTimePerSample = 0.60661ms; SamplesPerSecond = 1648
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  61-  70]: SamplesSeen = 250; TrainLossPerSample =  0.72149851; EvalErr[0]PerSample = 0.48000000; TotalTime = 0.14150s; TotalTimePerSample = 0.56598ms; SamplesPerSecond = 1766
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  71-  80]: SamplesSeen = 250; TrainLossPerSample =  0.79845604; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.14222s; TotalTimePerSample = 0.56890ms; SamplesPerSecond = 1757
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  81-  90]: SamplesSeen = 250; TrainLossPerSample =  0.69665186; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.13869s; TotalTimePerSample = 0.55474ms; SamplesPerSecond = 1802
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[  91- 100]: SamplesSeen = 250; TrainLossPerSample =  0.70723326; EvalErr[0]PerSample = 0.49200000; TotalTime = 0.12734s; TotalTimePerSample = 0.50937ms; SamplesPerSecond = 1963
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 101- 110]: SamplesSeen = 250; TrainLossPerSample =  0.71420345; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.13083s; TotalTimePerSample = 0.52330ms; SamplesPerSecond = 1910
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 111- 120]: SamplesSeen = 250; TrainLossPerSample =  0.69535258; EvalErr[0]PerSample = 0.43600000; TotalTime = 0.12776s; TotalTimePerSample = 0.51105ms; SamplesPerSecond = 1956
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 121- 130]: SamplesSeen = 250; TrainLossPerSample =  0.70078531; EvalErr[0]PerSample = 0.44000000; TotalTime = 0.12404s; TotalTimePerSample = 0.49614ms; SamplesPerSecond = 2015
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 131- 140]: SamplesSeen = 250; TrainLossPerSample =  0.71857916; EvalErr[0]PerSample = 0.54800000; TotalTime = 0.11920s; TotalTimePerSample = 0.47680ms; SamplesPerSecond = 2097
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 141- 150]: SamplesSeen = 250; TrainLossPerSample =  0.72088358; EvalErr[0]PerSample = 0.48800000; TotalTime = 0.11919s; TotalTimePerSample = 0.47676ms; SamplesPerSecond = 2097
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 151- 160]: SamplesSeen = 250; TrainLossPerSample =  0.71798840; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.11688s; TotalTimePerSample = 0.46752ms; SamplesPerSecond = 2138
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 161- 170]: SamplesSeen = 250; TrainLossPerSample =  0.74162164; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11731s; TotalTimePerSample = 0.46925ms; SamplesPerSecond = 2131
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 171- 180]: SamplesSeen = 250; TrainLossPerSample =  0.71835128; EvalErr[0]PerSample = 0.51600000; TotalTime = 0.11878s; TotalTimePerSample = 0.47512ms; SamplesPerSecond = 2104
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 181- 190]: SamplesSeen = 250; TrainLossPerSample =  0.71529463; EvalErr[0]PerSample = 0.48400000; TotalTime = 0.12494s; TotalTimePerSample = 0.49977ms; SamplesPerSecond = 2000
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 191- 200]: SamplesSeen = 250; TrainLossPerSample =  0.71727657; EvalErr[0]PerSample = 0.53200000; TotalTime = 0.11999s; TotalTimePerSample = 0.47998ms; SamplesPerSecond = 2083
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 201- 210]: SamplesSeen = 250; TrainLossPerSample =  0.71745517; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11901s; TotalTimePerSample = 0.47604ms; SamplesPerSecond = 2100
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 211- 220]: SamplesSeen = 250; TrainLossPerSample =  0.72088398; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11499s; TotalTimePerSample = 0.45995ms; SamplesPerSecond = 2174
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 221- 230]: SamplesSeen = 250; TrainLossPerSample =  0.72006809; EvalErr[0]PerSample = 0.50800000; TotalTime = 0.12383s; TotalTimePerSample = 0.49534ms; SamplesPerSecond = 2018
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 231- 240]: SamplesSeen = 250; TrainLossPerSample =  0.71275468; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12128s; TotalTimePerSample = 0.48511ms; SamplesPerSecond = 2061
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 241- 250]: SamplesSeen = 250; TrainLossPerSample =  0.69644781; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11778s; TotalTimePerSample = 0.47112ms; SamplesPerSecond = 2122
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 251- 260]: SamplesSeen = 250; TrainLossPerSample =  0.70129698; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12175s; TotalTimePerSample = 0.48699ms; SamplesPerSecond = 2053
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 261- 270]: SamplesSeen = 250; TrainLossPerSample =  0.70768095; EvalErr[0]PerSample = 0.54400000; TotalTime = 0.12129s; TotalTimePerSample = 0.48515ms; SamplesPerSecond = 2061
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 271- 280]: SamplesSeen = 250; TrainLossPerSample =  0.69744379; EvalErr[0]PerSample = 0.52800000; TotalTime = 0.11708s; TotalTimePerSample = 0.46833ms; SamplesPerSecond = 2135
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 281- 290]: SamplesSeen = 250; TrainLossPerSample =  0.69266187; EvalErr[0]PerSample = 0.44800000; TotalTime = 0.11805s; TotalTimePerSample = 0.47221ms; SamplesPerSecond = 2117
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 291- 300]: SamplesSeen = 250; TrainLossPerSample =  0.69347266; EvalErr[0]PerSample = 0.49600000; TotalTime = 0.12085s; TotalTimePerSample = 0.48341ms; SamplesPerSecond = 2068
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 301- 310]: SamplesSeen = 250; TrainLossPerSample =  0.69257409; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.12586s; TotalTimePerSample = 0.50342ms; SamplesPerSecond = 1986
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 311- 320]: SamplesSeen = 250; TrainLossPerSample =  0.68625741; EvalErr[0]PerSample = 0.38000000; TotalTime = 0.12600s; TotalTimePerSample = 0.50399ms; SamplesPerSecond = 1984
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 321- 330]: SamplesSeen = 250; TrainLossPerSample =  0.69064011; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.12351s; TotalTimePerSample = 0.49405ms; SamplesPerSecond = 2024
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 331- 340]: SamplesSeen = 250; TrainLossPerSample =  0.70192154; EvalErr[0]PerSample = 0.46000000; TotalTime = 0.12385s; TotalTimePerSample = 0.49541ms; SamplesPerSecond = 2018
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 341- 350]: SamplesSeen = 250; TrainLossPerSample =  0.69058912; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.12401s; TotalTimePerSample = 0.49606ms; SamplesPerSecond = 2015
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 351- 360]: SamplesSeen = 250; TrainLossPerSample =  0.67041492; EvalErr[0]PerSample = 0.39200000; TotalTime = 0.12184s; TotalTimePerSample = 0.48736ms; SamplesPerSecond = 2051
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 361- 370]: SamplesSeen = 250; TrainLossPerSample =  0.65913973; EvalErr[0]PerSample = 0.35600000; TotalTime = 0.12859s; TotalTimePerSample = 0.51435ms; SamplesPerSecond = 1944
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 371- 380]: SamplesSeen = 250; TrainLossPerSample =  0.63919877; EvalErr[0]PerSample = 0.36400000; TotalTime = 0.14455s; TotalTimePerSample = 0.57820ms; SamplesPerSecond = 1729
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 381- 390]: SamplesSeen = 250; TrainLossPerSample =  0.61293883; EvalErr[0]PerSample = 0.19200000; TotalTime = 0.14490s; TotalTimePerSample = 0.57959ms; SamplesPerSecond = 1725
MPI Rank 2:  Epoch[ 1 of 4]-Minibatch[ 391- 400]: SamplesSeen = 250; TrainLossPerSample =  0.55255352; EvalErr[0]PerSample = 0.18800000; TotalTime = 0.14556s; TotalTimePerSample = 0.58222ms; SamplesPerSecond = 1717
MPI Rank 2: Finished Epoch[ 1 of 4]: [Training Set] TrainLossPerSample = 0.70019555; EvalErrPerSample = 0.4735; AvgLearningRatePerSample = 0.01999999955; EpochTime=5.368498
MPI Rank 2: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 2: starting epoch 1 at record count 10000, and file position 0
MPI Rank 2: already there from last epoch
MPI Rank 2: 
MPI Rank 2: Starting minibatch loop, DataParallelSGD training (MyRank = 2, NumNodes = 4, NumGradientBits = 32).
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.50774625; EvalErr[0]PerSample = 0.24000000; TotalTime = 0.13794s; TotalTimePerSample = 0.55177ms; SamplesPerSecond = 1812
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.43388927; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.13922s; TotalTimePerSample = 0.55688ms; SamplesPerSecond = 1795
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.36674870; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14013s; TotalTimePerSample = 0.56053ms; SamplesPerSecond = 1784
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.33768765; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.13721s; TotalTimePerSample = 0.54884ms; SamplesPerSecond = 1822
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.30320946; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12919s; TotalTimePerSample = 0.51676ms; SamplesPerSecond = 1935
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.29576043; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.14802s; TotalTimePerSample = 0.59206ms; SamplesPerSecond = 1689
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24924491; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14685s; TotalTimePerSample = 0.58740ms; SamplesPerSecond = 1702
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24632415; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14440s; TotalTimePerSample = 0.57762ms; SamplesPerSecond = 1731
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20943158; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13614s; TotalTimePerSample = 0.54457ms; SamplesPerSecond = 1836
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19115996; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.13503s; TotalTimePerSample = 0.54011ms; SamplesPerSecond = 1851
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17923231; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13615s; TotalTimePerSample = 0.54460ms; SamplesPerSecond = 1836
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17075422; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.13632s; TotalTimePerSample = 0.54526ms; SamplesPerSecond = 1833
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14442371; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.13087s; TotalTimePerSample = 0.52350ms; SamplesPerSecond = 1910
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17753819; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.13640s; TotalTimePerSample = 0.54560ms; SamplesPerSecond = 1832
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15087855; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13907s; TotalTimePerSample = 0.55627ms; SamplesPerSecond = 1797
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19253023; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13523s; TotalTimePerSample = 0.54090ms; SamplesPerSecond = 1848
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17830684; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14474s; TotalTimePerSample = 0.57897ms; SamplesPerSecond = 1727
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15115428; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.14352s; TotalTimePerSample = 0.57407ms; SamplesPerSecond = 1741
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19135968; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14338s; TotalTimePerSample = 0.57352ms; SamplesPerSecond = 1743
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.21491485; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14566s; TotalTimePerSample = 0.58264ms; SamplesPerSecond = 1716
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18682346; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13549s; TotalTimePerSample = 0.54194ms; SamplesPerSecond = 1845
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18483205; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14315s; TotalTimePerSample = 0.57262ms; SamplesPerSecond = 1746
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14684504; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.14583s; TotalTimePerSample = 0.58333ms; SamplesPerSecond = 1714
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15322115; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14638s; TotalTimePerSample = 0.58552ms; SamplesPerSecond = 1707
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19882571; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.14054s; TotalTimePerSample = 0.56214ms; SamplesPerSecond = 1778
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13683833; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14019s; TotalTimePerSample = 0.56076ms; SamplesPerSecond = 1783
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18621188; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.13443s; TotalTimePerSample = 0.53771ms; SamplesPerSecond = 1859
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19408048; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13228s; TotalTimePerSample = 0.52910ms; SamplesPerSecond = 1890
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17298137; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14559s; TotalTimePerSample = 0.58236ms; SamplesPerSecond = 1717
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13265130; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.13309s; TotalTimePerSample = 0.53238ms; SamplesPerSecond = 1878
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17627178; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.13118s; TotalTimePerSample = 0.52470ms; SamplesPerSecond = 1905
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12734628; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12731s; TotalTimePerSample = 0.50923ms; SamplesPerSecond = 1963
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15108451; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12619s; TotalTimePerSample = 0.50474ms; SamplesPerSecond = 1981
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19729184; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12375s; TotalTimePerSample = 0.49498ms; SamplesPerSecond = 2020
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12857332; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12239s; TotalTimePerSample = 0.48956ms; SamplesPerSecond = 2042
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13867804; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12138s; TotalTimePerSample = 0.48554ms; SamplesPerSecond = 2059
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12786050; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12245s; TotalTimePerSample = 0.48981ms; SamplesPerSecond = 2041
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16643303; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12604s; TotalTimePerSample = 0.50418ms; SamplesPerSecond = 1983
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20440409; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12258s; TotalTimePerSample = 0.49033ms; SamplesPerSecond = 2039
MPI Rank 2:  Epoch[ 2 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14566238; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12077s; TotalTimePerSample = 0.48308ms; SamplesPerSecond = 2070
MPI Rank 2: Finished Epoch[ 2 of 4]: [Training Set] TrainLossPerSample = 0.20373029; EvalErrPerSample = 0.0827; AvgLearningRatePerSample = 0.00800000038; EpochTime=5.454115
MPI Rank 2: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 2: starting epoch 2 at record count 20000, and file position 0
MPI Rank 2: already there from last epoch
MPI Rank 2: 
MPI Rank 2: Starting minibatch loop, DataParallelSGD training (MyRank = 2, NumNodes = 4, NumGradientBits = 32).
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12590085; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12007s; TotalTimePerSample = 0.48030ms; SamplesPerSecond = 2082
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17780229; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12502s; TotalTimePerSample = 0.50009ms; SamplesPerSecond = 1999
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14417637; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12269s; TotalTimePerSample = 0.49075ms; SamplesPerSecond = 2037
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15796895; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12210s; TotalTimePerSample = 0.48842ms; SamplesPerSecond = 2047
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17002999; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12374s; TotalTimePerSample = 0.49496ms; SamplesPerSecond = 2020
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18262114; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11485s; TotalTimePerSample = 0.45938ms; SamplesPerSecond = 2176
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14643694; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11641s; TotalTimePerSample = 0.46564ms; SamplesPerSecond = 2147
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18030528; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12303s; TotalTimePerSample = 0.49210ms; SamplesPerSecond = 2032
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15846150; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12244s; TotalTimePerSample = 0.48977ms; SamplesPerSecond = 2041
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14486534; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12013s; TotalTimePerSample = 0.48050ms; SamplesPerSecond = 2081
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13469093; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11843s; TotalTimePerSample = 0.47373ms; SamplesPerSecond = 2110
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13720019; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12696s; TotalTimePerSample = 0.50785ms; SamplesPerSecond = 1969
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11641295; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11963s; TotalTimePerSample = 0.47853ms; SamplesPerSecond = 2089
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16786647; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.11897s; TotalTimePerSample = 0.47587ms; SamplesPerSecond = 2101
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12811514; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12430s; TotalTimePerSample = 0.49719ms; SamplesPerSecond = 2011
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17257851; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.11756s; TotalTimePerSample = 0.47023ms; SamplesPerSecond = 2126
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17623656; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12107s; TotalTimePerSample = 0.48428ms; SamplesPerSecond = 2064
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14121117; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12174s; TotalTimePerSample = 0.48696ms; SamplesPerSecond = 2053
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19243443; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12139s; TotalTimePerSample = 0.48555ms; SamplesPerSecond = 2059
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20908161; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12892s; TotalTimePerSample = 0.51567ms; SamplesPerSecond = 1939
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18472067; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12850s; TotalTimePerSample = 0.51400ms; SamplesPerSecond = 1945
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18185535; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12240s; TotalTimePerSample = 0.48959ms; SamplesPerSecond = 2042
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14074205; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.13033s; TotalTimePerSample = 0.52130ms; SamplesPerSecond = 1918
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14871620; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11995s; TotalTimePerSample = 0.47979ms; SamplesPerSecond = 2084
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20299704; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12241s; TotalTimePerSample = 0.48962ms; SamplesPerSecond = 2042
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12852038; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12054s; TotalTimePerSample = 0.48216ms; SamplesPerSecond = 2074
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18660439; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12419s; TotalTimePerSample = 0.49676ms; SamplesPerSecond = 2013
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19575997; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12071s; TotalTimePerSample = 0.48283ms; SamplesPerSecond = 2071
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16667676; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12485s; TotalTimePerSample = 0.49938ms; SamplesPerSecond = 2002
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12526169; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12473s; TotalTimePerSample = 0.49894ms; SamplesPerSecond = 2004
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17392131; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12339s; TotalTimePerSample = 0.49358ms; SamplesPerSecond = 2026
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12281615; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12287s; TotalTimePerSample = 0.49147ms; SamplesPerSecond = 2034
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14759390; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.11621s; TotalTimePerSample = 0.46485ms; SamplesPerSecond = 2151
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19801300; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12491s; TotalTimePerSample = 0.49964ms; SamplesPerSecond = 2001
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12593395; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12309s; TotalTimePerSample = 0.49238ms; SamplesPerSecond = 2030
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13756617; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12019s; TotalTimePerSample = 0.48077ms; SamplesPerSecond = 2080
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12838526; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12843s; TotalTimePerSample = 0.51372ms; SamplesPerSecond = 1946
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16654369; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.13408s; TotalTimePerSample = 0.53631ms; SamplesPerSecond = 1864
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20658951; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12132s; TotalTimePerSample = 0.48530ms; SamplesPerSecond = 2060
MPI Rank 2:  Epoch[ 3 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14583322; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.11488s; TotalTimePerSample = 0.45952ms; SamplesPerSecond = 2176
MPI Rank 2: Finished Epoch[ 3 of 4]: [Training Set] TrainLossPerSample = 0.15948618; EvalErrPerSample = 0.0766; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.92626
MPI Rank 2: Starting Epoch 4: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 2: starting epoch 3 at record count 30000, and file position 0
MPI Rank 2: already there from last epoch
MPI Rank 2: 
MPI Rank 2: Starting minibatch loop, DataParallelSGD training (MyRank = 2, NumNodes = 4, NumGradientBits = 32).
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12371232; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12031s; TotalTimePerSample = 0.48123ms; SamplesPerSecond = 2078
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18070515; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12045s; TotalTimePerSample = 0.48179ms; SamplesPerSecond = 2075
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14239730; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12730s; TotalTimePerSample = 0.50922ms; SamplesPerSecond = 1963
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15630155; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.11938s; TotalTimePerSample = 0.47754ms; SamplesPerSecond = 2094
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16935525; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11927s; TotalTimePerSample = 0.47708ms; SamplesPerSecond = 2096
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18198833; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12177s; TotalTimePerSample = 0.48708ms; SamplesPerSecond = 2053
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14475946; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12015s; TotalTimePerSample = 0.48060ms; SamplesPerSecond = 2080
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18021601; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11793s; TotalTimePerSample = 0.47171ms; SamplesPerSecond = 2119
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15849308; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11865s; TotalTimePerSample = 0.47460ms; SamplesPerSecond = 2107
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14474425; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12154s; TotalTimePerSample = 0.48615ms; SamplesPerSecond = 2056
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13362926; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11991s; TotalTimePerSample = 0.47965ms; SamplesPerSecond = 2084
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13708299; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12222s; TotalTimePerSample = 0.48887ms; SamplesPerSecond = 2045
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11569777; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12080s; TotalTimePerSample = 0.48321ms; SamplesPerSecond = 2069
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16892331; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12001s; TotalTimePerSample = 0.48002ms; SamplesPerSecond = 2083
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12752162; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12061s; TotalTimePerSample = 0.48244ms; SamplesPerSecond = 2072
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17100866; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12240s; TotalTimePerSample = 0.48961ms; SamplesPerSecond = 2042
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17660425; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12004s; TotalTimePerSample = 0.48016ms; SamplesPerSecond = 2082
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14105803; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12205s; TotalTimePerSample = 0.48818ms; SamplesPerSecond = 2048
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19333552; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12591s; TotalTimePerSample = 0.50365ms; SamplesPerSecond = 1985
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20859524; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14391s; TotalTimePerSample = 0.57564ms; SamplesPerSecond = 1737
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18499677; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12836s; TotalTimePerSample = 0.51342ms; SamplesPerSecond = 1947
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18152438; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12739s; TotalTimePerSample = 0.50957ms; SamplesPerSecond = 1962
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14037157; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11992s; TotalTimePerSample = 0.47966ms; SamplesPerSecond = 2084
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14866862; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12109s; TotalTimePerSample = 0.48438ms; SamplesPerSecond = 2064
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20347747; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.11737s; TotalTimePerSample = 0.46947ms; SamplesPerSecond = 2130
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12815012; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12143s; TotalTimePerSample = 0.48571ms; SamplesPerSecond = 2058
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18672810; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12074s; TotalTimePerSample = 0.48296ms; SamplesPerSecond = 2070
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19552990; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12188s; TotalTimePerSample = 0.48751ms; SamplesPerSecond = 2051
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16452642; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12390s; TotalTimePerSample = 0.49558ms; SamplesPerSecond = 2017
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12461825; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12141s; TotalTimePerSample = 0.48563ms; SamplesPerSecond = 2059
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17285251; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12232s; TotalTimePerSample = 0.48929ms; SamplesPerSecond = 2043
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12253620; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12247s; TotalTimePerSample = 0.48987ms; SamplesPerSecond = 2041
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14723334; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12365s; TotalTimePerSample = 0.49459ms; SamplesPerSecond = 2021
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19789537; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12271s; TotalTimePerSample = 0.49083ms; SamplesPerSecond = 2037
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12575877; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12486s; TotalTimePerSample = 0.49944ms; SamplesPerSecond = 2002
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13745928; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12591s; TotalTimePerSample = 0.50363ms; SamplesPerSecond = 1985
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12839652; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12015s; TotalTimePerSample = 0.48060ms; SamplesPerSecond = 2080
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16647280; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12200s; TotalTimePerSample = 0.48798ms; SamplesPerSecond = 2049
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20679434; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12384s; TotalTimePerSample = 0.49536ms; SamplesPerSecond = 2018
MPI Rank 2:  Epoch[ 4 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14585245; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12606s; TotalTimePerSample = 0.50426ms; SamplesPerSecond = 1983
MPI Rank 2: Finished Epoch[ 4 of 4]: [Training Set] TrainLossPerSample = 0.15914931; EvalErrPerSample = 0.0767; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.931381
MPI Rank 2: CNTKCommandTrainEnd: SimpleMultiGPU
MPI Rank 2: __COMPLETED__
MPI Rank 2: ~MPIWrapper
MPI Rank 3: Redirecting stderr to file C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr_SimpleMultiGPU.logrank3
MPI Rank 3: -------------------------------------------------------------------
MPI Rank 3: Build info: 
MPI Rank 3: 
MPI Rank 3: 		Built time: Oct 24 2015 13:33:25
MPI Rank 3: 		Last modified date: Thu Oct 22 16:00:27 2015
MPI Rank 3: 		Built by amitaga on Amitaga-Win-DT3           
MPI Rank 3: 		Build Path: E:\NetScale\CNTK\git_repos\cplx_master2\MachineLearning\CNTK\
MPI Rank 3: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 3: -------------------------------------------------------------------
MPI Rank 3: running on Amitaga-Win-DT3 at 2015/10/24 21:49:39
MPI Rank 3: command line: 
MPI Rank 3: E:\NetScale\CNTK\git_repos\cplx_master2\x64\debug\cntk.exe configFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining/SimpleMultiGPU.config RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining DeviceId=0 precision=float SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]] stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr 
MPI Rank 3: 
MPI Rank 3: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 3: deviceId=$DeviceId$
MPI Rank 3: command=SimpleMultiGPU
MPI Rank 3: precision=float
MPI Rank 3: parallelTrain=true
MPI Rank 3: SimpleMultiGPU=[
MPI Rank 3:     action=train
MPI Rank 3:     modelPath=$RunDir$/models/Simple.dnn
MPI Rank 3:     deviceId=$DeviceId$
MPI Rank 3:     traceLevel=1
MPI Rank 3:     SimpleNetworkBuilder=[
MPI Rank 3:         layerSizes=2:50*2:2
MPI Rank 3:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 3:         evalCriterion=ErrorPrediction
MPI Rank 3:         layerTypes=Sigmoid
MPI Rank 3:         initValueScale=1.0
MPI Rank 3:         applyMeanVarNorm=true
MPI Rank 3:         uniformInit=true
MPI Rank 3:         needPrior=true
MPI Rank 3:     ]
MPI Rank 3:     SGD=[
MPI Rank 3:         epochSize=0 
MPI Rank 3:         minibatchSize=25
MPI Rank 3:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 3:         momentumPerMB=0.9
MPI Rank 3:         dropoutRate=0.0
MPI Rank 3:         maxEpochs=4
MPI Rank 3:         ParallelTrain=[
MPI Rank 3:             parallelizationMethod=DataParallelSGD
MPI Rank 3:             DataParallelSGD=[
MPI Rank 3:               gradientBits=1
MPI Rank 3:             ]
MPI Rank 3:         ]
MPI Rank 3:     ]
MPI Rank 3:     reader=[
MPI Rank 3:       readerType=UCIFastReader
MPI Rank 3:       file=$DataDir$/SimpleDataTrain.txt
MPI Rank 3:       miniBatchMode=Partial
MPI Rank 3:       randomize=None
MPI Rank 3:       verbosity=1   
MPI Rank 3:       features=[
MPI Rank 3: dim=2      
MPI Rank 3: start=0    
MPI Rank 3:       ]
MPI Rank 3:       labels=[
MPI Rank 3: start=2      
MPI Rank 3: dim=1        
MPI Rank 3: labelDim=2   
MPI Rank 3:         labelMappingFile=$DataDir$/SimpleMapping.txt
MPI Rank 3:       ]
MPI Rank 3:     ]
MPI Rank 3: ]
MPI Rank 3: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 3: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 3: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 3: DeviceId=0
MPI Rank 3: precision=float
MPI Rank 3: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 3: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 3: 
MPI Rank 3: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 3: 
MPI Rank 3: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 3: deviceId=0
MPI Rank 3: command=SimpleMultiGPU
MPI Rank 3: precision=float
MPI Rank 3: parallelTrain=true
MPI Rank 3: SimpleMultiGPU=[
MPI Rank 3:     action=train
MPI Rank 3:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 3:     deviceId=0
MPI Rank 3:     traceLevel=1
MPI Rank 3:     SimpleNetworkBuilder=[
MPI Rank 3:         layerSizes=2:50*2:2
MPI Rank 3:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 3:         evalCriterion=ErrorPrediction
MPI Rank 3:         layerTypes=Sigmoid
MPI Rank 3:         initValueScale=1.0
MPI Rank 3:         applyMeanVarNorm=true
MPI Rank 3:         uniformInit=true
MPI Rank 3:         needPrior=true
MPI Rank 3:     ]
MPI Rank 3:     SGD=[
MPI Rank 3:         epochSize=0 
MPI Rank 3:         minibatchSize=25
MPI Rank 3:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 3:         momentumPerMB=0.9
MPI Rank 3:         dropoutRate=0.0
MPI Rank 3:         maxEpochs=4
MPI Rank 3:         ParallelTrain=[
MPI Rank 3:             parallelizationMethod=DataParallelSGD
MPI Rank 3:             DataParallelSGD=[
MPI Rank 3:               gradientBits=1
MPI Rank 3:             ]
MPI Rank 3:         ]
MPI Rank 3:     ]
MPI Rank 3:     reader=[
MPI Rank 3:       readerType=UCIFastReader
MPI Rank 3:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 3:       miniBatchMode=Partial
MPI Rank 3:       randomize=None
MPI Rank 3:       verbosity=1   
MPI Rank 3:       features=[
MPI Rank 3: dim=2      
MPI Rank 3: start=0    
MPI Rank 3:       ]
MPI Rank 3:       labels=[
MPI Rank 3: start=2      
MPI Rank 3: dim=1        
MPI Rank 3: labelDim=2   
MPI Rank 3:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 3:       ]
MPI Rank 3:     ]
MPI Rank 3: ]
MPI Rank 3: RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 3: DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 3: ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 3: DeviceId=0
MPI Rank 3: precision=float
MPI Rank 3: SimpleMultiGPU=[SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 3: stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 3: 
MPI Rank 3: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 3: 
MPI Rank 3: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 3: configparameters: SimpleMultiGPU.config:command=SimpleMultiGPU
MPI Rank 3: configparameters: SimpleMultiGPU.config:ConfigDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining
MPI Rank 3: configparameters: SimpleMultiGPU.config:DataDir=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data
MPI Rank 3: configparameters: SimpleMultiGPU.config:deviceId=0
MPI Rank 3: configparameters: SimpleMultiGPU.config:parallelTrain=true
MPI Rank 3: configparameters: SimpleMultiGPU.config:precision=float
MPI Rank 3: configparameters: SimpleMultiGPU.config:RunDir=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu
MPI Rank 3: configparameters: SimpleMultiGPU.config:SimpleMultiGPU=[
MPI Rank 3:     action=train
MPI Rank 3:     modelPath=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 3:     deviceId=0
MPI Rank 3:     traceLevel=1
MPI Rank 3:     SimpleNetworkBuilder=[
MPI Rank 3:         layerSizes=2:50*2:2
MPI Rank 3:         trainingCriterion=CrossEntropyWithSoftmax
MPI Rank 3:         evalCriterion=ErrorPrediction
MPI Rank 3:         layerTypes=Sigmoid
MPI Rank 3:         initValueScale=1.0
MPI Rank 3:         applyMeanVarNorm=true
MPI Rank 3:         uniformInit=true
MPI Rank 3:         needPrior=true
MPI Rank 3:     ]
MPI Rank 3:     SGD=[
MPI Rank 3:         epochSize=0 
MPI Rank 3:         minibatchSize=25
MPI Rank 3:         learningRatesPerMB=0.5:0.2*20:0.1
MPI Rank 3:         momentumPerMB=0.9
MPI Rank 3:         dropoutRate=0.0
MPI Rank 3:         maxEpochs=4
MPI Rank 3:         ParallelTrain=[
MPI Rank 3:             parallelizationMethod=DataParallelSGD
MPI Rank 3:             DataParallelSGD=[
MPI Rank 3:               gradientBits=1
MPI Rank 3:             ]
MPI Rank 3:         ]
MPI Rank 3:     ]
MPI Rank 3:     reader=[
MPI Rank 3:       readerType=UCIFastReader
MPI Rank 3:       file=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 3:       miniBatchMode=Partial
MPI Rank 3:       randomize=None
MPI Rank 3:       verbosity=1   
MPI Rank 3:       features=[
MPI Rank 3: dim=2      
MPI Rank 3: start=0    
MPI Rank 3:       ]
MPI Rank 3:       labels=[
MPI Rank 3: start=2      
MPI Rank 3: dim=1        
MPI Rank 3: labelDim=2   
MPI Rank 3:         labelMappingFile=E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleMapping.txt
MPI Rank 3:       ]
MPI Rank 3:     ]
MPI Rank 3: ] [SGD=[ParallelTrain=[DataParallelSGD=[gradientBits=32]]]]
MPI Rank 3: 
MPI Rank 3: configparameters: SimpleMultiGPU.config:stderr=C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/stderr
MPI Rank 3: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 3: command: SimpleMultiGPU 
MPI Rank 3: precision = float
MPI Rank 3: CNTKModelPath: C:\cygwin64\tmp\cntk-test-20151024134937.188247\ParallelTraining\NoQuantization_SinglePrecision@debug_gpu/models/Simple.dnn
MPI Rank 3: CNTKCommandTrainInfo: SimpleMultiGPU : 4
MPI Rank 3: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 4
MPI Rank 3: CNTKCommandTrainBegin: SimpleMultiGPU
MPI Rank 3: SimpleNetworkBuilder Using GPU 0
MPI Rank 3: reading uci file E:\NetScale\CNTK\git_repos\cplx_master2\Tests\ParallelTraining\Data/SimpleDataTrain.txt
MPI Rank 3: SetUniformRandomValue (GPU): creating curand object with seed 1
MPI Rank 3: GetTrainCriterionNodes  ...
MPI Rank 3: GetEvalCriterionNodes  ...
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Validating for node CrossEntropyWithSoftmax. 20 nodes to process in pass 1.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node CrossEntropyWithSoftmax. 12 nodes to process in pass 2.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node CrossEntropyWithSoftmax, final verification.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 3], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 3], B0[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 3], B1[50, 1]) -> [50, MBSize 3]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 3]) -> [50, MBSize 3]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 3]) -> [2, MBSize 3]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 3], B2[2, 1]) -> [2, MBSize 3]
MPI Rank 3: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax(labels[2, MBSize 3], HLast[2, MBSize 3]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Precomputing --> 3 PreCompute nodes found.
MPI Rank 3: 
MPI Rank 3: 	NodeName: InvStdOfFeatures
MPI Rank 3: 	NodeName: MeanOfFeatures
MPI Rank 3: 	NodeName: Prior
MPI Rank 3: starting at epoch 0 counting lines to determine record count
MPI Rank 3: 
MPI Rank 3:  10000 records found
MPI Rank 3: starting epoch 0 at record count 0, and file position 0
MPI Rank 3: already there from last epoch
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Validating for node InvStdOfFeatures. 2 nodes to process in pass 1.
MPI Rank 3: 
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node InvStdOfFeatures, final verification.
MPI Rank 3: 
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Validating for node MeanOfFeatures. 2 nodes to process in pass 1.
MPI Rank 3: 
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node MeanOfFeatures, final verification.
MPI Rank 3: 
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Validating for node Prior. 2 nodes to process in pass 1.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node Prior. 1 nodes to process in pass 2.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node Prior, final verification.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 3]
MPI Rank 3: Validating --> Prior = Mean(labels[2, MBSize 3]) -> [2, 1]
MPI Rank 3: 
MPI Rank 3: 1 out of 2 nodes do not share the minibatch layout with the input data.
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Precomputing --> Completed.
MPI Rank 3: 
MPI Rank 3: Set Max Temp Mem Size For Convolution Nodes to 0 samples.
MPI Rank 3: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000 
MPI Rank 3: starting epoch 0 at record count 0, and file position 0
MPI Rank 3: already there from last epoch
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Validating for node EvalErrorPrediction. 20 nodes to process in pass 1.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node EvalErrorPrediction. 10 nodes to process in pass 2.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: Validating for node EvalErrorPrediction, final verification.
MPI Rank 3: 
MPI Rank 3: Validating --> labels = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> W2 = LearnableParameter -> [2, 50]
MPI Rank 3: Validating --> W1 = LearnableParameter -> [50, 50]
MPI Rank 3: Validating --> W0 = LearnableParameter -> [50, 2]
MPI Rank 3: Validating --> features = InputValue -> [2, MBSize 25]
MPI Rank 3: Validating --> MeanOfFeatures = Mean(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> InvStdOfFeatures = InvStdDev(features[2, MBSize 25]) -> [2, 1]
MPI Rank 3: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization(features[2, MBSize 25], MeanOfFeatures[2, 1], InvStdOfFeatures[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> W0*features = Times(W0[50, 2], MVNormalizedFeatures[2, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B0 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W0*features+B0 = Plus(W0*features[50, MBSize 25], B0[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H1 = Sigmoid(W0*features+B0[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W1*H1 = Times(W1[50, 50], H1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> B1 = LearnableParameter -> [50, 1]
MPI Rank 3: Validating --> W1*H1+B1 = Plus(W1*H1[50, MBSize 25], B1[50, 1]) -> [50, MBSize 25]
MPI Rank 3: Validating --> H2 = Sigmoid(W1*H1+B1[50, MBSize 25]) -> [50, MBSize 25]
MPI Rank 3: Validating --> W2*H1 = Times(W2[2, 50], H2[50, MBSize 25]) -> [2, MBSize 25]
MPI Rank 3: Validating --> B2 = LearnableParameter -> [2, 1]
MPI Rank 3: Validating --> HLast = Plus(W2*H1[2, MBSize 25], B2[2, 1]) -> [2, MBSize 25]
MPI Rank 3: Validating --> EvalErrorPrediction = ErrorPrediction(labels[2, MBSize 25], HLast[2, MBSize 25]) -> [1, 1]
MPI Rank 3: 
MPI Rank 3: 9 out of 20 nodes do not share the minibatch layout with the input data.
MPI Rank 3: 
MPI Rank 3: 
MPI Rank 3: Starting minibatch loop, DataParallelSGD training (MyRank = 3, NumNodes = 4, NumGradientBits = 32).
MPI Rank 3: DecimateMinibatchSequences: WARNING: Number of parallel utterances 25 not a multiple of number of GPUs 4, GPU usage will be suboptimal.
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[   1-  10]: SamplesSeen = 250; TrainLossPerSample =  0.70007977; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.21100s; TotalTimePerSample = 0.84399ms; SamplesPerSecond = 1184
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  11-  20]: SamplesSeen = 250; TrainLossPerSample =  0.71514542; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.17235s; TotalTimePerSample = 0.68940ms; SamplesPerSecond = 1450
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  21-  30]: SamplesSeen = 250; TrainLossPerSample =  0.72945595; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.16873s; TotalTimePerSample = 0.67493ms; SamplesPerSecond = 1481
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  31-  40]: SamplesSeen = 250; TrainLossPerSample =  0.70079058; EvalErr[0]PerSample = 0.52400000; TotalTime = 0.16075s; TotalTimePerSample = 0.64300ms; SamplesPerSecond = 1555
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  41-  50]: SamplesSeen = 250; TrainLossPerSample =  0.70605615; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.16197s; TotalTimePerSample = 0.64788ms; SamplesPerSecond = 1543
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  51-  60]: SamplesSeen = 250; TrainLossPerSample =  0.71572398; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.15188s; TotalTimePerSample = 0.60751ms; SamplesPerSecond = 1646
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  61-  70]: SamplesSeen = 250; TrainLossPerSample =  0.72149851; EvalErr[0]PerSample = 0.48000000; TotalTime = 0.14181s; TotalTimePerSample = 0.56722ms; SamplesPerSecond = 1762
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  71-  80]: SamplesSeen = 250; TrainLossPerSample =  0.79845604; EvalErr[0]PerSample = 0.47600000; TotalTime = 0.14178s; TotalTimePerSample = 0.56714ms; SamplesPerSecond = 1763
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  81-  90]: SamplesSeen = 250; TrainLossPerSample =  0.69665186; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.13817s; TotalTimePerSample = 0.55266ms; SamplesPerSecond = 1809
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[  91- 100]: SamplesSeen = 250; TrainLossPerSample =  0.70723326; EvalErr[0]PerSample = 0.49200000; TotalTime = 0.12779s; TotalTimePerSample = 0.51114ms; SamplesPerSecond = 1956
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 101- 110]: SamplesSeen = 250; TrainLossPerSample =  0.71420345; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.13020s; TotalTimePerSample = 0.52080ms; SamplesPerSecond = 1920
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 111- 120]: SamplesSeen = 250; TrainLossPerSample =  0.69535258; EvalErr[0]PerSample = 0.43600000; TotalTime = 0.12825s; TotalTimePerSample = 0.51300ms; SamplesPerSecond = 1949
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 121- 130]: SamplesSeen = 250; TrainLossPerSample =  0.70078531; EvalErr[0]PerSample = 0.44000000; TotalTime = 0.12355s; TotalTimePerSample = 0.49419ms; SamplesPerSecond = 2023
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 131- 140]: SamplesSeen = 250; TrainLossPerSample =  0.71857916; EvalErr[0]PerSample = 0.54800000; TotalTime = 0.11948s; TotalTimePerSample = 0.47792ms; SamplesPerSecond = 2092
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 141- 150]: SamplesSeen = 250; TrainLossPerSample =  0.72088358; EvalErr[0]PerSample = 0.48800000; TotalTime = 0.11900s; TotalTimePerSample = 0.47600ms; SamplesPerSecond = 2100
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 151- 160]: SamplesSeen = 250; TrainLossPerSample =  0.71798840; EvalErr[0]PerSample = 0.55200000; TotalTime = 0.11648s; TotalTimePerSample = 0.46593ms; SamplesPerSecond = 2146
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 161- 170]: SamplesSeen = 250; TrainLossPerSample =  0.74162164; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11763s; TotalTimePerSample = 0.47053ms; SamplesPerSecond = 2125
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 171- 180]: SamplesSeen = 250; TrainLossPerSample =  0.71835128; EvalErr[0]PerSample = 0.51600000; TotalTime = 0.11827s; TotalTimePerSample = 0.47306ms; SamplesPerSecond = 2113
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 181- 190]: SamplesSeen = 250; TrainLossPerSample =  0.71529463; EvalErr[0]PerSample = 0.48400000; TotalTime = 0.12530s; TotalTimePerSample = 0.50120ms; SamplesPerSecond = 1995
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 191- 200]: SamplesSeen = 250; TrainLossPerSample =  0.71727657; EvalErr[0]PerSample = 0.53200000; TotalTime = 0.12000s; TotalTimePerSample = 0.48001ms; SamplesPerSecond = 2083
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 201- 210]: SamplesSeen = 250; TrainLossPerSample =  0.71745517; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11894s; TotalTimePerSample = 0.47577ms; SamplesPerSecond = 2101
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 211- 220]: SamplesSeen = 250; TrainLossPerSample =  0.72088398; EvalErr[0]PerSample = 0.50000000; TotalTime = 0.11488s; TotalTimePerSample = 0.45951ms; SamplesPerSecond = 2176
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 221- 230]: SamplesSeen = 250; TrainLossPerSample =  0.72006809; EvalErr[0]PerSample = 0.50800000; TotalTime = 0.12400s; TotalTimePerSample = 0.49601ms; SamplesPerSecond = 2016
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 231- 240]: SamplesSeen = 250; TrainLossPerSample =  0.71275468; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12093s; TotalTimePerSample = 0.48372ms; SamplesPerSecond = 2067
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 241- 250]: SamplesSeen = 250; TrainLossPerSample =  0.69644781; EvalErr[0]PerSample = 0.50400000; TotalTime = 0.11801s; TotalTimePerSample = 0.47202ms; SamplesPerSecond = 2118
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 251- 260]: SamplesSeen = 250; TrainLossPerSample =  0.70129698; EvalErr[0]PerSample = 0.51200000; TotalTime = 0.12166s; TotalTimePerSample = 0.48665ms; SamplesPerSecond = 2054
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 261- 270]: SamplesSeen = 250; TrainLossPerSample =  0.70768095; EvalErr[0]PerSample = 0.54400000; TotalTime = 0.12138s; TotalTimePerSample = 0.48553ms; SamplesPerSecond = 2059
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 271- 280]: SamplesSeen = 250; TrainLossPerSample =  0.69744379; EvalErr[0]PerSample = 0.52800000; TotalTime = 0.11718s; TotalTimePerSample = 0.46872ms; SamplesPerSecond = 2133
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 281- 290]: SamplesSeen = 250; TrainLossPerSample =  0.69266187; EvalErr[0]PerSample = 0.44800000; TotalTime = 0.11796s; TotalTimePerSample = 0.47183ms; SamplesPerSecond = 2119
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 291- 300]: SamplesSeen = 250; TrainLossPerSample =  0.69347266; EvalErr[0]PerSample = 0.49600000; TotalTime = 0.12167s; TotalTimePerSample = 0.48668ms; SamplesPerSecond = 2054
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 301- 310]: SamplesSeen = 250; TrainLossPerSample =  0.69257409; EvalErr[0]PerSample = 0.54000000; TotalTime = 0.12564s; TotalTimePerSample = 0.50255ms; SamplesPerSecond = 1989
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 311- 320]: SamplesSeen = 250; TrainLossPerSample =  0.68625741; EvalErr[0]PerSample = 0.38000000; TotalTime = 0.12551s; TotalTimePerSample = 0.50204ms; SamplesPerSecond = 1991
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 321- 330]: SamplesSeen = 250; TrainLossPerSample =  0.69064011; EvalErr[0]PerSample = 0.46800000; TotalTime = 0.12341s; TotalTimePerSample = 0.49363ms; SamplesPerSecond = 2025
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 331- 340]: SamplesSeen = 250; TrainLossPerSample =  0.70192154; EvalErr[0]PerSample = 0.46000000; TotalTime = 0.12370s; TotalTimePerSample = 0.49480ms; SamplesPerSecond = 2021
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 341- 350]: SamplesSeen = 250; TrainLossPerSample =  0.69058912; EvalErr[0]PerSample = 0.52000000; TotalTime = 0.12358s; TotalTimePerSample = 0.49434ms; SamplesPerSecond = 2022
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 351- 360]: SamplesSeen = 250; TrainLossPerSample =  0.67041492; EvalErr[0]PerSample = 0.39200000; TotalTime = 0.12207s; TotalTimePerSample = 0.48827ms; SamplesPerSecond = 2048
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 361- 370]: SamplesSeen = 250; TrainLossPerSample =  0.65913973; EvalErr[0]PerSample = 0.35600000; TotalTime = 0.12947s; TotalTimePerSample = 0.51787ms; SamplesPerSecond = 1930
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 371- 380]: SamplesSeen = 250; TrainLossPerSample =  0.63919877; EvalErr[0]PerSample = 0.36400000; TotalTime = 0.14402s; TotalTimePerSample = 0.57607ms; SamplesPerSecond = 1735
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 381- 390]: SamplesSeen = 250; TrainLossPerSample =  0.61293883; EvalErr[0]PerSample = 0.19200000; TotalTime = 0.14409s; TotalTimePerSample = 0.57637ms; SamplesPerSecond = 1735
MPI Rank 3:  Epoch[ 1 of 4]-Minibatch[ 391- 400]: SamplesSeen = 250; TrainLossPerSample =  0.55255352; EvalErr[0]PerSample = 0.18800000; TotalTime = 0.14499s; TotalTimePerSample = 0.57995ms; SamplesPerSecond = 1724
MPI Rank 3: Finished Epoch[ 1 of 4]: [Training Set] TrainLossPerSample = 0.70019555; EvalErrPerSample = 0.4735; AvgLearningRatePerSample = 0.01999999955; EpochTime=5.369658
MPI Rank 3: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 3: starting epoch 1 at record count 10000, and file position 0
MPI Rank 3: already there from last epoch
MPI Rank 3: 
MPI Rank 3: Starting minibatch loop, DataParallelSGD training (MyRank = 3, NumNodes = 4, NumGradientBits = 32).
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.50774625; EvalErr[0]PerSample = 0.24000000; TotalTime = 0.13824s; TotalTimePerSample = 0.55294ms; SamplesPerSecond = 1808
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.43388927; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.13875s; TotalTimePerSample = 0.55502ms; SamplesPerSecond = 1801
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.36674870; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14007s; TotalTimePerSample = 0.56027ms; SamplesPerSecond = 1784
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.33768765; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.13713s; TotalTimePerSample = 0.54853ms; SamplesPerSecond = 1823
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.30320946; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12833s; TotalTimePerSample = 0.51332ms; SamplesPerSecond = 1948
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.29576043; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.14854s; TotalTimePerSample = 0.59414ms; SamplesPerSecond = 1683
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24924491; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14657s; TotalTimePerSample = 0.58628ms; SamplesPerSecond = 1705
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.24632415; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14366s; TotalTimePerSample = 0.57462ms; SamplesPerSecond = 1740
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20943158; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13604s; TotalTimePerSample = 0.54416ms; SamplesPerSecond = 1837
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19115996; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.13442s; TotalTimePerSample = 0.53768ms; SamplesPerSecond = 1859
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17923231; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13593s; TotalTimePerSample = 0.54372ms; SamplesPerSecond = 1839
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17075422; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.13592s; TotalTimePerSample = 0.54368ms; SamplesPerSecond = 1839
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14442371; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.13116s; TotalTimePerSample = 0.52464ms; SamplesPerSecond = 1906
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17753819; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.13549s; TotalTimePerSample = 0.54197ms; SamplesPerSecond = 1845
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15087855; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.13867s; TotalTimePerSample = 0.55469ms; SamplesPerSecond = 1802
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19253023; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13507s; TotalTimePerSample = 0.54028ms; SamplesPerSecond = 1850
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17830684; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.14524s; TotalTimePerSample = 0.58098ms; SamplesPerSecond = 1721
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15115428; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.14260s; TotalTimePerSample = 0.57040ms; SamplesPerSecond = 1753
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19135968; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14288s; TotalTimePerSample = 0.57152ms; SamplesPerSecond = 1749
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.21491485; EvalErr[0]PerSample = 0.10400000; TotalTime = 0.14526s; TotalTimePerSample = 0.58103ms; SamplesPerSecond = 1721
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18682346; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.13489s; TotalTimePerSample = 0.53955ms; SamplesPerSecond = 1853
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18483205; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14344s; TotalTimePerSample = 0.57375ms; SamplesPerSecond = 1742
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14684504; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.14543s; TotalTimePerSample = 0.58172ms; SamplesPerSecond = 1719
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15322115; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.14576s; TotalTimePerSample = 0.58304ms; SamplesPerSecond = 1715
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19882571; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.13993s; TotalTimePerSample = 0.55974ms; SamplesPerSecond = 1786
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13683833; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.13986s; TotalTimePerSample = 0.55944ms; SamplesPerSecond = 1787
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18621188; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.13396s; TotalTimePerSample = 0.53586ms; SamplesPerSecond = 1866
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19408048; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.13196s; TotalTimePerSample = 0.52782ms; SamplesPerSecond = 1894
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17298137; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.14577s; TotalTimePerSample = 0.58307ms; SamplesPerSecond = 1715
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13265130; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.13253s; TotalTimePerSample = 0.53014ms; SamplesPerSecond = 1886
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17627178; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.13034s; TotalTimePerSample = 0.52135ms; SamplesPerSecond = 1918
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12734628; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12706s; TotalTimePerSample = 0.50823ms; SamplesPerSecond = 1967
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15108451; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12629s; TotalTimePerSample = 0.50514ms; SamplesPerSecond = 1979
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19729184; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12368s; TotalTimePerSample = 0.49470ms; SamplesPerSecond = 2021
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12857332; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12167s; TotalTimePerSample = 0.48667ms; SamplesPerSecond = 2054
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13867804; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12142s; TotalTimePerSample = 0.48569ms; SamplesPerSecond = 2058
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12786050; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12244s; TotalTimePerSample = 0.48977ms; SamplesPerSecond = 2041
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16643303; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12588s; TotalTimePerSample = 0.50352ms; SamplesPerSecond = 1986
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20440409; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12226s; TotalTimePerSample = 0.48902ms; SamplesPerSecond = 2044
MPI Rank 3:  Epoch[ 2 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14566238; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12138s; TotalTimePerSample = 0.48551ms; SamplesPerSecond = 2059
MPI Rank 3: Finished Epoch[ 2 of 4]: [Training Set] TrainLossPerSample = 0.20373029; EvalErrPerSample = 0.0827; AvgLearningRatePerSample = 0.00800000038; EpochTime=5.454936
MPI Rank 3: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 3: starting epoch 2 at record count 20000, and file position 0
MPI Rank 3: already there from last epoch
MPI Rank 3: 
MPI Rank 3: Starting minibatch loop, DataParallelSGD training (MyRank = 3, NumNodes = 4, NumGradientBits = 32).
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12590085; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12023s; TotalTimePerSample = 0.48090ms; SamplesPerSecond = 2079
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17780229; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12465s; TotalTimePerSample = 0.49858ms; SamplesPerSecond = 2005
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14417637; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12297s; TotalTimePerSample = 0.49187ms; SamplesPerSecond = 2033
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15796895; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12257s; TotalTimePerSample = 0.49028ms; SamplesPerSecond = 2039
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17002999; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12288s; TotalTimePerSample = 0.49151ms; SamplesPerSecond = 2034
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18262114; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11518s; TotalTimePerSample = 0.46071ms; SamplesPerSecond = 2170
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14643694; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11587s; TotalTimePerSample = 0.46348ms; SamplesPerSecond = 2157
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18030528; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12357s; TotalTimePerSample = 0.49427ms; SamplesPerSecond = 2023
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15846150; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12249s; TotalTimePerSample = 0.48998ms; SamplesPerSecond = 2040
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14486534; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11970s; TotalTimePerSample = 0.47880ms; SamplesPerSecond = 2088
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13469093; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.11866s; TotalTimePerSample = 0.47462ms; SamplesPerSecond = 2106
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13720019; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12676s; TotalTimePerSample = 0.50704ms; SamplesPerSecond = 1972
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11641295; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11993s; TotalTimePerSample = 0.47971ms; SamplesPerSecond = 2084
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16786647; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.11853s; TotalTimePerSample = 0.47412ms; SamplesPerSecond = 2109
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12811514; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12430s; TotalTimePerSample = 0.49721ms; SamplesPerSecond = 2011
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17257851; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.11774s; TotalTimePerSample = 0.47097ms; SamplesPerSecond = 2123
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17623656; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12213s; TotalTimePerSample = 0.48850ms; SamplesPerSecond = 2047
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14121117; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12045s; TotalTimePerSample = 0.48180ms; SamplesPerSecond = 2075
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19243443; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12144s; TotalTimePerSample = 0.48574ms; SamplesPerSecond = 2058
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20908161; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12909s; TotalTimePerSample = 0.51637ms; SamplesPerSecond = 1936
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18472067; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12856s; TotalTimePerSample = 0.51422ms; SamplesPerSecond = 1944
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18185535; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12229s; TotalTimePerSample = 0.48917ms; SamplesPerSecond = 2044
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14074205; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.13026s; TotalTimePerSample = 0.52105ms; SamplesPerSecond = 1919
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14871620; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12010s; TotalTimePerSample = 0.48041ms; SamplesPerSecond = 2081
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20299704; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.12197s; TotalTimePerSample = 0.48786ms; SamplesPerSecond = 2049
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12852038; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12039s; TotalTimePerSample = 0.48156ms; SamplesPerSecond = 2076
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18660439; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12410s; TotalTimePerSample = 0.49640ms; SamplesPerSecond = 2014
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19575997; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12024s; TotalTimePerSample = 0.48097ms; SamplesPerSecond = 2079
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16667676; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12499s; TotalTimePerSample = 0.49996ms; SamplesPerSecond = 2000
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12526169; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12472s; TotalTimePerSample = 0.49889ms; SamplesPerSecond = 2004
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17392131; EvalErr[0]PerSample = 0.08800000; TotalTime = 0.12303s; TotalTimePerSample = 0.49213ms; SamplesPerSecond = 2031
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12281615; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12350s; TotalTimePerSample = 0.49400ms; SamplesPerSecond = 2024
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14759390; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.11582s; TotalTimePerSample = 0.46327ms; SamplesPerSecond = 2158
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19801300; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12505s; TotalTimePerSample = 0.50019ms; SamplesPerSecond = 1999
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12593395; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12306s; TotalTimePerSample = 0.49225ms; SamplesPerSecond = 2031
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13756617; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12046s; TotalTimePerSample = 0.48184ms; SamplesPerSecond = 2075
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12838526; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12798s; TotalTimePerSample = 0.51194ms; SamplesPerSecond = 1953
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16654369; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.13400s; TotalTimePerSample = 0.53600ms; SamplesPerSecond = 1865
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20658951; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12144s; TotalTimePerSample = 0.48578ms; SamplesPerSecond = 2058
MPI Rank 3:  Epoch[ 3 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14583322; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.11522s; TotalTimePerSample = 0.46087ms; SamplesPerSecond = 2169
MPI Rank 3: Finished Epoch[ 3 of 4]: [Training Set] TrainLossPerSample = 0.15948618; EvalErrPerSample = 0.0766; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.926698
MPI Rank 3: Starting Epoch 4: learning rate per sample = 0.008000  effective momentum = 0.900000 
MPI Rank 3: starting epoch 3 at record count 30000, and file position 0
MPI Rank 3: already there from last epoch
MPI Rank 3: 
MPI Rank 3: Starting minibatch loop, DataParallelSGD training (MyRank = 3, NumNodes = 4, NumGradientBits = 32).
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[   1-  10 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12371232; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12049s; TotalTimePerSample = 0.48194ms; SamplesPerSecond = 2074
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  11-  20 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18070515; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12028s; TotalTimePerSample = 0.48113ms; SamplesPerSecond = 2078
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  21-  30 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14239730; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12702s; TotalTimePerSample = 0.50807ms; SamplesPerSecond = 1968
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  31-  40 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15630155; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.11959s; TotalTimePerSample = 0.47836ms; SamplesPerSecond = 2090
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  41-  50 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16935525; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11886s; TotalTimePerSample = 0.47544ms; SamplesPerSecond = 2103
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  51-  60 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18198833; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12210s; TotalTimePerSample = 0.48839ms; SamplesPerSecond = 2047
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  61-  70 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14475946; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.11983s; TotalTimePerSample = 0.47932ms; SamplesPerSecond = 2086
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  71-  80 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18021601; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.11840s; TotalTimePerSample = 0.47362ms; SamplesPerSecond = 2111
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  81-  90 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.15849308; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.11869s; TotalTimePerSample = 0.47474ms; SamplesPerSecond = 2106
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[  91- 100 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14474425; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12097s; TotalTimePerSample = 0.48389ms; SamplesPerSecond = 2066
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 101- 110 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13362926; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12025s; TotalTimePerSample = 0.48102ms; SamplesPerSecond = 2078
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 111- 120 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13708299; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12236s; TotalTimePerSample = 0.48943ms; SamplesPerSecond = 2043
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 121- 130 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.11569777; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.12025s; TotalTimePerSample = 0.48100ms; SamplesPerSecond = 2079
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 131- 140 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16892331; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.11957s; TotalTimePerSample = 0.47830ms; SamplesPerSecond = 2090
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 141- 150 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12752162; EvalErr[0]PerSample = 0.04800000; TotalTime = 0.12099s; TotalTimePerSample = 0.48394ms; SamplesPerSecond = 2066
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 151- 160 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17100866; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12234s; TotalTimePerSample = 0.48934ms; SamplesPerSecond = 2043
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 161- 170 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17660425; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.11970s; TotalTimePerSample = 0.47880ms; SamplesPerSecond = 2088
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 171- 180 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14105803; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12238s; TotalTimePerSample = 0.48954ms; SamplesPerSecond = 2042
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 181- 190 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19333552; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.12576s; TotalTimePerSample = 0.50306ms; SamplesPerSecond = 1987
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 191- 200 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20859524; EvalErr[0]PerSample = 0.10000000; TotalTime = 0.14403s; TotalTimePerSample = 0.57612ms; SamplesPerSecond = 1735
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 201- 210 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18499677; EvalErr[0]PerSample = 0.08000000; TotalTime = 0.12854s; TotalTimePerSample = 0.51416ms; SamplesPerSecond = 1944
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 211- 220 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18152438; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12730s; TotalTimePerSample = 0.50919ms; SamplesPerSecond = 1963
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 221- 230 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14037157; EvalErr[0]PerSample = 0.05600000; TotalTime = 0.11977s; TotalTimePerSample = 0.47907ms; SamplesPerSecond = 2087
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 231- 240 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14866862; EvalErr[0]PerSample = 0.07600000; TotalTime = 0.12054s; TotalTimePerSample = 0.48217ms; SamplesPerSecond = 2073
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 241- 250 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20347747; EvalErr[0]PerSample = 0.11200000; TotalTime = 0.11766s; TotalTimePerSample = 0.47064ms; SamplesPerSecond = 2124
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 251- 260 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12815012; EvalErr[0]PerSample = 0.07200000; TotalTime = 0.12102s; TotalTimePerSample = 0.48407ms; SamplesPerSecond = 2065
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 261- 270 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.18672810; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12104s; TotalTimePerSample = 0.48415ms; SamplesPerSecond = 2065
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 271- 280 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19552990; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12194s; TotalTimePerSample = 0.48776ms; SamplesPerSecond = 2050
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 281- 290 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16452642; EvalErr[0]PerSample = 0.06800000; TotalTime = 0.12325s; TotalTimePerSample = 0.49300ms; SamplesPerSecond = 2028
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 291- 300 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12461825; EvalErr[0]PerSample = 0.04400000; TotalTime = 0.12225s; TotalTimePerSample = 0.48901ms; SamplesPerSecond = 2044
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 301- 310 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.17285251; EvalErr[0]PerSample = 0.08400000; TotalTime = 0.12176s; TotalTimePerSample = 0.48705ms; SamplesPerSecond = 2053
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 311- 320 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12253620; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12281s; TotalTimePerSample = 0.49122ms; SamplesPerSecond = 2035
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 321- 330 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14723334; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12368s; TotalTimePerSample = 0.49473ms; SamplesPerSecond = 2021
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 331- 340 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.19789537; EvalErr[0]PerSample = 0.09200000; TotalTime = 0.12262s; TotalTimePerSample = 0.49048ms; SamplesPerSecond = 2038
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 341- 350 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12575877; EvalErr[0]PerSample = 0.05200000; TotalTime = 0.12474s; TotalTimePerSample = 0.49897ms; SamplesPerSecond = 2004
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 351- 360 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.13745928; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12588s; TotalTimePerSample = 0.50350ms; SamplesPerSecond = 1986
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 361- 370 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.12839652; EvalErr[0]PerSample = 0.06000000; TotalTime = 0.12028s; TotalTimePerSample = 0.48113ms; SamplesPerSecond = 2078
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 371- 380 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.16647280; EvalErr[0]PerSample = 0.09600000; TotalTime = 0.12155s; TotalTimePerSample = 0.48618ms; SamplesPerSecond = 2056
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 381- 390 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.20679434; EvalErr[0]PerSample = 0.11600000; TotalTime = 0.12413s; TotalTimePerSample = 0.49654ms; SamplesPerSecond = 2013
MPI Rank 3:  Epoch[ 4 of 4]-Minibatch[ 391- 400 of 400]: SamplesSeen = 250; TrainLossPerSample =  0.14585245; EvalErr[0]PerSample = 0.06400000; TotalTime = 0.12588s; TotalTimePerSample = 0.50353ms; SamplesPerSecond = 1985
MPI Rank 3: Finished Epoch[ 4 of 4]: [Training Set] TrainLossPerSample = 0.15914931; EvalErrPerSample = 0.0767; AvgLearningRatePerSample = 0.00800000038; EpochTime=4.931393
MPI Rank 3: CNTKCommandTrainEnd: SimpleMultiGPU
MPI Rank 3: __COMPLETED__
MPI Rank 3: ~MPIWrapper
