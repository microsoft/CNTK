=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 D:\work\Program\Code\local-src\CNTK-public\CNTK-github\x64\debug\cntk.exe configFile=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu DeviceId=-1 timestamping=true numCPUThreads=4 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jun 13 2016 13:08:26
		Last modified date: Tue Jun  7 15:46:08 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: yes
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
		CUB_PATH: D:\work\Program\Code\src\CUB
		CUDNN_PATH: D:\work\Program\Code\src\cuDNN\cuda
		Build Branch: m
		Build SHA1: 28325ba5041e79652993f2e70ef414e0f5b9880e (modified)
		Built by erw on 7253-Wang
		Build Path: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jun 13 2016 13:08:26
		Last modified date: Tue Jun  7 15:46:08 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: yes
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
		CUB_PATH: D:\work\Program\Code\src\CUB
		CUDNN_PATH: D:\work\Program\Code\src\cuDNN\cuda
		Build Branch: m
		Build SHA1: 28325ba5041e79652993f2e70ef414e0f5b9880e (modified)
		Built by erw on 7253-Wang
		Build Path: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 06/13/2016 14:30:38: Redirecting stderr to file D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr_speechTrain.logrank0
MPI Rank 0: 06/13/2016 14:30:38: -------------------------------------------------------------------
MPI Rank 0: 06/13/2016 14:30:38: Build info: 
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: 		Built time: Jun 13 2016 13:08:26
MPI Rank 0: 06/13/2016 14:30:38: 		Last modified date: Tue Jun  7 15:46:08 2016
MPI Rank 0: 06/13/2016 14:30:38: 		Build type: Debug
MPI Rank 0: 06/13/2016 14:30:38: 		Build target: GPU
MPI Rank 0: 06/13/2016 14:30:38: 		With 1bit-SGD: yes
MPI Rank 0: 06/13/2016 14:30:38: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 0: 06/13/2016 14:30:38: 		CUB_PATH: D:\work\Program\Code\src\CUB
MPI Rank 0: 06/13/2016 14:30:38: 		CUDNN_PATH: D:\work\Program\Code\src\cuDNN\cuda
MPI Rank 0: 06/13/2016 14:30:38: 		Build Branch: m
MPI Rank 0: 06/13/2016 14:30:38: 		Build SHA1: 28325ba5041e79652993f2e70ef414e0f5b9880e (modified)
MPI Rank 0: 06/13/2016 14:30:38: 		Built by erw on 7253-Wang
MPI Rank 0: 06/13/2016 14:30:38: 		Build Path: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Source\CNTK\
MPI Rank 0: 06/13/2016 14:30:38: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: Running on 7253-Wang at 2016/06/13 14:30:38
MPI Rank 0: 06/13/2016 14:30:38: Command line: 
MPI Rank 0: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\x64\debug\cntk.exe  configFile=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data  RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu  DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data  ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN  OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu  DeviceId=-1  timestamping=true  numCPUThreads=4  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 06/13/2016 14:30:38: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=4
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 06/13/2016 14:30:38: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=4
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=4
MPI Rank 0: configparameters: cntk.cntk:OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 06/13/2016 14:30:38: Commands: speechTrain
MPI Rank 0: 06/13/2016 14:30:38: Precision = "double"
MPI Rank 0: 06/13/2016 14:30:38: Using 4 CPU threads.
MPI Rank 0: 06/13/2016 14:30:38: CNTKModelPath: D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn
MPI Rank 0: 06/13/2016 14:30:38: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 06/13/2016 14:30:38: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: ##############################################################################
MPI Rank 0: 06/13/2016 14:30:38: #                                                                            #
MPI Rank 0: 06/13/2016 14:30:38: # Action "train"                                                             #
MPI Rank 0: 06/13/2016 14:30:38: #                                                                            #
MPI Rank 0: 06/13/2016 14:30:38: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:38: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: Training criterion node(s):
MPI Rank 0: 06/13/2016 14:30:40: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 000001D790F99070: {[W2 Value[132 x 512]] }
MPI Rank 0: 000001D790F99140: {[B0 Value[512 x 1]] }
MPI Rank 0: 000001D790F99210: {[W0 Value[512 x 363]] }
MPI Rank 0: 000001D790F992E0: {[B1 Value[512 x 1]] }
MPI Rank 0: 000001D790F993B0: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 000001D790F99480: {[B2 Value[132 x 1]] }
MPI Rank 0: 000001D790F99620: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 000001D790F99890: {[W1 Value[512 x 512]] }
MPI Rank 0: 000001D790F99A30: {[labels Value[132 x *]] }
MPI Rank 0: 000001D790F99BD0: {[Prior Value[132]] }
MPI Rank 0: 000001D790F99CA0: {[features Value[363 x *]] }
MPI Rank 0: 000001D791035F90: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 000001D7910362D0: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 000001D791036470: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 000001D791036540: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 000001D791036610: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 000001D7910367B0: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 000001D791036AF0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 000001D791036BC0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 000001D791036D60: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 000001D791037310: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 000001D7910373E0: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 000001D791037650: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 000001D791037720: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 000001D7910378C0: {[W0*features Value[512 x *]] }
MPI Rank 0: 000001D791037A60: {[LogOfPrior Value[132]] }
MPI Rank 0: 000001D791037B30: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 000001D791037E70: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:30:40: 	MeanOfFeatures = Mean()
MPI Rank 0: 06/13/2016 14:30:40: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 06/13/2016 14:30:40: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:31:47: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:31:48: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:31:48: Starting minibatch loop.
MPI Rank 0: 06/13/2016 14:31:49:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.60890820 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.6655s; samplesPerSecond = 288.5
MPI Rank 0: 06/13/2016 14:31:49:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52716679 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.6591s; samplesPerSecond = 291.3
MPI Rank 0: 06/13/2016 14:31:50:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.33660175 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.6813s; samplesPerSecond = 281.8
MPI Rank 0: 06/13/2016 14:31:51:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.32573214 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.6682s; samplesPerSecond = 287.4
MPI Rank 0: 06/13/2016 14:31:51:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35436418 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6836s; samplesPerSecond = 280.8
MPI Rank 0: 06/13/2016 14:31:52:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.08519364 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.6846s; samplesPerSecond = 280.5
MPI Rank 0: 06/13/2016 14:31:53:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.00677380 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.6570s; samplesPerSecond = 292.2
MPI Rank 0: 06/13/2016 14:31:53:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07175221 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.6683s; samplesPerSecond = 287.3
MPI Rank 0: 06/13/2016 14:31:54:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92954318 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6880s; samplesPerSecond = 279.1
MPI Rank 0: 06/13/2016 14:31:55:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86117205 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6843s; samplesPerSecond = 280.6
MPI Rank 0: 06/13/2016 14:31:55:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93465921 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6978s; samplesPerSecond = 275.2
MPI Rank 0: 06/13/2016 14:31:56:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12618509 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.6805s; samplesPerSecond = 282.2
MPI Rank 0: 06/13/2016 14:31:57:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.70583042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.6909s; samplesPerSecond = 277.9
MPI Rank 0: 06/13/2016 14:31:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88217192 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.6618s; samplesPerSecond = 290.1
MPI Rank 0: 06/13/2016 14:31:58:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87616084 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.6461s; samplesPerSecond = 297.2
MPI Rank 0: 06/13/2016 14:31:59:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.85875612 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6808s; samplesPerSecond = 282.0
MPI Rank 0: 06/13/2016 14:31:59:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78648456 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.6730s; samplesPerSecond = 285.3
MPI Rank 0: 06/13/2016 14:32:00:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62874694 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6533s; samplesPerSecond = 293.9
MPI Rank 0: 06/13/2016 14:32:01:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66446492 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.6725s; samplesPerSecond = 285.5
MPI Rank 0: 06/13/2016 14:32:01:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79215195 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6829s; samplesPerSecond = 281.2
MPI Rank 0: 06/13/2016 14:32:02:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43885126 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.6713s; samplesPerSecond = 286.0
MPI Rank 0: 06/13/2016 14:32:03:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.50156326 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6912s; samplesPerSecond = 277.8
MPI Rank 0: 06/13/2016 14:32:03:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52543190 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.6929s; samplesPerSecond = 277.1
MPI Rank 0: 06/13/2016 14:32:04:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.58322877 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6998s; samplesPerSecond = 274.4
MPI Rank 0: 06/13/2016 14:32:05:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.61849156 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.6548s; samplesPerSecond = 293.2
MPI Rank 0: 06/13/2016 14:32:05:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45622012 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.6865s; samplesPerSecond = 279.7
MPI Rank 0: 06/13/2016 14:32:06:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43723757 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6665s; samplesPerSecond = 288.1
MPI Rank 0: 06/13/2016 14:32:07:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.36631241 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.7077s; samplesPerSecond = 271.3
MPI Rank 0: 06/13/2016 14:32:08:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.39051228 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.7081s; samplesPerSecond = 271.2
MPI Rank 0: 06/13/2016 14:32:08:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20390400 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.7304s; samplesPerSecond = 262.9
MPI Rank 0: 06/13/2016 14:32:09:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.49475100 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.6805s; samplesPerSecond = 282.2
MPI Rank 0: 06/13/2016 14:32:10:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.47041320 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.7048s; samplesPerSecond = 272.4
MPI Rank 0: 06/13/2016 14:32:10:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.57940439 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.6854s; samplesPerSecond = 280.1
MPI Rank 0: 06/13/2016 14:32:11:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.52233938 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.6867s; samplesPerSecond = 279.6
MPI Rank 0: 06/13/2016 14:32:12:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.43772986 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.6971s; samplesPerSecond = 275.4
MPI Rank 0: 06/13/2016 14:32:12:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.93817600 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.6994s; samplesPerSecond = 274.5
MPI Rank 0: 06/13/2016 14:32:13:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.24865153 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.7023s; samplesPerSecond = 273.4
MPI Rank 0: 06/13/2016 14:32:14:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.33241490 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.6992s; samplesPerSecond = 274.6
MPI Rank 0: 06/13/2016 14:32:15:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.26380454 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6970s; samplesPerSecond = 275.5
MPI Rank 0: 06/13/2016 14:32:15:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.37946974 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.6875s; samplesPerSecond = 279.3
MPI Rank 0: 06/13/2016 14:32:16:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.32789345 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.7041s; samplesPerSecond = 272.7
MPI Rank 0: 06/13/2016 14:32:17:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.07664184 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6754s; samplesPerSecond = 284.3
MPI Rank 0: 06/13/2016 14:32:17:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17477588 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.7103s; samplesPerSecond = 270.3
MPI Rank 0: 06/13/2016 14:32:18:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.01233572 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.6888s; samplesPerSecond = 278.7
MPI Rank 0: 06/13/2016 14:32:19:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.20672882 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.7014s; samplesPerSecond = 273.8
MPI Rank 0: 06/13/2016 14:32:19:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.11087078 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.7056s; samplesPerSecond = 272.1
MPI Rank 0: 06/13/2016 14:32:20:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.97524024 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6902s; samplesPerSecond = 278.2
MPI Rank 0: 06/13/2016 14:32:21:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.16993860 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6911s; samplesPerSecond = 277.8
MPI Rank 0: 06/13/2016 14:32:21:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.06069782 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.6837s; samplesPerSecond = 280.8
MPI Rank 0: 06/13/2016 14:32:22:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.02104665 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.6915s; samplesPerSecond = 277.7
MPI Rank 0: 06/13/2016 14:32:23:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.89479193 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7120s; samplesPerSecond = 269.7
MPI Rank 0: 06/13/2016 14:32:24:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05581089 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.6895s; samplesPerSecond = 278.5
MPI Rank 0: 06/13/2016 14:32:24:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81580270 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6900s; samplesPerSecond = 278.3
MPI Rank 0: 06/13/2016 14:32:25:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96542964 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.6944s; samplesPerSecond = 276.5
MPI Rank 0: 06/13/2016 14:32:26:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.80446480 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6994s; samplesPerSecond = 274.5
MPI Rank 0: 06/13/2016 14:32:26:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.98588565 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6979s; samplesPerSecond = 275.1
MPI Rank 0: 06/13/2016 14:32:27:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.83126023 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7002s; samplesPerSecond = 274.2
MPI Rank 0: 06/13/2016 14:32:28:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.65390849 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.7000s; samplesPerSecond = 274.3
MPI Rank 0: 06/13/2016 14:32:28:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78675476 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6801s; samplesPerSecond = 282.3
MPI Rank 0: 06/13/2016 14:32:29:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75042547 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7074s; samplesPerSecond = 271.4
MPI Rank 0: 06/13/2016 14:32:30:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.65031287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6907s; samplesPerSecond = 278.0
MPI Rank 0: 06/13/2016 14:32:31:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85962626 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6867s; samplesPerSecond = 279.6
MPI Rank 0: 06/13/2016 14:32:31:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61674669 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6836s; samplesPerSecond = 280.9
MPI Rank 0: 06/13/2016 14:32:32:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.59389525 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6997s; samplesPerSecond = 274.4
MPI Rank 0: 06/13/2016 14:32:33:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.72402489 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.6965s; samplesPerSecond = 275.7
MPI Rank 0: 06/13/2016 14:32:33:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.66031776 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.6745s; samplesPerSecond = 284.6
MPI Rank 0: 06/13/2016 14:32:34:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70495981 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6904s; samplesPerSecond = 278.1
MPI Rank 0: 06/13/2016 14:32:35:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58198915 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.7138s; samplesPerSecond = 269.0
MPI Rank 0: 06/13/2016 14:32:35:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.52865200 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6811s; samplesPerSecond = 281.9
MPI Rank 0: 06/13/2016 14:32:36:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39380567 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.7049s; samplesPerSecond = 272.4
MPI Rank 0: 06/13/2016 14:32:37:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.68679304 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.7073s; samplesPerSecond = 271.5
MPI Rank 0: 06/13/2016 14:32:37:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70882982 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6898s; samplesPerSecond = 278.4
MPI Rank 0: 06/13/2016 14:32:38:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51425379 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.7109s; samplesPerSecond = 270.1
MPI Rank 0: 06/13/2016 14:32:39:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50672974 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.6940s; samplesPerSecond = 276.7
MPI Rank 0: 06/13/2016 14:32:40:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69121211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6891s; samplesPerSecond = 278.6
MPI Rank 0: 06/13/2016 14:32:40:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.38196469 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.7023s; samplesPerSecond = 273.4
MPI Rank 0: 06/13/2016 14:32:41:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.44279881 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.7260s; samplesPerSecond = 264.5
MPI Rank 0: 06/13/2016 14:32:42:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44240296 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.6874s; samplesPerSecond = 279.3
MPI Rank 0: 06/13/2016 14:32:42:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.53190921 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6842s; samplesPerSecond = 280.6
MPI Rank 0: 06/13/2016 14:32:43:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48839884 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6990s; samplesPerSecond = 274.7
MPI Rank 0: 06/13/2016 14:32:44:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43919959 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6789s; samplesPerSecond = 282.8
MPI Rank 0: 06/13/2016 14:32:44:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40142421 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.6915s; samplesPerSecond = 277.7
MPI Rank 0: 06/13/2016 14:32:45:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.59285302 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6900s; samplesPerSecond = 278.3
MPI Rank 0: 06/13/2016 14:32:46:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.20980454 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.7055s; samplesPerSecond = 272.2
MPI Rank 0: 06/13/2016 14:32:47:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.51329030 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.7151s; samplesPerSecond = 268.5
MPI Rank 0: 06/13/2016 14:32:47:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.50508827 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.7073s; samplesPerSecond = 271.5
MPI Rank 0: 06/13/2016 14:32:48:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.20752202 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6863s; samplesPerSecond = 279.8
MPI Rank 0: 06/13/2016 14:32:49:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.15390534 * 192; EvalErrorPrediction = 0.53125000 * 192; time = 0.7052s; samplesPerSecond = 272.3
MPI Rank 0: 06/13/2016 14:32:49:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26279557 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6917s; samplesPerSecond = 277.6
MPI Rank 0: 06/13/2016 14:32:50:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13640681 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6889s; samplesPerSecond = 278.7
MPI Rank 0: 06/13/2016 14:32:51:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45376287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.7095s; samplesPerSecond = 270.6
MPI Rank 0: 06/13/2016 14:32:51:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.12574189 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6813s; samplesPerSecond = 281.8
MPI Rank 0: 06/13/2016 14:32:52:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.35150240 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.7058s; samplesPerSecond = 272.0
MPI Rank 0: 06/13/2016 14:32:53:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33967886 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.7183s; samplesPerSecond = 267.3
MPI Rank 0: 06/13/2016 14:32:54:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.27059354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.7008s; samplesPerSecond = 274.0
MPI Rank 0: 06/13/2016 14:32:54:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20103423 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6869s; samplesPerSecond = 279.5
MPI Rank 0: 06/13/2016 14:32:55:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.17361421 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.6974s; samplesPerSecond = 275.3
MPI Rank 0: 06/13/2016 14:32:56:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36955517 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.6670s; samplesPerSecond = 287.8
MPI Rank 0: 06/13/2016 14:32:56:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.03617679 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.7122s; samplesPerSecond = 269.6
MPI Rank 0: 06/13/2016 14:32:57:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12189751 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.7098s; samplesPerSecond = 270.5
MPI Rank 0: 06/13/2016 14:32:58:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24415119 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.7149s; samplesPerSecond = 268.6
MPI Rank 0: 06/13/2016 14:32:58:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23313700 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.6998s; samplesPerSecond = 274.4
MPI Rank 0: 06/13/2016 14:32:59:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22962689 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.7094s; samplesPerSecond = 270.7
MPI Rank 0: 06/13/2016 14:33:00:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.12441878 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.6940s; samplesPerSecond = 276.7
MPI Rank 0: 06/13/2016 14:33:01:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.30683710 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.7153s; samplesPerSecond = 268.4
MPI Rank 0: 06/13/2016 14:33:01:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.36587381 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6665s; samplesPerSecond = 288.1
MPI Rank 0: 06/13/2016 14:33:02: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00704835 * 20480; EvalErrorPrediction = 0.72827148 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=73.8519s
MPI Rank 0: 06/13/2016 14:33:02: SGD: Saving checkpoint model 'D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:02: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 06/13/2016 14:33:03:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.09930028 * 476; EvalErrorPrediction = 0.55252101 * 476; time = 0.9319s; samplesPerSecond = 510.8
MPI Rank 0: 06/13/2016 14:33:04:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.14014808 * 520; EvalErrorPrediction = 0.57307692 * 520; time = 0.9031s; samplesPerSecond = 575.8
MPI Rank 0: 06/13/2016 14:33:05:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.16353953 * 492; EvalErrorPrediction = 0.57926829 * 492; time = 0.8815s; samplesPerSecond = 558.1
MPI Rank 0: 06/13/2016 14:33:06:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.15181737 * 518; EvalErrorPrediction = 0.56563707 * 518; time = 0.9034s; samplesPerSecond = 573.4
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 1.63-seconds latency this time; accumulated time on sync point = 1.63 seconds , average latency = 1.63 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     5.60 seconds since last report (0.00 seconds on comm.); 4243 samples processed by 2 workers (2186 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 0.76k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:08:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.11575586 * 520; EvalErrorPrediction = 0.57692308 * 520; time = 2.5776s; samplesPerSecond = 201.7
MPI Rank 0: 06/13/2016 14:33:09:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 1.94616752 * 474; EvalErrorPrediction = 0.53797468 * 474; time = 0.8694s; samplesPerSecond = 545.2
MPI Rank 0: 06/13/2016 14:33:10:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.94944352 * 510; EvalErrorPrediction = 0.49607843 * 510; time = 0.9115s; samplesPerSecond = 559.5
MPI Rank 0: 06/13/2016 14:33:11:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.01345303 * 489; EvalErrorPrediction = 0.56850716 * 489; time = 0.9000s; samplesPerSecond = 543.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 1.66-seconds latency this time; accumulated time on sync point = 3.29 seconds , average latency = 1.64 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     5.59 seconds since last report (0.00 seconds on comm.); 4292 samples processed by 2 workers (2153 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 0.77k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:13:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.00914712 * 501; EvalErrorPrediction = 0.53493014 * 501; time = 2.5834s; samplesPerSecond = 193.9
MPI Rank 0: 06/13/2016 14:33:14:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.11476422 * 490; EvalErrorPrediction = 0.59591837 * 490; time = 0.9316s; samplesPerSecond = 526.0
MPI Rank 0: 06/13/2016 14:33:15:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.85008841 * 515; EvalErrorPrediction = 0.50291262 * 515; time = 0.9134s; samplesPerSecond = 563.8
MPI Rank 0: 06/13/2016 14:33:16:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.00524788 * 482; EvalErrorPrediction = 0.57676349 * 482; time = 0.8815s; samplesPerSecond = 546.8
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 1.68-seconds latency this time; accumulated time on sync point = 4.97 seconds , average latency = 1.66 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     5.59 seconds since last report (0.00 seconds on comm.); 4263 samples processed by 2 workers (2126 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 0.76k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:19:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.92802458 * 478; EvalErrorPrediction = 0.52510460 * 478; time = 2.5611s; samplesPerSecond = 186.6
MPI Rank 0: 06/13/2016 14:33:20:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.82641498 * 471; EvalErrorPrediction = 0.52441614 * 471; time = 0.9102s; samplesPerSecond = 517.5
MPI Rank 0: 06/13/2016 14:33:20:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.85654377 * 480; EvalErrorPrediction = 0.48541667 * 480; time = 0.8696s; samplesPerSecond = 552.0
MPI Rank 0: 06/13/2016 14:33:21:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86400750 * 487; EvalErrorPrediction = 0.49075975 * 487; time = 0.9091s; samplesPerSecond = 535.7
MPI Rank 0: 06/13/2016 14:33:22:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.00861530 * 476; EvalErrorPrediction = 0.52100840 * 476; time = 0.7815s; samplesPerSecond = 609.1
MPI Rank 0: 06/13/2016 14:33:23:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.84567639 * 476; EvalErrorPrediction = 0.52100840 * 476; time = 0.8185s; samplesPerSecond = 581.5
MPI Rank 0: 06/13/2016 14:33:24:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.90351565 * 500; EvalErrorPrediction = 0.55000000 * 500; time = 0.7876s; samplesPerSecond = 634.8
MPI Rank 0: 06/13/2016 14:33:25:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.95949480 * 498; EvalErrorPrediction = 0.53815261 * 498; time = 0.8040s; samplesPerSecond = 619.4
MPI Rank 0: 06/13/2016 14:33:25:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.89275264 * 481; EvalErrorPrediction = 0.52806653 * 481; time = 0.8053s; samplesPerSecond = 597.3
MPI Rank 0: 06/13/2016 14:33:26:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.85125663 * 496; EvalErrorPrediction = 0.51814516 * 496; time = 0.7883s; samplesPerSecond = 629.2
MPI Rank 0: 06/13/2016 14:33:27:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.87268109 * 501; EvalErrorPrediction = 0.52095808 * 501; time = 0.7959s; samplesPerSecond = 629.5
MPI Rank 0: 06/13/2016 14:33:28:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.92335865 * 488; EvalErrorPrediction = 0.56762295 * 488; time = 0.8006s; samplesPerSecond = 609.5
MPI Rank 0: 06/13/2016 14:33:29:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.97087234 * 490; EvalErrorPrediction = 0.53877551 * 490; time = 0.7800s; samplesPerSecond = 628.2
MPI Rank 0: 06/13/2016 14:33:29:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.73194707 * 480; EvalErrorPrediction = 0.47916667 * 480; time = 0.8098s; samplesPerSecond = 592.7
MPI Rank 0: 06/13/2016 14:33:30:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.87213657 * 338; EvalErrorPrediction = 0.52071006 * 338; time = 0.5142s; samplesPerSecond = 657.3
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 4.97 seconds , average latency = 1.24 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:    11.20 seconds since last report (0.00 seconds on comm.); 7682 samples processed by 2 workers (6662 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 0.69k samplesPerSecond , throughputPerWorker = 0.34k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:30: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97981265 * 20480; EvalErrorPrediction = 0.54433594 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=27.98s
MPI Rank 0: 06/13/2016 14:33:30: SGD: Saving checkpoint model 'D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:30: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:30: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 06/13/2016 14:33:32:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.92806745 * 1935; EvalErrorPrediction = 0.53746770 * 1935; time = 2.0009s; samplesPerSecond = 967.1
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.15-seconds latency this time; accumulated time on sync point = 0.15 seconds , average latency = 0.15 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.91 seconds since last report (0.00 seconds on comm.); 4848 samples processed by 2 workers (2601 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.66k samplesPerSecond , throughputPerWorker = 0.83k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:34:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85104228 * 1962; EvalErrorPrediction = 0.52293578 * 1962; time = 2.1416s; samplesPerSecond = 916.1
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.13-seconds latency this time; accumulated time on sync point = 0.28 seconds , average latency = 0.14 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.72 seconds since last report (0.00 seconds on comm.); 4857 samples processed by 2 workers (2603 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.79k samplesPerSecond , throughputPerWorker = 0.89k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:37:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89130702 * 1967; EvalErrorPrediction = 0.53431622 * 1967; time = 2.0692s; samplesPerSecond = 950.6
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.21-seconds latency this time; accumulated time on sync point = 0.48 seconds , average latency = 0.16 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.81 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2583 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.75k samplesPerSecond , throughputPerWorker = 0.87k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:39:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81602105 * 1923; EvalErrorPrediction = 0.49973999 * 1923; time = 2.1615s; samplesPerSecond = 889.7
MPI Rank 0: 06/13/2016 14:33:41:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.95700620 * 1914; EvalErrorPrediction = 0.53814002 * 1914; time = 1.8726s; samplesPerSecond = 1022.1
MPI Rank 0: 06/13/2016 14:33:42:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.93827772 * 1908; EvalErrorPrediction = 0.54297694 * 1908; time = 1.6627s; samplesPerSecond = 1147.5
MPI Rank 0: 06/13/2016 14:33:43:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.87630077 * 1283; EvalErrorPrediction = 0.51909587 * 1283; time = 1.0415s; samplesPerSecond = 1231.9
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.48 seconds , average latency = 0.12 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     4.59 seconds since last report (0.00 seconds on comm.); 5870 samples processed by 2 workers (5105 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.28k samplesPerSecond , throughputPerWorker = 0.64k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:43: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89870701 * 20480; EvalErrorPrediction = 0.52910156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=13.0325s
MPI Rank 0: 06/13/2016 14:33:44: SGD: Saving checkpoint model 'D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:44: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 06/13/2016 14:33:46:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87518842 * 1935; EvalErrorPrediction = 0.50284238 * 1935; time = 1.9519s; samplesPerSecond = 991.4
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.20-seconds latency this time; accumulated time on sync point = 0.20 seconds , average latency = 0.20 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.89 seconds since last report (0.00 seconds on comm.); 4851 samples processed by 2 workers (2561 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.68k samplesPerSecond , throughputPerWorker = 0.84k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:48:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85789533 * 1919; EvalErrorPrediction = 0.51641480 * 1919; time = 2.1502s; samplesPerSecond = 892.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.25-seconds latency this time; accumulated time on sync point = 0.45 seconds , average latency = 0.22 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.81 seconds since last report (0.00 seconds on comm.); 4948 samples processed by 2 workers (2547 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.76k samplesPerSecond , throughputPerWorker = 0.88k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:50:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83395252 * 1900; EvalErrorPrediction = 0.50578947 * 1900; time = 2.2049s; samplesPerSecond = 861.7
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.32-seconds latency this time; accumulated time on sync point = 0.77 seconds , average latency = 0.26 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.95 seconds since last report (0.00 seconds on comm.); 4911 samples processed by 2 workers (2489 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.66k samplesPerSecond , throughputPerWorker = 0.83k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:52:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82229805 * 1843; EvalErrorPrediction = 0.50081389 * 1843; time = 2.2734s; samplesPerSecond = 810.7
MPI Rank 0: 06/13/2016 14:33:54:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80986336 * 1876; EvalErrorPrediction = 0.50426439 * 1876; time = 1.7615s; samplesPerSecond = 1065.0
MPI Rank 0: 06/13/2016 14:33:56:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.82849330 * 1846; EvalErrorPrediction = 0.50758397 * 1846; time = 1.6212s; samplesPerSecond = 1138.7
MPI Rank 0: 06/13/2016 14:33:57:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86266862 * 1326; EvalErrorPrediction = 0.51659125 * 1326; time = 1.0515s; samplesPerSecond = 1261.1
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.77 seconds , average latency = 0.19 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     4.45 seconds since last report (0.00 seconds on comm.); 5770 samples processed by 2 workers (5048 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.30k samplesPerSecond , throughputPerWorker = 0.65k samplesPerSecond
MPI Rank 0: 06/13/2016 14:33:57: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84071362 * 20480; EvalErrorPrediction = 0.50903320 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=13.1042s
MPI Rank 0: 06/13/2016 14:33:57: SGD: Saving checkpoint model 'D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:57: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:33:57: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 06/13/2016 14:33:59:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80709477 * 1872; EvalErrorPrediction = 0.49038462 * 1872; time = 1.9043s; samplesPerSecond = 983.0
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.26-seconds latency this time; accumulated time on sync point = 0.26 seconds , average latency = 0.26 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.89 seconds since last report (0.00 seconds on comm.); 4879 samples processed by 2 workers (2475 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.69k samplesPerSecond , throughputPerWorker = 0.85k samplesPerSecond
MPI Rank 0: 06/13/2016 14:34:01:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.81345086 * 1868; EvalErrorPrediction = 0.49089936 * 1868; time = 2.2142s; samplesPerSecond = 843.6
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.26 seconds , average latency = 0.13 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.54 seconds since last report (0.00 seconds on comm.); 4542 samples processed by 2 workers (2483 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.79k samplesPerSecond , throughputPerWorker = 0.89k samplesPerSecond
MPI Rank 0: 06/13/2016 14:34:03:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.72849281 * 1839; EvalErrorPrediction = 0.46601414 * 1839; time = 1.9259s; samplesPerSecond = 954.9
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.43-seconds latency this time; accumulated time on sync point = 0.69 seconds , average latency = 0.23 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     3.03 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2461 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.62k samplesPerSecond , throughputPerWorker = 0.81k samplesPerSecond
MPI Rank 0: 06/13/2016 14:34:05:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.84410986 * 1840; EvalErrorPrediction = 0.50163043 * 1840; time = 2.3571s; samplesPerSecond = 780.6
MPI Rank 0: 06/13/2016 14:34:07:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.82120996 * 1846; EvalErrorPrediction = 0.50054171 * 1846; time = 1.8735s; samplesPerSecond = 985.3
MPI Rank 0: 06/13/2016 14:34:09:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.83774614 * 1858; EvalErrorPrediction = 0.50269107 * 1858; time = 1.6286s; samplesPerSecond = 1140.9
MPI Rank 0: 06/13/2016 14:34:10:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.81233688 * 1296; EvalErrorPrediction = 0.50540123 * 1296; time = 1.0294s; samplesPerSecond = 1258.9
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.69 seconds , average latency = 0.17 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     4.55 seconds since last report (0.00 seconds on comm.); 6154 samples processed by 2 workers (5000 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.35k samplesPerSecond , throughputPerWorker = 0.68k samplesPerSecond
MPI Rank 0: 06/13/2016 14:34:10: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.80187852 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=13.0112s
MPI Rank 0: 06/13/2016 14:34:10: SGD: Saving checkpoint model 'D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 06/13/2016 14:34:10: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:34:10: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 06/13/2016 14:34:10: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 06/13/2016 14:30:38: Redirecting stderr to file D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr_speechTrain.logrank1
MPI Rank 1: 06/13/2016 14:30:38: -------------------------------------------------------------------
MPI Rank 1: 06/13/2016 14:30:38: Build info: 
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: 		Built time: Jun 13 2016 13:08:26
MPI Rank 1: 06/13/2016 14:30:38: 		Last modified date: Tue Jun  7 15:46:08 2016
MPI Rank 1: 06/13/2016 14:30:38: 		Build type: Debug
MPI Rank 1: 06/13/2016 14:30:38: 		Build target: GPU
MPI Rank 1: 06/13/2016 14:30:38: 		With 1bit-SGD: yes
MPI Rank 1: 06/13/2016 14:30:38: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0
MPI Rank 1: 06/13/2016 14:30:38: 		CUB_PATH: D:\work\Program\Code\src\CUB
MPI Rank 1: 06/13/2016 14:30:38: 		CUDNN_PATH: D:\work\Program\Code\src\cuDNN\cuda
MPI Rank 1: 06/13/2016 14:30:38: 		Build Branch: m
MPI Rank 1: 06/13/2016 14:30:38: 		Build SHA1: 28325ba5041e79652993f2e70ef414e0f5b9880e (modified)
MPI Rank 1: 06/13/2016 14:30:38: 		Built by erw on 7253-Wang
MPI Rank 1: 06/13/2016 14:30:38: 		Build Path: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Source\CNTK\
MPI Rank 1: 06/13/2016 14:30:38: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: Running on 7253-Wang at 2016/06/13 14:30:38
MPI Rank 1: 06/13/2016 14:30:38: Command line: 
MPI Rank 1: D:\work\Program\Code\local-src\CNTK-public\CNTK-github\x64\debug\cntk.exe  configFile=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data  RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu  DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data  ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN  OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu  DeviceId=-1  timestamping=true  numCPUThreads=4  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 06/13/2016 14:30:38: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=4
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 06/13/2016 14:30:38: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=4
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=4
MPI Rank 1: configparameters: cntk.cntk:OutputDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=D:\tmp\Speech\DNN_ParallelBM@debug_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=D:\tmp\Speech\DNN_ParallelBM@debug_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 06/13/2016 14:30:38: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 06/13/2016 14:30:38: Commands: speechTrain
MPI Rank 1: 06/13/2016 14:30:38: Precision = "double"
MPI Rank 1: 06/13/2016 14:30:38: Using 4 CPU threads.
MPI Rank 1: 06/13/2016 14:30:38: CNTKModelPath: D:\tmp\Speech\DNN_ParallelBM@debug_cpu/models/cntkSpeech.dnn
MPI Rank 1: 06/13/2016 14:30:38: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 06/13/2016 14:30:38: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: ##############################################################################
MPI Rank 1: 06/13/2016 14:30:38: #                                                                            #
MPI Rank 1: 06/13/2016 14:30:38: # Action "train"                                                             #
MPI Rank 1: 06/13/2016 14:30:38: #                                                                            #
MPI Rank 1: 06/13/2016 14:30:38: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:38: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file D:\work\Program\Code\local-src\CNTK-public\CNTK-github\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: Training criterion node(s):
MPI Rank 1: 06/13/2016 14:30:40: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0000019CB9BE85D0: {[labels Value[132 x *]] }
MPI Rank 1: 0000019CB9BE86A0: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0000019CB9BE8770: {[B1 Value[512 x 1]] }
MPI Rank 1: 0000019CB9BE8840: {[B0 Value[512 x 1]] }
MPI Rank 1: 0000019CB9BE8910: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0000019CB9BE89E0: {[B2 Value[132 x 1]] }
MPI Rank 1: 0000019CB9BE8AB0: {[W2 Value[132 x 512]] }
MPI Rank 1: 0000019CB9BE8B80: {[Prior Value[132]] }
MPI Rank 1: 0000019CB9BE8C50: {[features Value[363 x *]] }
MPI Rank 1: 0000019CB9BE8DF0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0000019CB9BE8EC0: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0000019CB9BE9060: {[W0 Value[512 x 363]] }
MPI Rank 1: 0000019CB9BE9470: {[W1 Value[512 x 512]] }
MPI Rank 1: 0000019CBD258610: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0000019CBD2586E0: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0000019CBD2587B0: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0000019CBD258AF0: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0000019CBD258C90: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0000019CBD258D60: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0000019CBD258E30: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0000019CBD259310: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0000019CBD259720: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0000019CBD2597F0: {[LogOfPrior Value[132]] }
MPI Rank 1: 0000019CBD259B30: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0000019CBD259C00: {[W0*features Value[512 x *]] }
MPI Rank 1: 0000019CBD259CD0: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0000019CBD259DA0: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0000019CBD259E70: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:30:40: 	MeanOfFeatures = Mean()
MPI Rank 1: 06/13/2016 14:30:40: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 06/13/2016 14:30:40: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:31:48: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:31:48: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:31:48: Starting minibatch loop.
MPI Rank 1: 06/13/2016 14:31:49:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.60890820 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.6640s; samplesPerSecond = 289.2
MPI Rank 1: 06/13/2016 14:31:49:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.52716679 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.6585s; samplesPerSecond = 291.6
MPI Rank 1: 06/13/2016 14:31:50:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.33660175 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.6839s; samplesPerSecond = 280.7
MPI Rank 1: 06/13/2016 14:31:51:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.32573214 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.6707s; samplesPerSecond = 286.3
MPI Rank 1: 06/13/2016 14:31:51:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.35436418 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6944s; samplesPerSecond = 276.5
MPI Rank 1: 06/13/2016 14:31:52:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.08519364 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.6942s; samplesPerSecond = 276.6
MPI Rank 1: 06/13/2016 14:31:53:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.00677380 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.6762s; samplesPerSecond = 283.9
MPI Rank 1: 06/13/2016 14:31:53:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07175221 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.6639s; samplesPerSecond = 289.2
MPI Rank 1: 06/13/2016 14:31:54:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92954318 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6910s; samplesPerSecond = 277.8
MPI Rank 1: 06/13/2016 14:31:55:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.86117205 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6654s; samplesPerSecond = 288.6
MPI Rank 1: 06/13/2016 14:31:55:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93465921 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6986s; samplesPerSecond = 274.8
MPI Rank 1: 06/13/2016 14:31:56:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 4.12618509 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.6798s; samplesPerSecond = 282.4
MPI Rank 1: 06/13/2016 14:31:57:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.70583042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.7015s; samplesPerSecond = 273.7
MPI Rank 1: 06/13/2016 14:31:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.88217192 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.6569s; samplesPerSecond = 292.3
MPI Rank 1: 06/13/2016 14:31:58:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.87616084 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.6313s; samplesPerSecond = 304.1
MPI Rank 1: 06/13/2016 14:31:59:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.85875612 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.7111s; samplesPerSecond = 270.0
MPI Rank 1: 06/13/2016 14:31:59:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.78648456 * 192; EvalErrorPrediction = 0.95833333 * 192; time = 0.6729s; samplesPerSecond = 285.3
MPI Rank 1: 06/13/2016 14:32:00:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.62874694 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.6584s; samplesPerSecond = 291.6
MPI Rank 1: 06/13/2016 14:32:01:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.66446492 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.6813s; samplesPerSecond = 281.8
MPI Rank 1: 06/13/2016 14:32:01:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.79215195 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.6750s; samplesPerSecond = 284.4
MPI Rank 1: 06/13/2016 14:32:02:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.43885126 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.6755s; samplesPerSecond = 284.2
MPI Rank 1: 06/13/2016 14:32:03:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.50156326 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6989s; samplesPerSecond = 274.7
MPI Rank 1: 06/13/2016 14:32:03:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.52543190 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.6983s; samplesPerSecond = 274.9
MPI Rank 1: 06/13/2016 14:32:04:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.58322877 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6787s; samplesPerSecond = 282.9
MPI Rank 1: 06/13/2016 14:32:05:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.61849156 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.6716s; samplesPerSecond = 285.9
MPI Rank 1: 06/13/2016 14:32:06:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.45622012 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.6927s; samplesPerSecond = 277.2
MPI Rank 1: 06/13/2016 14:32:06:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.43723757 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.6789s; samplesPerSecond = 282.8
MPI Rank 1: 06/13/2016 14:32:07:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.36631241 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.7265s; samplesPerSecond = 264.3
MPI Rank 1: 06/13/2016 14:32:08:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.39051228 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.7068s; samplesPerSecond = 271.6
MPI Rank 1: 06/13/2016 14:32:08:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.20390400 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.7291s; samplesPerSecond = 263.3
MPI Rank 1: 06/13/2016 14:32:09:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.49475100 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.6899s; samplesPerSecond = 278.3
MPI Rank 1: 06/13/2016 14:32:10:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.47041320 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.7003s; samplesPerSecond = 274.2
MPI Rank 1: 06/13/2016 14:32:10:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.57940439 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.6939s; samplesPerSecond = 276.7
MPI Rank 1: 06/13/2016 14:32:11:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.52233938 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.6784s; samplesPerSecond = 283.0
MPI Rank 1: 06/13/2016 14:32:12:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.43772986 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.7066s; samplesPerSecond = 271.7
MPI Rank 1: 06/13/2016 14:32:13:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 2.93817600 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.6899s; samplesPerSecond = 278.3
MPI Rank 1: 06/13/2016 14:32:13:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.24865153 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.6988s; samplesPerSecond = 274.7
MPI Rank 1: 06/13/2016 14:32:14:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 3.33241490 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.6951s; samplesPerSecond = 276.2
MPI Rank 1: 06/13/2016 14:32:15:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.26380454 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6907s; samplesPerSecond = 278.0
MPI Rank 1: 06/13/2016 14:32:15:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.37946974 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.6753s; samplesPerSecond = 284.3
MPI Rank 1: 06/13/2016 14:32:16:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.32789345 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.7113s; samplesPerSecond = 269.9
MPI Rank 1: 06/13/2016 14:32:17:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.07664184 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.6917s; samplesPerSecond = 277.6
MPI Rank 1: 06/13/2016 14:32:17:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17477588 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.7048s; samplesPerSecond = 272.4
MPI Rank 1: 06/13/2016 14:32:18:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.01233572 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.6920s; samplesPerSecond = 277.5
MPI Rank 1: 06/13/2016 14:32:19:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.20672882 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.6938s; samplesPerSecond = 276.7
MPI Rank 1: 06/13/2016 14:32:19:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.11087078 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.6996s; samplesPerSecond = 274.4
MPI Rank 1: 06/13/2016 14:32:20:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.97524024 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6986s; samplesPerSecond = 274.8
MPI Rank 1: 06/13/2016 14:32:21:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.16993860 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6904s; samplesPerSecond = 278.1
MPI Rank 1: 06/13/2016 14:32:22:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.06069782 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.7034s; samplesPerSecond = 272.9
MPI Rank 1: 06/13/2016 14:32:22:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.02104665 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.6864s; samplesPerSecond = 279.7
MPI Rank 1: 06/13/2016 14:32:23:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.89479193 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7036s; samplesPerSecond = 272.9
MPI Rank 1: 06/13/2016 14:32:24:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 3.05581089 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.6827s; samplesPerSecond = 281.2
MPI Rank 1: 06/13/2016 14:32:24:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.81580270 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6943s; samplesPerSecond = 276.5
MPI Rank 1: 06/13/2016 14:32:25:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 2.96542964 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.6946s; samplesPerSecond = 276.4
MPI Rank 1: 06/13/2016 14:32:26:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.80446480 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6896s; samplesPerSecond = 278.4
MPI Rank 1: 06/13/2016 14:32:26:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.98588565 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.7014s; samplesPerSecond = 273.7
MPI Rank 1: 06/13/2016 14:32:27:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.83126023 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7118s; samplesPerSecond = 269.7
MPI Rank 1: 06/13/2016 14:32:28:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.65390849 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6927s; samplesPerSecond = 277.2
MPI Rank 1: 06/13/2016 14:32:29:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78675476 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6806s; samplesPerSecond = 282.1
MPI Rank 1: 06/13/2016 14:32:29:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.75042547 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.7079s; samplesPerSecond = 271.2
MPI Rank 1: 06/13/2016 14:32:30:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.65031287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6979s; samplesPerSecond = 275.1
MPI Rank 1: 06/13/2016 14:32:31:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.85962626 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.6911s; samplesPerSecond = 277.8
MPI Rank 1: 06/13/2016 14:32:31:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.61674669 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6941s; samplesPerSecond = 276.6
MPI Rank 1: 06/13/2016 14:32:32:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.59389525 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.6958s; samplesPerSecond = 275.9
MPI Rank 1: 06/13/2016 14:32:33:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.72402489 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.6949s; samplesPerSecond = 276.3
MPI Rank 1: 06/13/2016 14:32:33:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.66031776 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.6844s; samplesPerSecond = 280.5
MPI Rank 1: 06/13/2016 14:32:34:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.70495981 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6906s; samplesPerSecond = 278.0
MPI Rank 1: 06/13/2016 14:32:35:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58198915 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.7006s; samplesPerSecond = 274.1
MPI Rank 1: 06/13/2016 14:32:35:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.52865200 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6901s; samplesPerSecond = 278.2
MPI Rank 1: 06/13/2016 14:32:36:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.39380567 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.6988s; samplesPerSecond = 274.8
MPI Rank 1: 06/13/2016 14:32:37:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.68679304 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.7172s; samplesPerSecond = 267.7
MPI Rank 1: 06/13/2016 14:32:38:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.70882982 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.6939s; samplesPerSecond = 276.7
MPI Rank 1: 06/13/2016 14:32:38:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.51425379 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6965s; samplesPerSecond = 275.7
MPI Rank 1: 06/13/2016 14:32:39:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.50672974 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.6992s; samplesPerSecond = 274.6
MPI Rank 1: 06/13/2016 14:32:40:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69121211 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.6852s; samplesPerSecond = 280.2
MPI Rank 1: 06/13/2016 14:32:40:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.38196469 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.7080s; samplesPerSecond = 271.2
MPI Rank 1: 06/13/2016 14:32:41:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.44279881 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.7115s; samplesPerSecond = 269.8
MPI Rank 1: 06/13/2016 14:32:42:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.44240296 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.6979s; samplesPerSecond = 275.1
MPI Rank 1: 06/13/2016 14:32:42:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.53190921 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6918s; samplesPerSecond = 277.5
MPI Rank 1: 06/13/2016 14:32:43:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48839884 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6883s; samplesPerSecond = 279.0
MPI Rank 1: 06/13/2016 14:32:44:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.43919959 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6979s; samplesPerSecond = 275.1
MPI Rank 1: 06/13/2016 14:32:45:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.40142421 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.6810s; samplesPerSecond = 281.9
MPI Rank 1: 06/13/2016 14:32:45:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.59285302 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.6865s; samplesPerSecond = 279.7
MPI Rank 1: 06/13/2016 14:32:46:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.20980454 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.6954s; samplesPerSecond = 276.1
MPI Rank 1: 06/13/2016 14:32:47:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.51329030 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.7097s; samplesPerSecond = 270.5
MPI Rank 1: 06/13/2016 14:32:47:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.50508827 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.6955s; samplesPerSecond = 276.0
MPI Rank 1: 06/13/2016 14:32:48:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.20752202 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6915s; samplesPerSecond = 277.7
MPI Rank 1: 06/13/2016 14:32:49:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.15390534 * 192; EvalErrorPrediction = 0.53125000 * 192; time = 0.7079s; samplesPerSecond = 271.2
MPI Rank 1: 06/13/2016 14:32:49:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.26279557 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6932s; samplesPerSecond = 277.0
MPI Rank 1: 06/13/2016 14:32:50:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.13640681 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.6919s; samplesPerSecond = 277.5
MPI Rank 1: 06/13/2016 14:32:51:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.45376287 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.7038s; samplesPerSecond = 272.8
MPI Rank 1: 06/13/2016 14:32:52:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.12574189 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6735s; samplesPerSecond = 285.1
MPI Rank 1: 06/13/2016 14:32:52:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.35150240 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.7093s; samplesPerSecond = 270.7
MPI Rank 1: 06/13/2016 14:32:53:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33967886 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.7136s; samplesPerSecond = 269.0
MPI Rank 1: 06/13/2016 14:32:54:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.27059354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.7003s; samplesPerSecond = 274.2
MPI Rank 1: 06/13/2016 14:32:54:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20103423 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.6984s; samplesPerSecond = 274.9
MPI Rank 1: 06/13/2016 14:32:55:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.17361421 * 192; EvalErrorPrediction = 0.54687500 * 192; time = 0.6913s; samplesPerSecond = 277.7
MPI Rank 1: 06/13/2016 14:32:56:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.36955517 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.6710s; samplesPerSecond = 286.1
MPI Rank 1: 06/13/2016 14:32:56:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.03617679 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.7142s; samplesPerSecond = 268.8
MPI Rank 1: 06/13/2016 14:32:57:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.12189751 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.7196s; samplesPerSecond = 266.8
MPI Rank 1: 06/13/2016 14:32:58:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.24415119 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.6905s; samplesPerSecond = 278.0
MPI Rank 1: 06/13/2016 14:32:59:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.23313700 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.7053s; samplesPerSecond = 272.2
MPI Rank 1: 06/13/2016 14:32:59:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.22962689 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.6890s; samplesPerSecond = 278.7
MPI Rank 1: 06/13/2016 14:33:00:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.12441878 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.6990s; samplesPerSecond = 274.7
MPI Rank 1: 06/13/2016 14:33:01:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.30683710 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.7075s; samplesPerSecond = 271.4
MPI Rank 1: 06/13/2016 14:33:01:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.36587381 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.6585s; samplesPerSecond = 291.6
MPI Rank 1: 06/13/2016 14:33:02: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00704835 * 20480; EvalErrorPrediction = 0.72827148 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=73.8917s
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:02: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:02: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 06/13/2016 14:33:03:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.26705665 * 292; EvalErrorPrediction = 0.59931507 * 292; time = 0.7940s; samplesPerSecond = 367.8
MPI Rank 1: 06/13/2016 14:33:03:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16062070 * 248; EvalErrorPrediction = 0.59677419 * 248; time = 0.7241s; samplesPerSecond = 342.5
MPI Rank 1: 06/13/2016 14:33:04:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.21442832 * 276; EvalErrorPrediction = 0.62318841 * 276; time = 0.7640s; samplesPerSecond = 361.3
MPI Rank 1: 06/13/2016 14:33:05:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.27003511 * 250; EvalErrorPrediction = 0.62400000 * 250; time = 0.7327s; samplesPerSecond = 341.2
MPI Rank 1: 06/13/2016 14:33:06:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.02033971 * 248; EvalErrorPrediction = 0.58064516 * 248; time = 0.7363s; samplesPerSecond = 336.8
MPI Rank 1: 06/13/2016 14:33:06:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.08558089 * 294; EvalErrorPrediction = 0.53741497 * 294; time = 0.7212s; samplesPerSecond = 407.6
MPI Rank 1: 06/13/2016 14:33:07:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.89287219 * 258; EvalErrorPrediction = 0.50387597 * 258; time = 0.6414s; samplesPerSecond = 402.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     5.60 seconds since last report (0.00 seconds on comm.); 4243 samples processed by 2 workers (2057 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 0.76k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:08:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.13670883 * 279; EvalErrorPrediction = 0.55197133 * 279; time = 0.7264s; samplesPerSecond = 384.1
MPI Rank 1: 06/13/2016 14:33:08:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.06298177 * 267; EvalErrorPrediction = 0.56179775 * 267; time = 0.7332s; samplesPerSecond = 364.2
MPI Rank 1: 06/13/2016 14:33:09:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.91899162 * 278; EvalErrorPrediction = 0.57194245 * 278; time = 0.7503s; samplesPerSecond = 370.5
MPI Rank 1: 06/13/2016 14:33:10:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.01714647 * 253; EvalErrorPrediction = 0.56521739 * 253; time = 0.7421s; samplesPerSecond = 340.9
MPI Rank 1: 06/13/2016 14:33:11:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.90802206 * 286; EvalErrorPrediction = 0.53146853 * 286; time = 0.7735s; samplesPerSecond = 369.8
MPI Rank 1: 06/13/2016 14:33:12:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.00958441 * 290; EvalErrorPrediction = 0.53448276 * 290; time = 0.7527s; samplesPerSecond = 385.3
MPI Rank 1: 06/13/2016 14:33:12:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.89946824 * 297; EvalErrorPrediction = 0.52188552 * 297; time = 0.6897s; samplesPerSecond = 430.6
MPI Rank 1: 06/13/2016 14:33:13:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.07859997 * 288; EvalErrorPrediction = 0.59722222 * 288; time = 0.6581s; samplesPerSecond = 437.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     5.59 seconds since last report (0.00 seconds on comm.); 4292 samples processed by 2 workers (2139 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 0.77k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:14:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.92547245 * 281; EvalErrorPrediction = 0.54804270 * 281; time = 0.7315s; samplesPerSecond = 384.2
MPI Rank 1: 06/13/2016 14:33:14:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.87578339 * 292; EvalErrorPrediction = 0.51027397 * 292; time = 0.7977s; samplesPerSecond = 366.0
MPI Rank 1: 06/13/2016 14:33:15:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.00431413 * 292; EvalErrorPrediction = 0.58904110 * 292; time = 0.7601s; samplesPerSecond = 384.2
MPI Rank 1: 06/13/2016 14:33:16:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.06669948 * 268; EvalErrorPrediction = 0.57462687 * 268; time = 0.7351s; samplesPerSecond = 364.6
MPI Rank 1: 06/13/2016 14:33:17:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.83273866 * 270; EvalErrorPrediction = 0.52962963 * 270; time = 0.7348s; samplesPerSecond = 367.4
MPI Rank 1: 06/13/2016 14:33:17:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.10245218 * 287; EvalErrorPrediction = 0.58885017 * 287; time = 0.7300s; samplesPerSecond = 393.1
MPI Rank 1: 06/13/2016 14:33:18:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.92677968 * 272; EvalErrorPrediction = 0.54411765 * 272; time = 0.6710s; samplesPerSecond = 405.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     5.59 seconds since last report (0.00 seconds on comm.); 4263 samples processed by 2 workers (2137 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 0.76k samplesPerSecond , throughputPerWorker = 0.38k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:19:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.01944955 * 267; EvalErrorPrediction = 0.53558052 * 267; time = 0.6494s; samplesPerSecond = 411.2
MPI Rank 1: 06/13/2016 14:33:19:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.95768280 * 280; EvalErrorPrediction = 0.52142857 * 280; time = 0.7648s; samplesPerSecond = 366.1
MPI Rank 1: 06/13/2016 14:33:20:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.76490542 * 278; EvalErrorPrediction = 0.47841727 * 278; time = 0.7420s; samplesPerSecond = 374.7
MPI Rank 1: 06/13/2016 14:33:21:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.02714736 * 288; EvalErrorPrediction = 0.54861111 * 288; time = 0.7671s; samplesPerSecond = 375.4
MPI Rank 1: 06/13/2016 14:33:21:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.95560429 * 174; EvalErrorPrediction = 0.60919540 * 174; time = 0.4938s; samplesPerSecond = 352.4
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.96-seconds latency this time; accumulated time on sync point = 0.96 seconds , average latency = 0.24 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:    11.20 seconds since last report (7.45 seconds on comm.); 7682 samples processed by 2 workers (1020 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 0.69k samplesPerSecond , throughputPerWorker = 0.34k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:30: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.97981265 * 20480; EvalErrorPrediction = 0.54433594 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=27.98s
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:30: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:30: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 06/13/2016 14:33:32:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80172711 * 1137; EvalErrorPrediction = 0.51539138 * 1137; time = 1.4710s; samplesPerSecond = 772.9
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.91 seconds since last report (0.00 seconds on comm.); 4848 samples processed by 2 workers (2247 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.66k samplesPerSecond , throughputPerWorker = 0.83k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:33:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88142829 * 1110; EvalErrorPrediction = 0.51081081 * 1110; time = 1.4019s; samplesPerSecond = 791.8
MPI Rank 1: 06/13/2016 14:33:35:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.99822800 * 1105; EvalErrorPrediction = 0.55384615 * 1105; time = 1.3704s; samplesPerSecond = 806.3
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.72 seconds since last report (0.00 seconds on comm.); 4857 samples processed by 2 workers (2254 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.79k samplesPerSecond , throughputPerWorker = 0.89k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:36:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.96866850 * 1149; EvalErrorPrediction = 0.54221062 * 1149; time = 1.3447s; samplesPerSecond = 854.5
MPI Rank 1: 06/13/2016 14:33:37:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90304187 * 1158; EvalErrorPrediction = 0.54835924 * 1158; time = 1.4016s; samplesPerSecond = 826.2
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.81 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2322 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.75k samplesPerSecond , throughputPerWorker = 0.87k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:39:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.89741552 * 1164; EvalErrorPrediction = 0.52405498 * 1164; time = 1.4060s; samplesPerSecond = 827.9
MPI Rank 1: 06/13/2016 14:33:40:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88236835 * 765; EvalErrorPrediction = 0.51372549 * 765; time = 0.8737s; samplesPerSecond = 875.6
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 1.54-seconds latency this time; accumulated time on sync point = 1.54 seconds , average latency = 0.39 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     4.59 seconds since last report (2.16 seconds on comm.); 5870 samples processed by 2 workers (765 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.28k samplesPerSecond , throughputPerWorker = 0.64k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:43: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89870701 * 20480; EvalErrorPrediction = 0.52910156 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=13.0325s
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:44: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:44: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 06/13/2016 14:33:45:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86806960 * 1137; EvalErrorPrediction = 0.51539138 * 1137; time = 1.4331s; samplesPerSecond = 793.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.89 seconds since last report (0.00 seconds on comm.); 4851 samples processed by 2 workers (2290 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.68k samplesPerSecond , throughputPerWorker = 0.84k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:46:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.82989649 * 1153; EvalErrorPrediction = 0.50737207 * 1153; time = 1.4088s; samplesPerSecond = 818.4
MPI Rank 1: 06/13/2016 14:33:48:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.84355215 * 1172; EvalErrorPrediction = 0.51962457 * 1172; time = 1.3873s; samplesPerSecond = 844.8
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.81 seconds since last report (0.00 seconds on comm.); 4948 samples processed by 2 workers (2401 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.76k samplesPerSecond , throughputPerWorker = 0.88k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:49:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.84133110 * 1229; EvalErrorPrediction = 0.52563059 * 1229; time = 1.4234s; samplesPerSecond = 863.4
MPI Rank 1: 06/13/2016 14:33:51:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80434352 * 1196; EvalErrorPrediction = 0.50418060 * 1196; time = 1.4617s; samplesPerSecond = 818.2
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.95 seconds since last report (0.00 seconds on comm.); 4911 samples processed by 2 workers (2422 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.66k samplesPerSecond , throughputPerWorker = 0.83k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:52:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87873922 * 1226; EvalErrorPrediction = 0.50326264 * 1226; time = 1.4901s; samplesPerSecond = 822.8
MPI Rank 1: 06/13/2016 14:33:53:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.80274836 * 722; EvalErrorPrediction = 0.50277008 * 722; time = 0.8409s; samplesPerSecond = 858.6
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 1.46-seconds latency this time; accumulated time on sync point = 1.46 seconds , average latency = 0.36 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     4.45 seconds since last report (2.14 seconds on comm.); 5770 samples processed by 2 workers (722 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.30k samplesPerSecond , throughputPerWorker = 0.65k samplesPerSecond
MPI Rank 1: 06/13/2016 14:33:57: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84071362 * 20480; EvalErrorPrediction = 0.50903320 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=13.1042s
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:57: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:33:57: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 06/13/2016 14:33:58:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.72316561 * 1200; EvalErrorPrediction = 0.49750000 * 1200; time = 1.4183s; samplesPerSecond = 846.1
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.89 seconds since last report (0.00 seconds on comm.); 4879 samples processed by 2 workers (2404 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.69k samplesPerSecond , throughputPerWorker = 0.85k samplesPerSecond
MPI Rank 1: 06/13/2016 14:34:00:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88126267 * 1204; EvalErrorPrediction = 0.51910299 * 1204; time = 1.4245s; samplesPerSecond = 845.2
MPI Rank 1: 06/13/2016 14:34:01:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.75386665 * 1233; EvalErrorPrediction = 0.47931873 * 1233; time = 1.4554s; samplesPerSecond = 847.2
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.54 seconds since last report (0.00 seconds on comm.); 4542 samples processed by 2 workers (2059 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.79k samplesPerSecond , throughputPerWorker = 0.89k samplesPerSecond
MPI Rank 1: 06/13/2016 14:34:03:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.76449298 * 1232; EvalErrorPrediction = 0.50405844 * 1232; time = 1.6249s; samplesPerSecond = 758.2
MPI Rank 1: 06/13/2016 14:34:04:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.76321731 * 1226; EvalErrorPrediction = 0.50489396 * 1226; time = 1.4468s; samplesPerSecond = 847.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     3.03 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2444 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.62k samplesPerSecond , throughputPerWorker = 0.81k samplesPerSecond
MPI Rank 1: 06/13/2016 14:34:06:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81365828 * 1214; EvalErrorPrediction = 0.50823723 * 1214; time = 1.5427s; samplesPerSecond = 786.9
MPI Rank 1: 06/13/2016 14:34:07:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86467029 * 752; EvalErrorPrediction = 0.51728723 * 752; time = 0.8801s; samplesPerSecond = 854.4
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 1.04-seconds latency this time; accumulated time on sync point = 1.04 seconds , average latency = 0.26 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     4.55 seconds since last report (2.12 seconds on comm.); 6154 samples processed by 2 workers (1154 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.35k samplesPerSecond , throughputPerWorker = 0.68k samplesPerSecond
MPI Rank 1: 06/13/2016 14:34:10: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.80187852 * 20480; EvalErrorPrediction = 0.49741211 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=13.0112s
MPI Rank 1: 06/13/2016 14:34:10: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:34:10: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 06/13/2016 14:34:10: __COMPLETED__
MPI Rank 1: ~MPIWrapper