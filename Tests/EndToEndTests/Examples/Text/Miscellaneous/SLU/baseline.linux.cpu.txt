=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/debug/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU/rnnlu.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU RunDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU OutputDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu DeviceId=-1 timestamping=true NdlDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU ExpDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu OutDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
-------------------------------------------------------------------
Build info: 

		Built time: May  5 2016 21:53:50
		Last modified date: Thu May  5 19:06:09 2016
		Build type: debug
		Build target: GPU
		With 1bit-SGD: no
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 163a49b07f300a0a2c74b074373431af0fc6959a
		Built by philly on cded08e6b560
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
05/05/2016 22:18:48: -------------------------------------------------------------------
05/05/2016 22:18:48: Build info: 

05/05/2016 22:18:48: 		Built time: May  5 2016 21:53:50
05/05/2016 22:18:48: 		Last modified date: Thu May  5 19:06:09 2016
05/05/2016 22:18:48: 		Build type: debug
05/05/2016 22:18:48: 		Build target: GPU
05/05/2016 22:18:48: 		With 1bit-SGD: no
05/05/2016 22:18:48: 		Math lib: acml
05/05/2016 22:18:48: 		CUDA_PATH: /usr/local/cuda-7.5
05/05/2016 22:18:48: 		CUB_PATH: /usr/local/cub-1.4.1
05/05/2016 22:18:48: 		CUDNN_PATH: /usr/local/cudnn-4.0
05/05/2016 22:18:48: 		Build Branch: HEAD
05/05/2016 22:18:48: 		Build SHA1: 163a49b07f300a0a2c74b074373431af0fc6959a
05/05/2016 22:18:48: 		Built by philly on cded08e6b560
05/05/2016 22:18:48: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
05/05/2016 22:18:48: -------------------------------------------------------------------

05/05/2016 22:18:48: Running on localhost at 2016/05/05 22:18:48
05/05/2016 22:18:48: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/debug/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU/rnnlu.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU  RunDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU  OutputDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu  DeviceId=-1  timestamping=true  NdlDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU  ExpDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu  OutDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu



05/05/2016 22:18:48: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/05/2016 22:18:48: precision="float"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=$ExpDir$/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=$ExpDir$/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=$DataDir$/inputmap.txt
          file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=$ExpDir$/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=$DataDir$/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=$DataDir$/output.txt
            labelMappingFile=$ExpDir$/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=$ExpDir$/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=$DataDir$/output.txt
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=$ExpDir$/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
      wfile=$ExpDir$/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=$DataDir$/output.txt
        labelDim=127
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=$OutDir$/output.rec.txt
            token=$DataDir$/output.txt
        ]
        labels=[
            file=$OutDir$/output.lbl.txt
            token=$DataDir$/output.txt
        ]
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
RunDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU
OutputDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
DeviceId=-1
timestamping=true
NdlDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU
ExpDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
OutDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu

05/05/2016 22:18:48: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/05/2016 22:18:48: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/05/2016 22:18:48: precision="float"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
          file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
            labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
      file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
      file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        labelDim=127
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/output.rec.txt
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        ]
        labels=[
            file=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/output.lbl.txt
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        ]
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
RunDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU
OutputDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
DeviceId=-1
timestamping=true
NdlDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU
ExpDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
OutDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu

05/05/2016 22:18:48: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/05/2016 22:18:48: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU/../../../../../../Examples/Text/Miscellaneous/SLU
configparameters: rnnlu.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
configparameters: rnnlu.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU
configparameters: rnnlu.cntk:deviceId=-1
configparameters: rnnlu.cntk:ExpDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
configparameters: rnnlu.cntk:LSTM=[
    action=train
	makeMode=true
    modelPath=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
          file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
            labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
      file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]

configparameters: rnnlu.cntk:LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/inputmap.txt
      file=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        labelDim=127
        labelMappingFile=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/output.rec.txt
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        ]
        labels=[
            file=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/output.lbl.txt
            token=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/output.txt
        ]
    ]
]

configparameters: rnnlu.cntk:NdlDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Text/Miscellaneous/SLU
configparameters: rnnlu.cntk:OutDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
configparameters: rnnlu.cntk:OutputDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
configparameters: rnnlu.cntk:precision=float
configparameters: rnnlu.cntk:RunDir=/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu
configparameters: rnnlu.cntk:timestamping=true
configparameters: rnnlu.cntk:traceLevel=1
05/05/2016 22:18:48: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/05/2016 22:18:48: Commands: LSTM LSTMTest
05/05/2016 22:18:48: Precision = "float"
05/05/2016 22:18:48: CNTKModelPath: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn
05/05/2016 22:18:48: CNTKCommandTrainInfo: LSTM : 100
05/05/2016 22:18:48: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 100

05/05/2016 22:18:48: ##############################################################################
05/05/2016 22:18:48: #                                                                            #
05/05/2016 22:18:48: # Action "train"                                                             #
05/05/2016 22:18:48: #                                                                            #
05/05/2016 22:18:48: ##############################################################################

05/05/2016 22:18:48: CNTKCommandTrainBegin: LSTM
SimpleNetworkBuilder Using CPU
BatchLUSequenceReader: Input file is /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.dev.IOB.simple

05/05/2016 22:18:48: Creating virgin network.

Post-processing network...

3 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300] -> [300]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300] -> [300]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300] -> [300]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300] -> [300]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300] -> [300]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300] -> [300]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300] -> [300]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300] -> [300]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300] -> [300]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300] -> [300]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300] -> [300]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300] -> [300]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300] -> [300]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300] -> [300]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300] -> [300]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300] -> [300]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300] -> [300]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300] -> [300]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/05/2016 22:18:48: Created model with 168 nodes on CPU.

05/05/2016 22:18:48: Training criterion node(s):
05/05/2016 22:18:48: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[PosteriorProb Gradient[127 x 1 x *]] [PosteriorProb Value[127 x 1 x *]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
0x1ac3128: {[WXO0 Value[300 x 150]] }
0x1ac3998: {[WXC0 Value[300 x 150]] }
0x1ac8c08: {[E0 Value[50 x 944]] }
0x1ad30b8: {[bc0 Value[300 x 1]] }
0x1ad51a8: {[WXI0 Value[300 x 150]] }
0x1ad5a68: {[WXF0 Value[300 x 150]] }
0x1b50f58: {[bo0 Value[300 x 1]] }
0x1b52568: {[features Value[2832 x *]] }
0x1bc1b28: {[bi0 Value[300 x 1]] }
0x1bce378: {[bf0 Value[300 x 1]] }
0x1bcebf8: {[WHI0 Value[300 x 300]] }
0x1bcf098: {[WCI0 Value[300 x 1]] }
0x1bcf9f8: {[WHF0 Value[300 x 300]] }
0x1bcfe98: {[WCF0 Value[300 x 1]] }
0x1bd07f8: {[WHO0 Value[300 x 300]] }
0x1bd0c98: {[WCO0 Value[300 x 1]] }
0x1bd15f8: {[WHC0 Value[300 x 300]] }
0x1bd1c98: {[AutoName0 Value[300 x 1 x *]] }
0x1bd22f8: {[AutoName1 Value[300 x 1 x *]] }
0x1bd2b58: {[AutoName2 Value[300 x 1 x *]] [WXC0 Gradient[300 x 150]] }
0x1bd32b8: {[AutoName3 Value[300 x 1 x *]] }
0x1bd38b8: {[AutoName4 Value[300 x 1 x *]] }
0x1bd4018: {[AutoName5 Value[300 x 1 x *]] }
0x1bd4628: {[AutoName6 Value[300 x 1 x *]] }
0x1bda668: {[WXO2 Value[300 x 300]] }
0x1bdadb8: {[WXI2 Value[300 x 300]] }
0x1bdb258: {[WXF2 Value[300 x 300]] }
0x1bdb6f8: {[WXC2 Value[300 x 300]] }
0x1bdbb58: {[bo2 Value[300 x 1]] }
0x1bdc4a8: {[bc2 Value[300 x 1]] }
0x1bdcdf8: {[bi2 Value[300 x 1]] }
0x1bdd748: {[bf2 Value[300 x 1]] }
0x1bde0a8: {[WHI2 Value[300 x 300]] }
0x1bde548: {[WCI2 Value[300 x 1]] }
0x1bdeea8: {[WHF2 Value[300 x 300]] }
0x1bdf348: {[WCF2 Value[300 x 1]] }
0x1bdfca8: {[WHO2 Value[300 x 300]] }
0x1be0148: {[WCO2 Value[300 x 1]] }
0x1be0aa8: {[WHC2 Value[300 x 300]] }
0x1be1148: {[AutoName38 Value[300 x 1 x *]] [WHI0 Gradient[300 x 300]] }
0x1be18a8: {[AutoName27 Gradient[300 x 1 x *]] [AutoName39 Value[300 x 1 x *]] }
0x1be1f08: {[AutoName40 Value[300 x 1 x *]] [WXC2 Gradient[300 x 300]] }
0x1be2668: {[AutoName30 Gradient[300 x 1 x *]] [AutoName41 Value[300 x 1 x *]] }
0x1be2c78: {[AutoName20 Gradient[300 x 1 x *]] [AutoName42 Value[300 x 1 x *]] }
0x1be33d8: {[AutoName15 Gradient[300 x 1 x *]] [AutoName43 Value[300 x 1 x *]] }
0x1be3a28: {[AutoName44 Value[300 x 1 x *]] [WCI0 Gradient[300 x 1]] }
0x1be9d78: {[WXO3 Value[300 x 300]] }
0x1bea4c8: {[WXI3 Value[300 x 300]] }
0x1bea968: {[WXF3 Value[300 x 300]] }
0x1beae08: {[WXC3 Value[300 x 300]] }
0x1beb268: {[bo3 Value[300 x 1]] }
0x1bebbb8: {[bc3 Value[300 x 1]] }
0x1bec508: {[bi3 Value[300 x 1]] }
0x1bece58: {[bf3 Value[300 x 1]] }
0x1bed7b8: {[WHI3 Value[300 x 300]] }
0x1bedc58: {[WCI3 Value[300 x 1]] }
0x1bee5b8: {[WHF3 Value[300 x 300]] }
0x1beea58: {[WCF3 Value[300 x 1]] }
0x1bef3b8: {[WHO3 Value[300 x 300]] }
0x1bef858: {[WCO3 Value[300 x 1]] }
0x1bf01b8: {[WHC3 Value[300 x 300]] }
0x1bf0858: {[AutoName76 Value[300 x 1 x *]] [WHI2 Gradient[300 x 300]] }
0x1bf0fb8: {[AutoName65 Gradient[300 x 1 x *]] [AutoName77 Value[300 x 1 x *]] [AutoName8 Gradient[300 x 1 x *]] }
0x1bf1608: {[AutoName78 Value[300 x 1 x *]] [WXC3 Gradient[300 x 300]] }
0x1bf1d68: {[AutoName68 Gradient[300 x 1 x *]] [AutoName79 Value[300 x 1 x *]] }
0x1bf2378: {[AutoName12 Gradient[300 x 1 x *]] [AutoName58 Gradient[300 x 1 x *]] [AutoName80 Value[300 x 1 x *]] }
0x1bf2ad8: {[AutoName53 Gradient[300 x 1 x *]] [AutoName81 Value[300 x 1 x *]] }
0x1bf3138: {[AutoName82 Value[300 x 1 x *]] [WCI2 Gradient[300 x 1]] }
0x1bf9488: {[W4 Value[127 x 300]] }
0x1bf9bb8: {[labels Value[127 x *]] }
0x1c02ed8: {[outputs Value[127 x 1 x *]] }
0x1c07228: {[CrossEntropyWithSoftmax Value[1]] }
0x1c165a8: {[LookupTable Value[150 x *]] }
0x1c16df8: {[AutoName23 Value[300 x 1 x *]] [WXF0 Gradient[300 x 150]] }
0x1c17168: {[AutoName31 Value[300 x *]] [E0 Gradient[50 x 944]] }
0x1c17f08: {[AutoName22 Value[300 x *]] [AutoName31 Gradient[300 x *]] }
0x1c18498: {[AutoName22 Gradient[300 x *]] [AutoName9 Value[300 x *]] [bo0 Gradient[300 x 1]] }
0x1c185f8: {[AutoName10 Value[300 x 1 x *]] [WXI0 Gradient[300 x 150]] }
0x1c187b8: {[AutoName16 Value[300 x *]] [AutoName9 Gradient[300 x *]] [bf0 Gradient[300 x 1]] }
0x1c18978: {[AutoName30 Value[300 x 1 x *]] }
0x1c19688: {[AutoName32 Value[300 x 1 x *]] [WXO0 Gradient[300 x 150]] }
0x1c1a0d8: {[AutoName33 Value[300 x 1 x *]] }
0x1c1a298: {[AutoName21 Value[300 x 1 x *]] }
0x1c1a458: {[AutoName24 Value[300 x 1 x *]] }
0x1c1a618: {[AutoName20 Value[300 x 1 x *]] }
0x1c1a7d8: {[AutoName25 Value[300 x 1 x *]] }
0x1c1a998: {[AutoName26 Value[300 x 1 x *]] }
0x1c1ab58: {[AutoName27 Value[300 x 1 x *]] }
0x1c1bd08: {[AutoName8 Value[300 x 1 x *]] }
0x1c1be68: {[AutoName11 Value[300 x 1 x *]] }
0x1c1bfc8: {[AutoName7 Value[300 x 1 x *]] }
0x1c1c188: {[AutoName12 Value[300 x 1 x *]] }
0x1c1c348: {[AutoName13 Value[300 x 1 x *]] }
0x1c1c508: {[AutoName14 Value[300 x 1 x *]] }
0x1c1c6c8: {[AutoName15 Value[300 x 1 x *]] }
0x1c1c888: {[AutoName17 Value[300 x 1 x *]] }
0x1c1ca48: {[AutoName18 Value[300 x 1 x *]] }
0x1c1cc08: {[AutoName19 Value[300 x 1 x *]] }
0x1c1cdc8: {[AutoName28 Value[300 x 1 x *]] }
0x1c1cf88: {[AutoName29 Value[300 x 1 x *]] }
0x1c1d148: {[AutoName34 Value[300 x 1 x *]] }
0x1c1d308: {[AutoName35 Value[300 x 1 x *]] }
0x1c1d4c8: {[AutoName36 Value[300 x 1 x *]] }
0x1c1d688: {[AutoName37 Value[300 x 1 x *]] }
0x1c1d848: {[AutoName35 Gradient[300 x 1 x *]] [AutoName69 Value[300 x 1 x *]] }
0x1c1da08: {[AutoName70 Value[300 x 1 x *]] [WXO2 Gradient[300 x 300]] }
0x1c1dbc8: {[AutoName36 Gradient[300 x 1 x *]] [AutoName60 Value[300 x 1 x *]] [AutoName69 Gradient[300 x 1 x *]] }
0x1c1dd88: {[AutoName61 Value[300 x 1 x *]] [WXF2 Gradient[300 x 300]] }
0x1c1df48: {[AutoName47 Value[300 x 1 x *]] [AutoName60 Gradient[300 x 1 x *]] [bo2 Gradient[300 x 1]] }
0x1c1e108: {[AutoName48 Value[300 x 1 x *]] [WXI2 Gradient[300 x 300]] }
0x1c1e2c8: {[AutoName47 Gradient[300 x 1 x *]] [AutoName54 Value[300 x 1 x *]] [bf2 Gradient[300 x 1]] }
0x1c1e488: {[AutoName29 Gradient[300 x 1 x *]] [AutoName68 Value[300 x 1 x *]] }
0x1c1e648: {[AutoName71 Value[300 x 1 x *]] }
0x1c1e808: {[AutoName13 Gradient[300 x 1 x *]] [AutoName59 Value[300 x 1 x *]] }
0x1c1e9c8: {[AutoName17 Gradient[300 x 1 x *]] [AutoName62 Value[300 x 1 x *]] }
0x1c1eb88: {[AutoName3 Gradient[300 x 1 x *]] [AutoName58 Value[300 x 1 x *]] }
0x1c1ed48: {[AutoName11 Gradient[300 x 1 x *]] [AutoName63 Value[300 x 1 x *]] }
0x1c1ef08: {[AutoName64 Value[300 x 1 x *]] }
0x1c1f0c8: {[AutoName10 Gradient[300 x 1 x *]] [AutoName65 Value[300 x 1 x *]] }
0x1c1f288: {[AutoName26 Gradient[300 x 1 x *]] [AutoName46 Value[300 x 1 x *]] }
0x1c1f448: {[AutoName25 Gradient[300 x 1 x *]] [AutoName49 Value[300 x 1 x *]] }
0x1c1f608: {[AutoName45 Value[300 x 1 x *]] [AutoName5 Gradient[300 x 1 x *]] }
0x1c1f7c8: {[AutoName21 Gradient[300 x 1 x *]] [AutoName50 Value[300 x 1 x *]] }
0x1c1f988: {[AutoName1 Gradient[300 x 1 x *]] [AutoName51 Value[300 x 1 x *]] }
0x1c1fb48: {[AutoName2 Gradient[300 x 1 x *]] [AutoName52 Value[300 x 1 x *]] [LookupTable Gradient[150 x *]] }
0x1c1fd08: {[AutoName53 Value[300 x 1 x *]] }
0x1c1fec8: {[AutoName55 Value[300 x 1 x *]] }
0x1c20088: {[AutoName56 Value[300 x 1 x *]] }
0x1c20248: {[AutoName57 Value[300 x 1 x *]] }
0x1c20408: {[AutoName66 Value[300 x 1 x *]] }
0x1c205c8: {[AutoName67 Value[300 x 1 x *]] }
0x1c20788: {[AutoName72 Value[300 x 1 x *]] }
0x1c20948: {[AutoName73 Value[300 x 1 x *]] }
0x1c20b08: {[AutoName74 Value[300 x 1 x *]] }
0x1c20cc8: {[AutoName75 Value[300 x 1 x *]] }
0x1c20e88: {[AutoName107 Value[300 x 1 x *]] [AutoName73 Gradient[300 x 1 x *]] }
0x1c21048: {[AutoName108 Value[300 x 1 x *]] [WXO3 Gradient[300 x 300]] }
0x1c21208: {[AutoName107 Gradient[300 x 1 x *]] [AutoName74 Gradient[300 x 1 x *]] [AutoName98 Value[300 x 1 x *]] }
0x1c213c8: {[AutoName99 Value[300 x 1 x *]] [WXF3 Gradient[300 x 300]] }
0x1c21588: {[AutoName85 Value[300 x 1 x *]] [AutoName98 Gradient[300 x 1 x *]] [bo3 Gradient[300 x 1]] }
0x1c21748: {[AutoName86 Value[300 x 1 x *]] [WXI3 Gradient[300 x 300]] }
0x1c21908: {[AutoName85 Gradient[300 x 1 x *]] [AutoName92 Value[300 x 1 x *]] [bf3 Gradient[300 x 1]] }
0x1c21ac8: {[AutoName106 Value[300 x 1 x *]] [AutoName67 Gradient[300 x 1 x *]] }
0x1c21c88: {[AutoName109 Value[300 x 1 x *]] }
0x1c21e48: {[AutoName32 Gradient[300 x 1 x *]] [AutoName51 Gradient[300 x 1 x *]] [AutoName97 Value[300 x 1 x *]] }
0x1c22008: {[AutoName100 Value[300 x 1 x *]] [AutoName55 Gradient[300 x 1 x *]] }
0x1c221c8: {[AutoName41 Gradient[300 x 1 x *]] [AutoName96 Value[300 x 1 x *]] [WHO0 Gradient[300 x 300]] }
0x1c22388: {[AutoName101 Value[300 x 1 x *]] [AutoName24 Gradient[300 x 1 x *]] [AutoName49 Gradient[300 x 1 x *]] }
0x1c22548: {[AutoName102 Value[300 x 1 x *]] [WCF0 Gradient[300 x 1]] }
0x1c22708: {[AutoName103 Value[300 x 1 x *]] [AutoName33 Gradient[300 x 1 x *]] [AutoName48 Gradient[300 x 1 x *]] }
0x1c228c8: {[AutoName64 Gradient[300 x 1 x *]] [AutoName84 Value[300 x 1 x *]] }
0x1c22a88: {[AutoName63 Gradient[300 x 1 x *]] [AutoName7 Gradient[300 x 1 x *]] [AutoName87 Value[300 x 1 x *]] }
0x1c22c48: {[AutoName14 Gradient[300 x 1 x *]] [AutoName43 Gradient[300 x 1 x *]] [AutoName83 Value[300 x 1 x *]] }
0x1c22e08: {[AutoName18 Gradient[300 x 1 x *]] [AutoName59 Gradient[300 x 1 x *]] [AutoName88 Value[300 x 1 x *]] }
0x1c22fc8: {[AutoName19 Gradient[300 x 1 x *]] [AutoName39 Gradient[300 x 1 x *]] [AutoName89 Value[300 x 1 x *]] }
0x1c23188: {[AutoName37 Gradient[300 x 1 x *]] [AutoName40 Gradient[300 x 1 x *]] [AutoName90 Value[300 x 1 x *]] }
0x1c23348: {[AutoName91 Value[300 x 1 x *]] }
0x1c23508: {[AutoName93 Value[300 x 1 x *]] }
0x1c236c8: {[AutoName94 Value[300 x 1 x *]] }
0x1c23888: {[AutoName95 Value[300 x 1 x *]] }
0x1c23a48: {[AutoName104 Value[300 x 1 x *]] }
0x1c23c08: {[AutoName105 Value[300 x 1 x *]] }
0x1c23dc8: {[AutoName110 Value[300 x 1 x *]] }
0x1c23f88: {[AutoName111 Value[300 x 1 x *]] }
0x1c24148: {[AutoName112 Value[300 x 1 x *]] }
0x1c24308: {[AutoName113 Value[300 x 1 x *]] }
0x1c244c8: {[AutoName111 Gradient[300 x 1 x *]] [AutoName114 Value[127 x 1 x *]] }
0x1c24a08: {[CrossEntropyWithSoftmax Gradient[1]] }
0x1c24bc8: {[AutoName112 Gradient[300 x 1 x *]] [AutoName114 Gradient[127 x 1 x *]] }
0x1c24d88: {[W4 Gradient[127 x 300]] }
0x1c24f48: {[AutoName113 Gradient[300 x 1 x *]] }
0x1c25108: {[AutoName104 Gradient[300 x 1 x *]] }
0x1c252c8: {[AutoName110 Gradient[300 x 1 x *]] }
0x1c25488: {[AutoName109 Gradient[300 x 1 x *]] [WCO2 Gradient[300 x 1]] }
0x1c25648: {[AutoName105 Gradient[300 x 1 x *]] }
0x1c25b88: {[WCO3 Gradient[300 x 1]] }
0x1c25d48: {[AutoName103 Gradient[300 x 1 x *]] [AutoName46 Gradient[300 x 1 x *]] [AutoName6 Gradient[300 x 1 x *]] }
0x1c25f08: {[AutoName95 Gradient[300 x 1 x *]] }
0x1c260c8: {[AutoName28 Gradient[300 x 1 x *]] [AutoName70 Gradient[300 x 1 x *]] [AutoName89 Gradient[300 x 1 x *]] }
0x1c26288: {[AutoName94 Gradient[300 x 1 x *]] }
0x1c26448: {[AutoName93 Gradient[300 x 1 x *]] }
0x1c26608: {[AutoName92 Gradient[300 x 1 x *]] [bi3 Gradient[300 x 1]] }
0x1c267c8: {[AutoName91 Gradient[300 x 1 x *]] }
0x1c26988: {[AutoName90 Gradient[300 x 1 x *]] }
0x1c26b48: {[bc3 Gradient[300 x 1]] }
0x1c26d08: {[WHC3 Gradient[300 x 300]] }
0x1c26ec8: {[AutoName79 Gradient[300 x 1 x *]] [WHO2 Gradient[300 x 300]] }
0x1c27088: {[AutoName88 Gradient[300 x 1 x *]] [WHF2 Gradient[300 x 300]] }
0x1c27248: {[AutoName16 Gradient[300 x *]] [AutoName62 Gradient[300 x 1 x *]] [AutoName87 Gradient[300 x 1 x *]] [bi0 Gradient[300 x 1]] }
0x1c27408: {[AutoName34 Gradient[300 x 1 x *]] [AutoName61 Gradient[300 x 1 x *]] [AutoName83 Gradient[300 x 1 x *]] }
0x1c275c8: {[WCF2 Gradient[300 x 1]] }
0x1c27788: {[bc0 Gradient[300 x 1]] }
0x1c27948: {[WCI3 Gradient[300 x 1]] }
0x1c27b08: {[AutoName80 Gradient[300 x 1 x *]] [WHC0 Gradient[300 x 300]] }
0x1c27cc8: {[AutoName71 Gradient[300 x 1 x *]] [AutoName86 Gradient[300 x 1 x *]] [WCO0 Gradient[300 x 1]] }
0x1c27e88: {[AutoName4 Gradient[300 x 1 x *]] [AutoName44 Gradient[300 x 1 x *]] [AutoName84 Gradient[300 x 1 x *]] }
0x1c28048: {[WHI3 Gradient[300 x 300]] }
0x1c28208: {[AutoName0 Gradient[300 x 1 x *]] [AutoName38 Gradient[300 x 1 x *]] [AutoName76 Gradient[300 x 1 x *]] }
0x1c283c8: {[AutoName102 Gradient[300 x 1 x *]] }
0x1c28588: {[AutoName42 Gradient[300 x 1 x *]] [AutoName82 Gradient[300 x 1 x *]] }
0x1c28748: {[AutoName101 Gradient[300 x 1 x *]] [AutoName23 Gradient[300 x 1 x *]] [AutoName45 Gradient[300 x 1 x *]] }
0x1c28908: {[AutoName100 Gradient[300 x 1 x *]] [AutoName54 Gradient[300 x 1 x *]] [bi2 Gradient[300 x 1]] }
0x1c28ac8: {[AutoName50 Gradient[300 x 1 x *]] [AutoName96 Gradient[300 x 1 x *]] [WHF0 Gradient[300 x 300]] }
0x1c28c88: {[WHC2 Gradient[300 x 300]] }
0x1c28e48: {[bc2 Gradient[300 x 1]] }
0x1c29008: {[WCF3 Gradient[300 x 1]] }
0x1c291c8: {[AutoName52 Gradient[300 x 1 x *]] [AutoName81 Gradient[300 x 1 x *]] }
0x1c29388: {[AutoName72 Gradient[300 x 1 x *]] [AutoName99 Gradient[300 x 1 x *]] }
0x1c29548: {[AutoName56 Gradient[300 x 1 x *]] [AutoName97 Gradient[300 x 1 x *]] }
0x1c29708: {[WHF3 Gradient[300 x 300]] }
0x1c298c8: {[AutoName57 Gradient[300 x 1 x *]] [AutoName77 Gradient[300 x 1 x *]] }
0x1c29a88: {[AutoName108 Gradient[300 x 1 x *]] [AutoName66 Gradient[300 x 1 x *]] }
0x1c29c48: {[AutoName106 Gradient[300 x 1 x *]] }
0x1c29e08: {[WHO3 Gradient[300 x 300]] }
0x1c29fc8: {[AutoName75 Gradient[300 x 1 x *]] [AutoName78 Gradient[300 x 1 x *]] }

05/05/2016 22:18:48: No PreCompute nodes found, skipping PreCompute step.

05/05/2016 22:18:48: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:48: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:50: Finished Epoch[ 1 of 100]: [Training] CrossEntropyWithSoftmax = 4.83434041 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=1.2622s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:50: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.79699782 * 81; perplexity = 121.14616888
05/05/2016 22:18:50: Finished Epoch[ 1 of 100]: [Validate] CrossEntropyWithSoftmax = 4.79699782 * 81
05/05/2016 22:18:50: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.1'

05/05/2016 22:18:50: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:50: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:51: Finished Epoch[ 2 of 100]: [Training] CrossEntropyWithSoftmax = 4.79699782 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=1.06418s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:52: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.72581237 * 81; perplexity = 112.82211450
05/05/2016 22:18:52: Finished Epoch[ 2 of 100]: [Validate] CrossEntropyWithSoftmax = 4.72581237 * 81
05/05/2016 22:18:52: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.2'

05/05/2016 22:18:52: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:52: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:53: Finished Epoch[ 3 of 100]: [Training] CrossEntropyWithSoftmax = 4.72581237 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=1.08555s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:53: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.62109978 * 81; perplexity = 101.60571445
05/05/2016 22:18:53: Finished Epoch[ 3 of 100]: [Validate] CrossEntropyWithSoftmax = 4.62109978 * 81
05/05/2016 22:18:53: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.3'

05/05/2016 22:18:54: Starting Epoch 4: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:54: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:55: Finished Epoch[ 4 of 100]: [Training] CrossEntropyWithSoftmax = 4.62109978 * 81; totalSamplesSeen = 324; learningRatePerSample = 0.1; epochTime=1.07132s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:55: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.47691665 * 81; perplexity = 87.96303370
05/05/2016 22:18:55: Finished Epoch[ 4 of 100]: [Validate] CrossEntropyWithSoftmax = 4.47691665 * 81
05/05/2016 22:18:55: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.4'

05/05/2016 22:18:55: Starting Epoch 5: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:55: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:56: Finished Epoch[ 5 of 100]: [Training] CrossEntropyWithSoftmax = 4.47691665 * 81; totalSamplesSeen = 405; learningRatePerSample = 0.1; epochTime=1.06247s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:56: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.27743945 * 81; perplexity = 72.05570116
05/05/2016 22:18:56: Finished Epoch[ 5 of 100]: [Validate] CrossEntropyWithSoftmax = 4.27743945 * 81
05/05/2016 22:18:57: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.5'

05/05/2016 22:18:57: Starting Epoch 6: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:57: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:58: Finished Epoch[ 6 of 100]: [Training] CrossEntropyWithSoftmax = 4.27743945 * 81; totalSamplesSeen = 486; learningRatePerSample = 0.1; epochTime=1.08272s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:58: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.99313468 * 81; perplexity = 54.22459974
05/05/2016 22:18:58: Finished Epoch[ 6 of 100]: [Validate] CrossEntropyWithSoftmax = 3.99313468 * 81
05/05/2016 22:18:58: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.6'

05/05/2016 22:18:58: Starting Epoch 7: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:18:58: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:18:59: Finished Epoch[ 7 of 100]: [Training] CrossEntropyWithSoftmax = 3.99313468 * 81; totalSamplesSeen = 567; learningRatePerSample = 0.1; epochTime=1.08329s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:00: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.57871124 * 81; perplexity = 35.82733820
05/05/2016 22:19:00: Finished Epoch[ 7 of 100]: [Validate] CrossEntropyWithSoftmax = 3.57871124 * 81
05/05/2016 22:19:00: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.7'

05/05/2016 22:19:00: Starting Epoch 8: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:00: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:01: Finished Epoch[ 8 of 100]: [Training] CrossEntropyWithSoftmax = 3.57871124 * 81; totalSamplesSeen = 648; learningRatePerSample = 0.1; epochTime=1.15654s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:02: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.99400009 * 81; perplexity = 19.96538638
05/05/2016 22:19:02: Finished Epoch[ 8 of 100]: [Validate] CrossEntropyWithSoftmax = 2.99400009 * 81
05/05/2016 22:19:02: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.8'

05/05/2016 22:19:02: Starting Epoch 9: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:02: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:03: Finished Epoch[ 9 of 100]: [Training] CrossEntropyWithSoftmax = 2.99400009 * 81; totalSamplesSeen = 729; learningRatePerSample = 0.1; epochTime=1.06036s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:03: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.41507015 * 81; perplexity = 11.19055529
05/05/2016 22:19:03: Finished Epoch[ 9 of 100]: [Validate] CrossEntropyWithSoftmax = 2.41507015 * 81
05/05/2016 22:19:03: SGD: Saving checkpoint model '/tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9'

05/05/2016 22:19:04: Starting Epoch 10: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:04: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:05: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.1; epochTime=1.04179s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:05: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.56689849 * 81; perplexity = 13.02536340
05/05/2016 22:19:05: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.56689849 * 81
05/05/2016 22:19:05: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:05: learnRatePerSample reduced to 0.050000001
05/05/2016 22:19:05: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:05: Starting Epoch 10: learning rate per sample = 0.050000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:05: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:06: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.050000001; epochTime=1.06138s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:07: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.53473239 * 81; perplexity = 12.61305508
05/05/2016 22:19:07: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.53473239 * 81
05/05/2016 22:19:07: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:07: learnRatePerSample reduced to 0.025
05/05/2016 22:19:07: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:07: Starting Epoch 10: learning rate per sample = 0.025000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:07: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:08: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.025; epochTime=1.03386s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:08: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51993382 * 81; perplexity = 12.42777415
05/05/2016 22:19:08: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51993382 * 81
05/05/2016 22:19:08: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:08: learnRatePerSample reduced to 0.0125
05/05/2016 22:19:08: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:08: Starting Epoch 10: learning rate per sample = 0.012500  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:08: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:10: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0125; epochTime=1.05538s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:10: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51286033 * 81; perplexity = 12.34017665
05/05/2016 22:19:10: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51286033 * 81
05/05/2016 22:19:10: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:10: learnRatePerSample reduced to 0.0062500001
05/05/2016 22:19:10: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:10: Starting Epoch 10: learning rate per sample = 0.006250  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:10: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:11: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0062500001; epochTime=1.16086s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:12: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50940582 * 81; perplexity = 12.29762088
05/05/2016 22:19:12: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50940582 * 81
05/05/2016 22:19:12: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:12: learnRatePerSample reduced to 0.003125
05/05/2016 22:19:12: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:12: Starting Epoch 10: learning rate per sample = 0.003125  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:12: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:13: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.003125; epochTime=1.09682s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:13: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50769872 * 81; perplexity = 12.27664551
05/05/2016 22:19:13: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50769872 * 81
05/05/2016 22:19:13: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:13: learnRatePerSample reduced to 0.0015625
05/05/2016 22:19:13: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:14: Starting Epoch 10: learning rate per sample = 0.001563  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:15: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0015625; epochTime=1.0446s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:15: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50685063 * 81; perplexity = 12.26623826
05/05/2016 22:19:15: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50685063 * 81
05/05/2016 22:19:15: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:15: learnRatePerSample reduced to 0.00078125001
05/05/2016 22:19:15: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:15: Starting Epoch 10: learning rate per sample = 0.000781  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:16: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00078125001; epochTime=1.13502s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50642791 * 81; perplexity = 12.26105411
05/05/2016 22:19:17: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50642791 * 81
05/05/2016 22:19:17: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:17: learnRatePerSample reduced to 0.00039062501
05/05/2016 22:19:17: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:17: Starting Epoch 10: learning rate per sample = 0.000391  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:17: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:18: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00039062501; epochTime=1.12697s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:18: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50621673 * 81; perplexity = 12.25846516
05/05/2016 22:19:18: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50621673 * 81
05/05/2016 22:19:18: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:19: learnRatePerSample reduced to 0.0001953125
05/05/2016 22:19:19: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:19: Starting Epoch 10: learning rate per sample = 0.000195  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:19: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:20: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0001953125; epochTime=1.02461s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:20: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50611143 * 81; perplexity = 12.25717436
05/05/2016 22:19:20: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50611143 * 81
05/05/2016 22:19:20: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:20: learnRatePerSample reduced to 9.7656251e-05
05/05/2016 22:19:20: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:20: Starting Epoch 10: learning rate per sample = 0.000098  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:22: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.7656251e-05; epochTime=1.07439s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:22: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50605849 * 81; perplexity = 12.25652555
05/05/2016 22:19:22: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50605849 * 81
05/05/2016 22:19:22: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:22: learnRatePerSample reduced to 4.8828126e-05
05/05/2016 22:19:22: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:22: Starting Epoch 10: learning rate per sample = 0.000049  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:22: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:23: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.8828126e-05; epochTime=1.08441s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50603212 * 81; perplexity = 12.25620231
05/05/2016 22:19:23: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50603212 * 81
05/05/2016 22:19:23: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:24: learnRatePerSample reduced to 2.4414063e-05
05/05/2016 22:19:24: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:24: Starting Epoch 10: learning rate per sample = 0.000024  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:25: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.4414063e-05; epochTime=1.14214s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50601912 * 81; perplexity = 12.25604300
05/05/2016 22:19:25: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50601912 * 81
05/05/2016 22:19:25: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:25: learnRatePerSample reduced to 1.2207031e-05
05/05/2016 22:19:25: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:25: Starting Epoch 10: learning rate per sample = 0.000012  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:25: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:27: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.2207031e-05; epochTime=1.09579s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:27: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50601234 * 81; perplexity = 12.25595988
05/05/2016 22:19:27: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50601234 * 81
05/05/2016 22:19:27: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:27: learnRatePerSample reduced to 6.1035157e-06
05/05/2016 22:19:27: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:27: Starting Epoch 10: learning rate per sample = 0.000006  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:27: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:28: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 6.1035157e-06; epochTime=1.11262s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:28: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600933 * 81; perplexity = 12.25592294
05/05/2016 22:19:28: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600933 * 81
05/05/2016 22:19:28: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:29: learnRatePerSample reduced to 3.0517579e-06
05/05/2016 22:19:29: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:29: Starting Epoch 10: learning rate per sample = 0.000003  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:29: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:30: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.0517579e-06; epochTime=1.08828s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:30: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600744 * 81; perplexity = 12.25589985
05/05/2016 22:19:30: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600744 * 81
05/05/2016 22:19:30: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:30: learnRatePerSample reduced to 1.5258789e-06
05/05/2016 22:19:30: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:31: Starting Epoch 10: learning rate per sample = 0.000002  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:32: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.5258789e-06; epochTime=1.10466s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:32: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600669 * 81; perplexity = 12.25589062
05/05/2016 22:19:32: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600669 * 81
05/05/2016 22:19:32: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:32: learnRatePerSample reduced to 7.6293946e-07
05/05/2016 22:19:32: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:32: Starting Epoch 10: learning rate per sample = 0.000001  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:32: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:33: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 7.6293946e-07; epochTime=1.0799s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:34: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600631 * 81; perplexity = 12.25588600
05/05/2016 22:19:34: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600631 * 81
05/05/2016 22:19:34: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:34: learnRatePerSample reduced to 3.8146973e-07
05/05/2016 22:19:34: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:34: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:34: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:35: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.8146973e-07; epochTime=1.05774s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:35: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600612 * 81; perplexity = 12.25588369
05/05/2016 22:19:35: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600612 * 81
05/05/2016 22:19:35: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:36: learnRatePerSample reduced to 1.9073487e-07
05/05/2016 22:19:36: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:36: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:36: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:37: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.9073487e-07; epochTime=1.09885s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:37: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:37: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:37: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:37: learnRatePerSample reduced to 9.5367433e-08
05/05/2016 22:19:37: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:37: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:37: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:38: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.5367433e-08; epochTime=1.05136s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:39: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:39: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:39: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:39: learnRatePerSample reduced to 4.7683717e-08
05/05/2016 22:19:39: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:39: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:39: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:40: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.7683717e-08; epochTime=1.09884s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:40: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:40: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:40: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:41: learnRatePerSample reduced to 2.3841858e-08
05/05/2016 22:19:41: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:41: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:41: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:42: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.3841858e-08; epochTime=1.08074s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:42: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:42: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:42: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:42: learnRatePerSample reduced to 1.1920929e-08
05/05/2016 22:19:42: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:42: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:42: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:44: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.1920929e-08; epochTime=1.07848s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:44: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:44: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:44: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:44: learnRatePerSample reduced to 5.9604646e-09
05/05/2016 22:19:44: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:44: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:44: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:45: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 5.9604646e-09; epochTime=1.08416s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:45: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:45: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:45: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:46: learnRatePerSample reduced to 2.9802323e-09
05/05/2016 22:19:46: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:46: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:46: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:47: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.9802323e-09; epochTime=1.05004s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:47: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:47: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:47: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:47: learnRatePerSample reduced to 1.4901161e-09
05/05/2016 22:19:47: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 22:19:47: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 22:19:47: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:49: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.41507015 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.4901161e-09; epochTime=1.12499s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 22:19:49: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.50600593 * 81; perplexity = 12.25588138
05/05/2016 22:19:49: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.50600593 * 81
05/05/2016 22:19:49: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160505220136.870944/Examples/Text/Miscellaneous_SLU@debug_cpu/cntkdebug.dnn.9.
05/05/2016 22:19:49: learnRatePerSample reduced to 7.4505807e-10
05/05/2016 22:19:49: SGD: revoke back to and update checkpoint file for epoch 9
05/05/2016 22:19:49: Learn Rate Per Sample for Epoch[10] = 7.4505807e-10 is less than minLearnRate 9.9999997e-10. Training complete.
05/05/2016 22:19:49: CNTKCommandTrainEnd: LSTM

05/05/2016 22:19:49: Action "train" complete.


05/05/2016 22:19:49: ##############################################################################
05/05/2016 22:19:49: #                                                                            #
05/05/2016 22:19:49: # Action "write"                                                             #
05/05/2016 22:19:49: #                                                                            #
05/05/2016 22:19:49: ##############################################################################

BatchLUSequenceReader: Input file is /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Text/SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

4 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	labels = InputValue()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[AutoName0 Gradient[300 x 1 x *1]] [AutoName1 Gradient[300 x 1 x *1]] [AutoName10 Gradient[300 x 1 x *1]] [AutoName100 Gradient[300 x 1 x *1]] [AutoName101 Gradient[300 x 1 x *1]] [AutoName102 Gradient[300 x 1 x *1]] [AutoName103 Gradient[300 x 1 x *1]] [AutoName104 Gradient[300 x 1 x *1]] [AutoName105 Gradient[300 x 1 x *1]] [AutoName106 Gradient[300 x 1 x *1]] [AutoName107 Gradient[300 x 1 x *1]] [AutoName108 Gradient[300 x 1 x *1]] [AutoName109 Gradient[300 x 1 x *1]] [AutoName11 Gradient[300 x 1 x *1]] [AutoName110 Gradient[300 x 1 x *1]] [AutoName111 Gradient[300 x 1 x *1]] [AutoName112 Gradient[300 x 1 x *1]] [AutoName113 Gradient[300 x 1 x *1]] [AutoName114 Gradient[127 x 1 x *1]] [AutoName114 Value[127 x 1 x *1]] [AutoName12 Gradient[300 x 1 x *1]] [AutoName13 Gradient[300 x 1 x *1]] [AutoName14 Gradient[300 x 1 x *1]] [AutoName15 Gradient[300 x 1 x *1]] [AutoName16 Gradient[300 x *1]] [AutoName17 Gradient[300 x 1 x *1]] [AutoName18 Gradient[300 x 1 x *1]] [AutoName19 Gradient[300 x 1 x *1]] [AutoName2 Gradient[300 x 1 x *1]] [AutoName20 Gradient[300 x 1 x *1]] [AutoName21 Gradient[300 x 1 x *1]] [AutoName22 Gradient[300 x *1]] [AutoName23 Gradient[300 x 1 x *1]] [AutoName24 Gradient[300 x 1 x *1]] [AutoName25 Gradient[300 x 1 x *1]] [AutoName26 Gradient[300 x 1 x *1]] [AutoName27 Gradient[300 x 1 x *1]] [AutoName28 Gradient[300 x 1 x *1]] [AutoName29 Gradient[300 x 1 x *1]] [AutoName3 Gradient[300 x 1 x *1]] [AutoName30 Gradient[300 x 1 x *1]] [AutoName31 Gradient[300 x *1]] [AutoName32 Gradient[300 x 1 x *1]] [AutoName33 Gradient[300 x 1 x *1]] [AutoName34 Gradient[300 x 1 x *1]] [AutoName35 Gradient[300 x 1 x *1]] [AutoName36 Gradient[300 x 1 x *1]] [AutoName37 Gradient[300 x 1 x *1]] [AutoName38 Gradient[300 x 1 x *1]] [AutoName39 Gradient[300 x 1 x *1]] [AutoName4 Gradient[300 x 1 x *1]] [AutoName40 Gradient[300 x 1 x *1]] [AutoName41 Gradient[300 x 1 x *1]] [AutoName42 Gradient[300 x 1 x *1]] [AutoName43 Gradient[300 x 1 x *1]] [AutoName44 Gradient[300 x 1 x *1]] [AutoName45 Gradient[300 x 1 x *1]] [AutoName46 Gradient[300 x 1 x *1]] [AutoName47 Gradient[300 x 1 x *1]] [AutoName48 Gradient[300 x 1 x *1]] [AutoName49 Gradient[300 x 1 x *1]] [AutoName5 Gradient[300 x 1 x *1]] [AutoName50 Gradient[300 x 1 x *1]] [AutoName51 Gradient[300 x 1 x *1]] [AutoName52 Gradient[300 x 1 x *1]] [AutoName53 Gradient[300 x 1 x *1]] [AutoName54 Gradient[300 x 1 x *1]] [AutoName55 Gradient[300 x 1 x *1]] [AutoName56 Gradient[300 x 1 x *1]] [AutoName57 Gradient[300 x 1 x *1]] [AutoName58 Gradient[300 x 1 x *1]] [AutoName59 Gradient[300 x 1 x *1]] [AutoName6 Gradient[300 x 1 x *1]] [AutoName60 Gradient[300 x 1 x *1]] [AutoName61 Gradient[300 x 1 x *1]] [AutoName62 Gradient[300 x 1 x *1]] [AutoName63 Gradient[300 x 1 x *1]] [AutoName64 Gradient[300 x 1 x *1]] [AutoName65 Gradient[300 x 1 x *1]] [AutoName66 Gradient[300 x 1 x *1]] [AutoName67 Gradient[300 x 1 x *1]] [AutoName68 Gradient[300 x 1 x *1]] [AutoName69 Gradient[300 x 1 x *1]] [AutoName7 Gradient[300 x 1 x *1]] [AutoName70 Gradient[300 x 1 x *1]] [AutoName71 Gradient[300 x 1 x *1]] [AutoName72 Gradient[300 x 1 x *1]] [AutoName73 Gradient[300 x 1 x *1]] [AutoName74 Gradient[300 x 1 x *1]] [AutoName75 Gradient[300 x 1 x *1]] [AutoName76 Gradient[300 x 1 x *1]] [AutoName77 Gradient[300 x 1 x *1]] [AutoName78 Gradient[300 x 1 x *1]] [AutoName79 Gradient[300 x 1 x *1]] [AutoName8 Gradient[300 x 1 x *1]] [AutoName80 Gradient[300 x 1 x *1]] [AutoName81 Gradient[300 x 1 x *1]] [AutoName82 Gradient[300 x 1 x *1]] [AutoName83 Gradient[300 x 1 x *1]] [AutoName84 Gradient[300 x 1 x *1]] [AutoName85 Gradient[300 x 1 x *1]] [AutoName86 Gradient[300 x 1 x *1]] [AutoName87 Gradient[300 x 1 x *1]] [AutoName88 Gradient[300 x 1 x *1]] [AutoName89 Gradient[300 x 1 x *1]] [AutoName9 Gradient[300 x *1]] [AutoName90 Gradient[300 x 1 x *1]] [AutoName91 Gradient[300 x 1 x *1]] [AutoName92 Gradient[300 x 1 x *1]] [AutoName93 Gradient[300 x 1 x *1]] [AutoName94 Gradient[300 x 1 x *1]] [AutoName95 Gradient[300 x 1 x *1]] [AutoName96 Gradient[300 x 1 x *1]] [AutoName97 Gradient[300 x 1 x *1]] [AutoName98 Gradient[300 x 1 x *1]] [AutoName99 Gradient[300 x 1 x *1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [E0 Gradient[50 x 944]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[127 x 1 x *1]] [PosteriorProb Value[127 x 1 x *1]] [W4 Gradient[127 x 300]] [WCF0 Gradient[300 x 1]] [WCF2 Gradient[300 x 1]] [WCF3 Gradient[300 x 1]] [WCI0 Gradient[300 x 1]] [WCI2 Gradient[300 x 1]] [WCI3 Gradient[300 x 1]] [WCO0 Gradient[300 x 1]] [WCO2 Gradient[300 x 1]] [WCO3 Gradient[300 x 1]] [WHC0 Gradient[300 x 300]] [WHC2 Gradient[300 x 300]] [WHC3 Gradient[300 x 300]] [WHF0 Gradient[300 x 300]] [WHF2 Gradient[300 x 300]] [WHF3 Gradient[300 x 300]] [WHI0 Gradient[300 x 300]] [WHI2 Gradient[300 x 300]] [WHI3 Gradient[300 x 300]] [WHO0 Gradient[300 x 300]] [WHO2 Gradient[300 x 300]] [WHO3 Gradient[300 x 300]] [WXC0 Gradient[300 x 150]] [WXC2 Gradient[300 x 300]] [WXC3 Gradient[300 x 300]] [WXF0 Gradient[300 x 150]] [WXF2 Gradient[300 x 300]] [WXF3 Gradient[300 x 300]] [WXI0 Gradient[300 x 150]] [WXI2 Gradient[300 x 300]] [WXI3 Gradient[300 x 300]] [WXO0 Gradient[300 x 150]] [WXO2 Gradient[300 x 300]] [WXO3 Gradient[300 x 300]] [bc0 Gradient[300 x 1]] [bc2 Gradient[300 x 1]] [bc3 Gradient[300 x 1]] [bf0 Gradient[300 x 1]] [bf2 Gradient[300 x 1]] [bf3 Gradient[300 x 1]] [bi0 Gradient[300 x 1]] [bi2 Gradient[300 x 1]] [bi3 Gradient[300 x 1]] [bo0 Gradient[300 x 1]] [bo2 Gradient[300 x 1]] [bo3 Gradient[300 x 1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
0x1bd1958: {[AutoName0 Value[300 x 1 x *1]] }
0x1bd2238: {[AutoName1 Value[300 x 1 x *1]] }
0x1bd2e18: {[AutoName81 Value[300 x 1 x *1]] }
0x1bd34e8: {[AutoName82 Value[300 x 1 x *1]] }
0x1bd6f78: {[bf0 Value[300 x 1]] }
0x1bd72f8: {[bc0 Value[300 x 1]] }
0x1bd7758: {[bc2 Value[300 x 1]] }
0x1bd8168: {[bc3 Value[300 x 1]] }
0x1bd8888: {[bf2 Value[300 x 1]] }
0x1bd9608: {[bi2 Value[300 x 1]] }
0x1bd9de8: {[bf3 Value[300 x 1]] }
0x1bda768: {[bi0 Value[300 x 1]] }
0x1bda908: {[bi3 Value[300 x 1]] }
0x1bdb208: {[bo0 Value[300 x 1]] }
0x1bdc548: {[E0 Value[50 x 944]] }
0x1bdcd68: {[bo2 Value[300 x 1]] }
0x1bdcf28: {[bo3 Value[300 x 1]] }
0x1bdec68: {[features Value[2832 x *1]] }
0x1be1d58: {[labels Value[127 x *1]] }
0x1be2ae8: {[W4 Value[127 x 300]] }
0x1be32b8: {[WCF0 Value[300 x 1]] }
0x1be3478: {[WCI0 Value[300 x 1]] }
0x1be3788: {[WCF2 Value[300 x 1]] }
0x1be4118: {[WCF3 Value[300 x 1]] }
0x1be4838: {[WCI3 Value[300 x 1]] }
0x1be5418: {[WCI2 Value[300 x 1]] }
0x1be5b38: {[WCO2 Value[300 x 1]] }
0x1be6718: {[WCO0 Value[300 x 1]] }
0x1be6e38: {[WHC0 Value[300 x 300]] }
0x1be7a18: {[WCO3 Value[300 x 1]] }
0x1be8d18: {[WHC2 Value[300 x 300]] }
0x1be91e8: {[WHC3 Value[300 x 300]] }
0x1be96b8: {[WHF0 Value[300 x 300]] }
0x1be9b88: {[WHF2 Value[300 x 300]] }
0x1bea058: {[WHF3 Value[300 x 300]] }
0x1bea528: {[WHI0 Value[300 x 300]] }
0x1bea9f8: {[WHI2 Value[300 x 300]] }
0x1beaec8: {[WHI3 Value[300 x 300]] }
0x1beb398: {[WHO0 Value[300 x 300]] }
0x1beb868: {[WHO2 Value[300 x 300]] }
0x1bebd38: {[WHO3 Value[300 x 300]] }
0x1bec208: {[WXC0 Value[300 x 150]] }
0x1bec6d8: {[WXC2 Value[300 x 300]] }
0x1becba8: {[WXC3 Value[300 x 300]] }
0x1bed078: {[WXF0 Value[300 x 150]] }
0x1bed548: {[WXF2 Value[300 x 300]] }
0x1beda18: {[WXF3 Value[300 x 300]] }
0x1bedee8: {[WXI0 Value[300 x 150]] }
0x1bee3b8: {[WXI2 Value[300 x 300]] }
0x1bee888: {[WXI3 Value[300 x 300]] }
0x1beed58: {[WXO0 Value[300 x 150]] }
0x1bef228: {[WXO2 Value[300 x 300]] }
0x1bef6f8: {[WXO3 Value[300 x 300]] }
0x1c7fa18: {[AutoName2 Value[300 x 1 x *1]] }
0x1c820b8: {[AutoName3 Value[300 x 1 x *1]] }
0x1c84088: {[AutoName38 Value[300 x 1 x *1]] }
0x1c84758: {[AutoName39 Value[300 x 1 x *1]] }
0x1c84e28: {[AutoName4 Value[300 x 1 x *1]] }
0x1c854f8: {[AutoName40 Value[300 x 1 x *1]] }
0x1c85bc8: {[AutoName41 Value[300 x 1 x *1]] }
0x1c86298: {[AutoName42 Value[300 x 1 x *1]] }
0x1c86968: {[AutoName43 Value[300 x 1 x *1]] }
0x1c87038: {[AutoName44 Value[300 x 1 x *1]] }
0x1c886d8: {[AutoName5 Value[300 x 1 x *1]] }
0x1c8ad28: {[AutoName6 Value[300 x 1 x *1]] }
0x1c8e9b8: {[AutoName76 Value[300 x 1 x *1]] }
0x1c8f088: {[AutoName77 Value[300 x 1 x *1]] }
0x1c8f758: {[AutoName78 Value[300 x 1 x *1]] }
0x1c8fe28: {[AutoName79 Value[300 x 1 x *1]] }
0x1c904e8: {[AutoName80 Value[300 x 1 x *1]] }
0x1ce8e48: {[outputs Value[127 x 1 x *1]] }
0x1cfd018: {[LookupTable Value[150 x *1]] }
0x1cfd868: {[AutoName23 Value[300 x 1 x *1]] }
0x1cfdbd8: {[AutoName31 Value[300 x *1]] }
0x1cfe978: {[AutoName22 Value[300 x *1]] }
0x1cfef08: {[AutoName9 Value[300 x *1]] }
0x1cff068: {[AutoName10 Value[300 x 1 x *1]] }
0x1cff228: {[AutoName16 Value[300 x *1]] }
0x1cff3e8: {[AutoName30 Value[300 x 1 x *1]] }
0x1d000f8: {[AutoName32 Value[300 x 1 x *1]] }
0x1d00aa8: {[AutoName33 Value[300 x 1 x *1]] }
0x1d00c68: {[AutoName21 Value[300 x 1 x *1]] }
0x1d00e28: {[AutoName24 Value[300 x 1 x *1]] }
0x1d00fe8: {[AutoName20 Value[300 x 1 x *1]] }
0x1d011a8: {[AutoName25 Value[300 x 1 x *1]] }
0x1d01368: {[AutoName26 Value[300 x 1 x *1]] }
0x1d01528: {[AutoName27 Value[300 x 1 x *1]] }
0x1d026d8: {[AutoName8 Value[300 x 1 x *1]] }
0x1d02838: {[AutoName11 Value[300 x 1 x *1]] }
0x1d02998: {[AutoName7 Value[300 x 1 x *1]] }
0x1d02b58: {[AutoName12 Value[300 x 1 x *1]] }
0x1d02d18: {[AutoName13 Value[300 x 1 x *1]] }
0x1d02ed8: {[AutoName14 Value[300 x 1 x *1]] }
0x1d03098: {[AutoName15 Value[300 x 1 x *1]] }
0x1d03258: {[AutoName17 Value[300 x 1 x *1]] }
0x1d03418: {[AutoName18 Value[300 x 1 x *1]] }
0x1d035d8: {[AutoName19 Value[300 x 1 x *1]] }
0x1d03798: {[AutoName28 Value[300 x 1 x *1]] }
0x1d03958: {[AutoName29 Value[300 x 1 x *1]] }
0x1d03b18: {[AutoName34 Value[300 x 1 x *1]] }
0x1d03cd8: {[AutoName35 Value[300 x 1 x *1]] }
0x1d03e98: {[AutoName36 Value[300 x 1 x *1]] }
0x1d04058: {[AutoName37 Value[300 x 1 x *1]] }
0x1d04218: {[AutoName69 Value[300 x 1 x *1]] }
0x1d043d8: {[AutoName70 Value[300 x 1 x *1]] }
0x1d04598: {[AutoName60 Value[300 x 1 x *1]] }
0x1d04758: {[AutoName61 Value[300 x 1 x *1]] }
0x1d04918: {[AutoName47 Value[300 x 1 x *1]] }
0x1d04ad8: {[AutoName48 Value[300 x 1 x *1]] }
0x1d04c98: {[AutoName54 Value[300 x 1 x *1]] }
0x1d04e58: {[AutoName68 Value[300 x 1 x *1]] }
0x1d05018: {[AutoName71 Value[300 x 1 x *1]] }
0x1d051d8: {[AutoName59 Value[300 x 1 x *1]] }
0x1d05398: {[AutoName62 Value[300 x 1 x *1]] }
0x1d05558: {[AutoName58 Value[300 x 1 x *1]] }
0x1d05718: {[AutoName63 Value[300 x 1 x *1]] }
0x1d058d8: {[AutoName64 Value[300 x 1 x *1]] }
0x1d05a98: {[AutoName65 Value[300 x 1 x *1]] }
0x1d05c58: {[AutoName46 Value[300 x 1 x *1]] }
0x1d05e18: {[AutoName49 Value[300 x 1 x *1]] }
0x1d05fd8: {[AutoName45 Value[300 x 1 x *1]] }
0x1d06198: {[AutoName50 Value[300 x 1 x *1]] }
0x1d06358: {[AutoName51 Value[300 x 1 x *1]] }
0x1d06518: {[AutoName52 Value[300 x 1 x *1]] }
0x1d066d8: {[AutoName53 Value[300 x 1 x *1]] }
0x1d06898: {[AutoName55 Value[300 x 1 x *1]] }
0x1d06a58: {[AutoName56 Value[300 x 1 x *1]] }
0x1d06c18: {[AutoName57 Value[300 x 1 x *1]] }
0x1d06dd8: {[AutoName66 Value[300 x 1 x *1]] }
0x1d06f98: {[AutoName67 Value[300 x 1 x *1]] }
0x1d07158: {[AutoName72 Value[300 x 1 x *1]] }
0x1d07318: {[AutoName73 Value[300 x 1 x *1]] }
0x1d074d8: {[AutoName74 Value[300 x 1 x *1]] }
0x1d07698: {[AutoName75 Value[300 x 1 x *1]] }
0x1d07858: {[AutoName107 Value[300 x 1 x *1]] }
0x1d07a18: {[AutoName108 Value[300 x 1 x *1]] }
0x1d07bd8: {[AutoName98 Value[300 x 1 x *1]] }
0x1d07d98: {[AutoName99 Value[300 x 1 x *1]] }
0x1d07f58: {[AutoName85 Value[300 x 1 x *1]] }
0x1d08118: {[AutoName86 Value[300 x 1 x *1]] }
0x1d082d8: {[AutoName92 Value[300 x 1 x *1]] }
0x1d08498: {[AutoName106 Value[300 x 1 x *1]] }
0x1d08658: {[AutoName109 Value[300 x 1 x *1]] }
0x1d08818: {[AutoName97 Value[300 x 1 x *1]] }
0x1d089d8: {[AutoName100 Value[300 x 1 x *1]] }
0x1d08b98: {[AutoName96 Value[300 x 1 x *1]] }
0x1d08d58: {[AutoName101 Value[300 x 1 x *1]] }
0x1d08f18: {[AutoName102 Value[300 x 1 x *1]] }
0x1d090d8: {[AutoName103 Value[300 x 1 x *1]] }
0x1d09298: {[AutoName84 Value[300 x 1 x *1]] }
0x1d09458: {[AutoName87 Value[300 x 1 x *1]] }
0x1d09618: {[AutoName83 Value[300 x 1 x *1]] }
0x1d097d8: {[AutoName88 Value[300 x 1 x *1]] }
0x1d09998: {[AutoName89 Value[300 x 1 x *1]] }
0x1d09b58: {[AutoName90 Value[300 x 1 x *1]] }
0x1d09d18: {[AutoName91 Value[300 x 1 x *1]] }
0x1d09ed8: {[AutoName93 Value[300 x 1 x *1]] }
0x1d0a098: {[AutoName94 Value[300 x 1 x *1]] }
0x1d0a258: {[AutoName95 Value[300 x 1 x *1]] }
0x1d0a418: {[AutoName104 Value[300 x 1 x *1]] }
0x1d0a5d8: {[AutoName105 Value[300 x 1 x *1]] }
0x1d0a798: {[AutoName110 Value[300 x 1 x *1]] }
0x1d0a958: {[AutoName111 Value[300 x 1 x *1]] }
0x1d0ab18: {[AutoName112 Value[300 x 1 x *1]] }
0x1d0acd8: {[AutoName113 Value[300 x 1 x *1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O O O O O B-stoploc.city_name I-stoploc.city_name O 
O O O O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_time.time_relative B-depart_time.time I-depart_time.time O 
O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O 
O O O O O O O O O O O O O O O 
O O O O O O O B-round_trip I-round_trip O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O B-airline_name I-airline_name O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

05/05/2016 22:19:50: Action "write" complete.

05/05/2016 22:19:50: __COMPLETED__