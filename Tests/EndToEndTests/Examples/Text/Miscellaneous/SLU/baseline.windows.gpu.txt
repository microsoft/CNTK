=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/debug/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu DeviceId=0 timestamping=true NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
-------------------------------------------------------------------
Build info: 

		Built time: May  5 2016 15:02:22
		Last modified date: Thu May  5 14:54:24 2016
		Build type: Debug
		Build target: GPU
		With 1bit-SGD: no
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 163a49b07f300a0a2c74b074373431af0fc6959a
		Built by svcphil on cntk-muc02
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
05/05/2016 15:51:02: -------------------------------------------------------------------
05/05/2016 15:51:02: Build info: 

05/05/2016 15:51:02: 		Built time: May  5 2016 15:02:22
05/05/2016 15:51:02: 		Last modified date: Thu May  5 14:54:24 2016
05/05/2016 15:51:02: 		Build type: Debug
05/05/2016 15:51:02: 		Build target: GPU
05/05/2016 15:51:02: 		With 1bit-SGD: no
05/05/2016 15:51:02: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
05/05/2016 15:51:02: 		CUB_PATH: c:\src\cub-1.4.1
05/05/2016 15:51:02: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
05/05/2016 15:51:02: 		Build Branch: HEAD
05/05/2016 15:51:02: 		Build SHA1: 163a49b07f300a0a2c74b074373431af0fc6959a
05/05/2016 15:51:02: 		Built by svcphil on cntk-muc02
05/05/2016 15:51:02: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
05/05/2016 15:51:02: -------------------------------------------------------------------

05/05/2016 15:51:02: Running on cntk-muc00 at 2016/05/05 15:51:02
05/05/2016 15:51:02: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\debug\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu  DeviceId=0  timestamping=true  NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU  ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu  OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu



05/05/2016 15:51:02: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/05/2016 15:51:02: precision="float"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=$ExpDir$/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=$ExpDir$/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=$DataDir$/inputmap.txt
          file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=$ExpDir$/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=$DataDir$/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=$DataDir$/output.txt
            labelMappingFile=$ExpDir$/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=$ExpDir$/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=$DataDir$/output.txt
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=$ExpDir$/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
      wfile=$ExpDir$/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=$DataDir$/output.txt
        labelDim=127
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=$OutDir$/output.rec.txt
            token=$DataDir$/output.txt
        ]
        labels=[
            file=$OutDir$/output.lbl.txt
            token=$DataDir$/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
DeviceId=0
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu

05/05/2016 15:51:02: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/05/2016 15:51:02: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/05/2016 15:51:02: precision="float"
deviceId = 0
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
DeviceId=0
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu

05/05/2016 15:51:02: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/05/2016 15:51:02: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:deviceId=0
configparameters: rnnlu.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
configparameters: rnnlu.cntk:LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]

configparameters: rnnlu.cntk:LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]

configparameters: rnnlu.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
configparameters: rnnlu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
configparameters: rnnlu.cntk:precision=float
configparameters: rnnlu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu
configparameters: rnnlu.cntk:timestamping=true
configparameters: rnnlu.cntk:traceLevel=1
05/05/2016 15:51:02: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/05/2016 15:51:02: Commands: LSTM LSTMTest
05/05/2016 15:51:02: Precision = "float"
05/05/2016 15:51:02: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn
05/05/2016 15:51:02: CNTKCommandTrainInfo: LSTM : 100
05/05/2016 15:51:02: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 100

05/05/2016 15:51:02: ##############################################################################
05/05/2016 15:51:02: #                                                                            #
05/05/2016 15:51:02: # Action "train"                                                             #
05/05/2016 15:51:02: #                                                                            #
05/05/2016 15:51:02: ##############################################################################

05/05/2016 15:51:02: CNTKCommandTrainBegin: LSTM
SimpleNetworkBuilder Using GPU 0
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

05/05/2016 15:51:02: Creating virgin network.
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

3 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300] -> [300]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300] -> [300]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300] -> [300]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300] -> [300]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300] -> [300]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300] -> [300]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300] -> [300]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300] -> [300]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300] -> [300]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300] -> [300]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300] -> [300]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300] -> [300]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300] -> [300]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300] -> [300]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300] -> [300]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300] -> [300]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300] -> [300]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300] -> [300]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/05/2016 15:51:03: Created model with 168 nodes on GPU 0.

05/05/2016 15:51:03: Training criterion node(s):
05/05/2016 15:51:03: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[127 x 1 x *]] [PosteriorProb Value[127 x 1 x *]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
0000003224BF4620: {[features Value[2832 x *]] }
000000323F6F5F50: {[E0 Value[50 x 944]] }
000000323F6F61C0: {[WXI0 Value[300 x 150]] }
000000323F6F6290: {[WXO0 Value[300 x 150]] }
000000323FD20B50: {[WHO2 Value[300 x 300]] }
000000323FD20C20: {[WXC2 Value[300 x 300]] }
000000323FD20CF0: {[WHC0 Value[300 x 300]] }
000000323FD20DC0: {[bf0 Value[300 x 1]] }
000000323FD20E90: {[AutoName2 Value[300 x 1 x *]] [WXC0 Gradient[300 x 150]] }
000000323FD20F60: {[WXF2 Value[300 x 300]] }
000000323FD21030: {[bf2 Value[300 x 1]] }
000000323FD21100: {[bc0 Value[300 x 1]] }
000000323FD211D0: {[WCO0 Value[300 x 1]] }
000000323FD212A0: {[AutoName3 Value[300 x 1 x *]] }
000000323FD21370: {[AutoName5 Value[300 x 1 x *]] }
000000323FD21440: {[WXO2 Value[300 x 300]] }
000000323FD21510: {[WHF0 Value[300 x 300]] }
000000323FD215E0: {[bi2 Value[300 x 1]] }
000000323FD216B0: {[WHI0 Value[300 x 300]] }
000000323FD21780: {[bo0 Value[300 x 1]] }
000000323FD21850: {[WCI2 Value[300 x 1]] }
000000323FD21920: {[AutoName1 Value[300 x 1 x *]] }
000000323FD219F0: {[bi0 Value[300 x 1]] }
000000323FD21AC0: {[bc2 Value[300 x 1]] }
000000323FD21B90: {[WCF2 Value[300 x 1]] }
000000323FD21C60: {[WCO2 Value[300 x 1]] }
000000323FD21D30: {[AutoName38 Value[300 x 1 x *]] [WHI0 Gradient[300 x 300]] }
000000323FD21E00: {[WXF0 Value[300 x 150]] }
000000323FD21ED0: {[WCF0 Value[300 x 1]] }
000000323FD21FA0: {[WHI2 Value[300 x 300]] }
000000323FD22070: {[AutoName6 Value[300 x 1 x *]] }
000000323FD22140: {[WHC2 Value[300 x 300]] }
000000323FD22210: {[AutoName0 Value[300 x 1 x *]] }
000000323FD222E0: {[AutoName4 Value[300 x 1 x *]] }
000000323FD223B0: {[AutoName40 Value[300 x 1 x *]] [WXC2 Gradient[300 x 300]] }
000000323FD22480: {[bo2 Value[300 x 1]] }
000000323FD22550: {[AutoName30 Gradient[300 x 1 x *]] [AutoName41 Value[300 x 1 x *]] }
000000323FD22620: {[AutoName27 Gradient[300 x 1 x *]] [AutoName39 Value[300 x 1 x *]] }
000000323FD226F0: {[WHF2 Value[300 x 300]] }
000000323FD227C0: {[WHO0 Value[300 x 300]] }
000000323FD22890: {[WXC0 Value[300 x 150]] }
000000323FD22960: {[WCI0 Value[300 x 1]] }
000000323FD22A30: {[WXI2 Value[300 x 300]] }
000000324005C0D0: {[bi3 Value[300 x 1]] }
000000324005C1A0: {[WXF3 Value[300 x 300]] }
000000324005C270: {[WHF3 Value[300 x 300]] }
000000324005C340: {[bc3 Value[300 x 1]] }
000000324005C410: {[bo3 Value[300 x 1]] }
000000324005C4E0: {[WHC3 Value[300 x 300]] }
000000324005C5B0: {[bf3 Value[300 x 1]] }
000000324005C680: {[AutoName78 Value[300 x 1 x *]] [WXC3 Gradient[300 x 300]] }
000000324005C750: {[WCF3 Value[300 x 1]] }
000000324005C820: {[AutoName53 Gradient[300 x 1 x *]] [AutoName81 Value[300 x 1 x *]] }
000000324005C8F0: {[labels Value[127 x *]] }
000000324005C9C0: {[CrossEntropyWithSoftmax Value[1]] }
000000324005CA90: {[LookupTable Value[150 x *]] }
000000324005CB60: {[AutoName82 Value[300 x 1 x *]] [WCI2 Gradient[300 x 1]] }
000000324005CC30: {[WXI3 Value[300 x 300]] }
000000324005CD00: {[AutoName32 Value[300 x 1 x *]] [WXO0 Gradient[300 x 150]] }
000000324005CDD0: {[WHI3 Value[300 x 300]] }
000000324005CEA0: {[AutoName65 Gradient[300 x 1 x *]] [AutoName77 Value[300 x 1 x *]] [AutoName8 Gradient[300 x 1 x *]] }
000000324005CF70: {[outputs Value[127 x 1 x *]] }
000000324005D040: {[W4 Value[127 x 300]] }
000000324005D110: {[WCO3 Value[300 x 1]] }
000000324005D1E0: {[AutoName31 Value[300 x *]] [E0 Gradient[50 x 944]] }
000000324005D2B0: {[AutoName22 Value[300 x *]] [AutoName31 Gradient[300 x *]] }
000000324005D380: {[AutoName23 Value[300 x 1 x *]] [WXF0 Gradient[300 x 150]] }
000000324005D450: {[AutoName10 Value[300 x 1 x *]] [WXI0 Gradient[300 x 150]] }
000000324005D520: {[AutoName16 Value[300 x *]] [AutoName9 Gradient[300 x *]] [bf0 Gradient[300 x 1]] }
000000324005D5F0: {[AutoName44 Value[300 x 1 x *]] [WCI0 Gradient[300 x 1]] }
000000324005D6C0: {[AutoName76 Value[300 x 1 x *]] [WHI2 Gradient[300 x 300]] }
000000324005D790: {[WCI3 Value[300 x 1]] }
000000324005D860: {[WHO3 Value[300 x 300]] }
000000324005D930: {[AutoName12 Gradient[300 x 1 x *]] [AutoName58 Gradient[300 x 1 x *]] [AutoName80 Value[300 x 1 x *]] }
000000324005DA00: {[AutoName30 Value[300 x 1 x *]] }
000000324005DAD0: {[AutoName33 Value[300 x 1 x *]] }
000000324005DBA0: {[AutoName22 Gradient[300 x *]] [AutoName9 Value[300 x *]] [bo0 Gradient[300 x 1]] }
000000324005DC70: {[WXC3 Value[300 x 300]] }
000000324005DD40: {[AutoName68 Gradient[300 x 1 x *]] [AutoName79 Value[300 x 1 x *]] }
000000324005DE10: {[AutoName20 Gradient[300 x 1 x *]] [AutoName42 Value[300 x 1 x *]] }
000000324005DEE0: {[AutoName15 Gradient[300 x 1 x *]] [AutoName43 Value[300 x 1 x *]] }
000000324005DFB0: {[WXO3 Value[300 x 300]] }
00000032400F30F0: {[AutoName8 Value[300 x 1 x *]] }
00000032400F31C0: {[AutoName18 Value[300 x 1 x *]] }
00000032400F3290: {[AutoName7 Value[300 x 1 x *]] }
00000032400F3360: {[AutoName19 Value[300 x 1 x *]] }
00000032400F3430: {[AutoName20 Value[300 x 1 x *]] }
00000032400F3500: {[AutoName25 Value[300 x 1 x *]] }
00000032400F35D0: {[AutoName17 Value[300 x 1 x *]] }
00000032400F36A0: {[AutoName28 Value[300 x 1 x *]] }
00000032400F3770: {[AutoName61 Value[300 x 1 x *]] [WXF2 Gradient[300 x 300]] }
00000032400F3840: {[AutoName71 Value[300 x 1 x *]] }
00000032400F3910: {[AutoName3 Gradient[300 x 1 x *]] [AutoName58 Value[300 x 1 x *]] }
00000032400F39E0: {[AutoName70 Value[300 x 1 x *]] [WXO2 Gradient[300 x 300]] }
00000032400F3AB0: {[AutoName36 Gradient[300 x 1 x *]] [AutoName60 Value[300 x 1 x *]] [AutoName69 Gradient[300 x 1 x *]] }
00000032400F3B80: {[AutoName36 Value[300 x 1 x *]] }
00000032400F3C50: {[AutoName47 Gradient[300 x 1 x *]] [AutoName54 Value[300 x 1 x *]] [bf2 Gradient[300 x 1]] }
00000032400F3D20: {[AutoName12 Value[300 x 1 x *]] }
00000032400F3DF0: {[AutoName15 Value[300 x 1 x *]] }
00000032400F3EC0: {[AutoName21 Value[300 x 1 x *]] }
00000032400F3F90: {[AutoName64 Value[300 x 1 x *]] }
00000032400F4060: {[AutoName47 Value[300 x 1 x *]] [AutoName60 Gradient[300 x 1 x *]] [bo2 Gradient[300 x 1]] }
00000032400F4130: {[AutoName29 Gradient[300 x 1 x *]] [AutoName68 Value[300 x 1 x *]] }
00000032400F4200: {[AutoName24 Value[300 x 1 x *]] }
00000032400F42D0: {[AutoName11 Value[300 x 1 x *]] }
00000032400F43A0: {[AutoName26 Value[300 x 1 x *]] }
00000032400F4470: {[AutoName13 Value[300 x 1 x *]] }
00000032400F4540: {[AutoName34 Value[300 x 1 x *]] }
00000032400F4610: {[AutoName35 Value[300 x 1 x *]] }
00000032400F46E0: {[AutoName37 Value[300 x 1 x *]] }
00000032400F47B0: {[AutoName35 Gradient[300 x 1 x *]] [AutoName69 Value[300 x 1 x *]] }
00000032400F4880: {[AutoName29 Value[300 x 1 x *]] }
00000032400F4950: {[AutoName17 Gradient[300 x 1 x *]] [AutoName62 Value[300 x 1 x *]] }
00000032400F4A20: {[AutoName27 Value[300 x 1 x *]] }
00000032400F4AF0: {[AutoName10 Gradient[300 x 1 x *]] [AutoName65 Value[300 x 1 x *]] }
00000032400F4BC0: {[AutoName14 Value[300 x 1 x *]] }
00000032400F4C90: {[AutoName26 Gradient[300 x 1 x *]] [AutoName46 Value[300 x 1 x *]] }
00000032400F4D60: {[AutoName48 Value[300 x 1 x *]] [WXI2 Gradient[300 x 300]] }
00000032400F4E30: {[AutoName13 Gradient[300 x 1 x *]] [AutoName59 Value[300 x 1 x *]] }
00000032400F4F00: {[AutoName11 Gradient[300 x 1 x *]] [AutoName63 Value[300 x 1 x *]] }
00000032400F4FD0: {[AutoName25 Gradient[300 x 1 x *]] [AutoName49 Value[300 x 1 x *]] }
0000003240107160: {[AutoName103 Value[300 x 1 x *]] [AutoName33 Gradient[300 x 1 x *]] [AutoName48 Gradient[300 x 1 x *]] }
0000003240107230: {[AutoName18 Gradient[300 x 1 x *]] [AutoName59 Gradient[300 x 1 x *]] [AutoName88 Value[300 x 1 x *]] }
0000003240107300: {[AutoName2 Gradient[300 x 1 x *]] [AutoName52 Value[300 x 1 x *]] [LookupTable Gradient[150 x *]] }
00000032401073D0: {[AutoName63 Gradient[300 x 1 x *]] [AutoName7 Gradient[300 x 1 x *]] [AutoName87 Value[300 x 1 x *]] }
00000032401074A0: {[AutoName100 Value[300 x 1 x *]] [AutoName55 Gradient[300 x 1 x *]] }
0000003240107570: {[AutoName41 Gradient[300 x 1 x *]] [AutoName96 Value[300 x 1 x *]] [WHO0 Gradient[300 x 300]] }
0000003240107640: {[AutoName37 Gradient[300 x 1 x *]] [AutoName40 Gradient[300 x 1 x *]] [AutoName90 Value[300 x 1 x *]] }
0000003240107710: {[AutoName67 Value[300 x 1 x *]] }
00000032401077E0: {[AutoName72 Value[300 x 1 x *]] }
00000032401078B0: {[AutoName107 Value[300 x 1 x *]] [AutoName73 Gradient[300 x 1 x *]] }
0000003240107980: {[AutoName73 Value[300 x 1 x *]] }
0000003240107A50: {[AutoName55 Value[300 x 1 x *]] }
0000003240107B20: {[AutoName75 Value[300 x 1 x *]] }
0000003240107BF0: {[AutoName94 Value[300 x 1 x *]] }
0000003240107CC0: {[AutoName95 Value[300 x 1 x *]] }
0000003240107D90: {[AutoName14 Gradient[300 x 1 x *]] [AutoName43 Gradient[300 x 1 x *]] [AutoName83 Value[300 x 1 x *]] }
0000003240107E60: {[AutoName85 Gradient[300 x 1 x *]] [AutoName92 Value[300 x 1 x *]] [bf3 Gradient[300 x 1]] }
0000003240107F30: {[AutoName53 Value[300 x 1 x *]] }
0000003240108000: {[AutoName85 Value[300 x 1 x *]] [AutoName98 Gradient[300 x 1 x *]] [bo3 Gradient[300 x 1]] }
00000032401080D0: {[AutoName86 Value[300 x 1 x *]] [WXI3 Gradient[300 x 300]] }
00000032401081A0: {[AutoName74 Value[300 x 1 x *]] }
0000003240108270: {[AutoName56 Value[300 x 1 x *]] }
0000003240108340: {[AutoName109 Value[300 x 1 x *]] }
0000003240108410: {[AutoName32 Gradient[300 x 1 x *]] [AutoName51 Gradient[300 x 1 x *]] [AutoName97 Value[300 x 1 x *]] }
00000032401084E0: {[AutoName107 Gradient[300 x 1 x *]] [AutoName74 Gradient[300 x 1 x *]] [AutoName98 Value[300 x 1 x *]] }
00000032401085B0: {[AutoName101 Value[300 x 1 x *]] [AutoName24 Gradient[300 x 1 x *]] [AutoName49 Gradient[300 x 1 x *]] }
0000003240108680: {[AutoName64 Gradient[300 x 1 x *]] [AutoName84 Value[300 x 1 x *]] }
0000003240108750: {[AutoName1 Gradient[300 x 1 x *]] [AutoName51 Value[300 x 1 x *]] }
0000003240108820: {[AutoName19 Gradient[300 x 1 x *]] [AutoName39 Gradient[300 x 1 x *]] [AutoName89 Value[300 x 1 x *]] }
00000032401088F0: {[AutoName91 Value[300 x 1 x *]] }
00000032401089C0: {[AutoName66 Value[300 x 1 x *]] }
0000003240108A90: {[AutoName106 Value[300 x 1 x *]] [AutoName67 Gradient[300 x 1 x *]] }
0000003240108B60: {[AutoName108 Value[300 x 1 x *]] [WXO3 Gradient[300 x 300]] }
0000003240108C30: {[AutoName102 Value[300 x 1 x *]] [WCF0 Gradient[300 x 1]] }
0000003240108D00: {[AutoName21 Gradient[300 x 1 x *]] [AutoName50 Value[300 x 1 x *]] }
0000003240108DD0: {[AutoName45 Value[300 x 1 x *]] [AutoName5 Gradient[300 x 1 x *]] }
0000003240108EA0: {[AutoName93 Value[300 x 1 x *]] }
0000003240108F70: {[AutoName99 Value[300 x 1 x *]] [WXF3 Gradient[300 x 300]] }
0000003240109040: {[AutoName57 Value[300 x 1 x *]] }
000000324010D190: {[AutoName111 Gradient[300 x 1 x *]] [AutoName114 Value[127 x 1 x *]] }
000000324010D330: {[AutoName28 Gradient[300 x 1 x *]] [AutoName70 Gradient[300 x 1 x *]] [AutoName89 Gradient[300 x 1 x *]] }
000000324010D400: {[AutoName92 Gradient[300 x 1 x *]] [bi3 Gradient[300 x 1]] }
000000324010D4D0: {[AutoName34 Gradient[300 x 1 x *]] [AutoName61 Gradient[300 x 1 x *]] [AutoName83 Gradient[300 x 1 x *]] }
000000324010D5A0: {[AutoName112 Value[300 x 1 x *]] }
000000324010D670: {[CrossEntropyWithSoftmax Gradient[1]] }
000000324010D810: {[bc0 Gradient[300 x 1]] }
000000324010D8E0: {[bc3 Gradient[300 x 1]] }
000000324010D9B0: {[WCF2 Gradient[300 x 1]] }
000000324010DA80: {[AutoName111 Value[300 x 1 x *]] }
000000324010DB50: {[WCI3 Gradient[300 x 1]] }
000000324010DC20: {[AutoName104 Value[300 x 1 x *]] }
000000324010DCF0: {[AutoName113 Gradient[300 x 1 x *]] }
000000324010DDC0: {[AutoName90 Gradient[300 x 1 x *]] }
000000324010DE90: {[AutoName80 Gradient[300 x 1 x *]] [WHC0 Gradient[300 x 300]] }
000000324010DF60: {[AutoName71 Gradient[300 x 1 x *]] [AutoName86 Gradient[300 x 1 x *]] [WCO0 Gradient[300 x 1]] }
000000324010E030: {[WCO3 Gradient[300 x 1]] }
000000324010E100: {[AutoName110 Value[300 x 1 x *]] }
000000324010E1D0: {[AutoName95 Gradient[300 x 1 x *]] }
000000324010E2A0: {[AutoName105 Value[300 x 1 x *]] }
000000324010E370: {[AutoName91 Gradient[300 x 1 x *]] }
000000324010E440: {[AutoName93 Gradient[300 x 1 x *]] }
000000324010E510: {[AutoName88 Gradient[300 x 1 x *]] [WHF2 Gradient[300 x 300]] }
000000324010E5E0: {[AutoName16 Gradient[300 x *]] [AutoName62 Gradient[300 x 1 x *]] [AutoName87 Gradient[300 x 1 x *]] [bi0 Gradient[300 x 1]] }
000000324010E6B0: {[W4 Gradient[127 x 300]] }
000000324010E850: {[AutoName109 Gradient[300 x 1 x *]] [WCO2 Gradient[300 x 1]] }
000000324010E920: {[AutoName112 Gradient[300 x 1 x *]] [AutoName114 Gradient[127 x 1 x *]] }
000000324010E9F0: {[AutoName105 Gradient[300 x 1 x *]] }
000000324010EB90: {[AutoName103 Gradient[300 x 1 x *]] [AutoName46 Gradient[300 x 1 x *]] [AutoName6 Gradient[300 x 1 x *]] }
000000324010EC60: {[AutoName94 Gradient[300 x 1 x *]] }
000000324010ED30: {[AutoName79 Gradient[300 x 1 x *]] [WHO2 Gradient[300 x 300]] }
000000324010EE00: {[AutoName104 Gradient[300 x 1 x *]] }
000000324010EED0: {[AutoName110 Gradient[300 x 1 x *]] }
000000324010EFA0: {[WHC3 Gradient[300 x 300]] }
000000324010F070: {[AutoName113 Value[300 x 1 x *]] }
00000032401131B0: {[bc2 Gradient[300 x 1]] }
0000003240113280: {[AutoName56 Gradient[300 x 1 x *]] [AutoName97 Gradient[300 x 1 x *]] }
0000003240113350: {[AutoName52 Gradient[300 x 1 x *]] [AutoName81 Gradient[300 x 1 x *]] }
0000003240113420: {[WHO3 Gradient[300 x 300]] }
00000032401134F0: {[AutoName101 Gradient[300 x 1 x *]] [AutoName23 Gradient[300 x 1 x *]] [AutoName45 Gradient[300 x 1 x *]] }
00000032401135C0: {[AutoName100 Gradient[300 x 1 x *]] [AutoName54 Gradient[300 x 1 x *]] [bi2 Gradient[300 x 1]] }
0000003240113690: {[AutoName106 Gradient[300 x 1 x *]] }
0000003240113830: {[WHI3 Gradient[300 x 300]] }
0000003240113DE0: {[AutoName72 Gradient[300 x 1 x *]] [AutoName99 Gradient[300 x 1 x *]] }
0000003240113F80: {[AutoName102 Gradient[300 x 1 x *]] }
0000003240114050: {[AutoName4 Gradient[300 x 1 x *]] [AutoName44 Gradient[300 x 1 x *]] [AutoName84 Gradient[300 x 1 x *]] }
0000003240114120: {[WHF3 Gradient[300 x 300]] }
00000032401141F0: {[AutoName108 Gradient[300 x 1 x *]] [AutoName66 Gradient[300 x 1 x *]] }
00000032401142C0: {[AutoName42 Gradient[300 x 1 x *]] [AutoName82 Gradient[300 x 1 x *]] }
0000003240114390: {[WCF3 Gradient[300 x 1]] }
0000003240114460: {[AutoName50 Gradient[300 x 1 x *]] [AutoName96 Gradient[300 x 1 x *]] [WHF0 Gradient[300 x 300]] }
0000003240114AE0: {[AutoName0 Gradient[300 x 1 x *]] [AutoName38 Gradient[300 x 1 x *]] [AutoName76 Gradient[300 x 1 x *]] }
0000003240114BB0: {[WHC2 Gradient[300 x 300]] }
0000003240114C80: {[AutoName75 Gradient[300 x 1 x *]] [AutoName78 Gradient[300 x 1 x *]] }
0000003240114E20: {[AutoName57 Gradient[300 x 1 x *]] [AutoName77 Gradient[300 x 1 x *]] }

05/05/2016 15:51:03: No PreCompute nodes found, skipping PreCompute step.

05/05/2016 15:51:03: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:03: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:04: Finished Epoch[ 1 of 100]: [Training] CrossEntropyWithSoftmax = 4.84160435 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.726486s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:04: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.80312508 * 81; perplexity = 121.89074069
05/05/2016 15:51:04: Finished Epoch[ 1 of 100]: [Validate] CrossEntropyWithSoftmax = 4.80312508 * 81
05/05/2016 15:51:05: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.1'

05/05/2016 15:51:05: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:05: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:06: Finished Epoch[ 2 of 100]: [Training] CrossEntropyWithSoftmax = 4.80312508 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.524507s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:06: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.72982750 * 81; perplexity = 113.27602101
05/05/2016 15:51:06: Finished Epoch[ 2 of 100]: [Validate] CrossEntropyWithSoftmax = 4.72982750 * 81
05/05/2016 15:51:06: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.2'

05/05/2016 15:51:06: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:06: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:07: Finished Epoch[ 3 of 100]: [Training] CrossEntropyWithSoftmax = 4.72982750 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.531957s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:07: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.62214190 * 81; perplexity = 101.71165487
05/05/2016 15:51:07: Finished Epoch[ 3 of 100]: [Validate] CrossEntropyWithSoftmax = 4.62214190 * 81
05/05/2016 15:51:08: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.3'

05/05/2016 15:51:08: Starting Epoch 4: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:08: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:09: Finished Epoch[ 4 of 100]: [Training] CrossEntropyWithSoftmax = 4.62214190 * 81; totalSamplesSeen = 324; learningRatePerSample = 0.1; epochTime=0.52796s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:09: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.47407890 * 81; perplexity = 87.71376974
05/05/2016 15:51:09: Finished Epoch[ 4 of 100]: [Validate] CrossEntropyWithSoftmax = 4.47407890 * 81
05/05/2016 15:51:09: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.4'

05/05/2016 15:51:09: Starting Epoch 5: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:09: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:10: Finished Epoch[ 5 of 100]: [Training] CrossEntropyWithSoftmax = 4.47407890 * 81; totalSamplesSeen = 405; learningRatePerSample = 0.1; epochTime=0.536155s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
WARNING: The same matrix with dim [127, 120] has been transferred between different devices for 20 times.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:10: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.26949508 * 81; perplexity = 71.48553210
05/05/2016 15:51:10: Finished Epoch[ 5 of 100]: [Validate] CrossEntropyWithSoftmax = 4.26949508 * 81
05/05/2016 15:51:10: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.5'

05/05/2016 15:51:11: Starting Epoch 6: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:11: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:11: Finished Epoch[ 6 of 100]: [Training] CrossEntropyWithSoftmax = 4.26949508 * 81; totalSamplesSeen = 486; learningRatePerSample = 0.1; epochTime=0.535047s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:12: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.97823758 * 81; perplexity = 53.42279759
05/05/2016 15:51:12: Finished Epoch[ 6 of 100]: [Validate] CrossEntropyWithSoftmax = 3.97823758 * 81
05/05/2016 15:51:12: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.6'

05/05/2016 15:51:12: Starting Epoch 7: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:12: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:13: Finished Epoch[ 7 of 100]: [Training] CrossEntropyWithSoftmax = 3.97823758 * 81; totalSamplesSeen = 567; learningRatePerSample = 0.1; epochTime=0.533247s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:13: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.55474703 * 81; perplexity = 34.97897015
05/05/2016 15:51:13: Finished Epoch[ 7 of 100]: [Validate] CrossEntropyWithSoftmax = 3.55474703 * 81
05/05/2016 15:51:13: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.7'

05/05/2016 15:51:14: Starting Epoch 8: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:14: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:14: Finished Epoch[ 8 of 100]: [Training] CrossEntropyWithSoftmax = 3.55474703 * 81; totalSamplesSeen = 648; learningRatePerSample = 0.1; epochTime=0.534391s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:14: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.96335894 * 81; perplexity = 19.36290143
05/05/2016 15:51:14: Finished Epoch[ 8 of 100]: [Validate] CrossEntropyWithSoftmax = 2.96335894 * 81
05/05/2016 15:51:15: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.8'

05/05/2016 15:51:15: Starting Epoch 9: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:15: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:16: Finished Epoch[ 9 of 100]: [Training] CrossEntropyWithSoftmax = 2.96335894 * 81; totalSamplesSeen = 729; learningRatePerSample = 0.1; epochTime=0.535113s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:16: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.40280001 * 81; perplexity = 11.05408460
05/05/2016 15:51:16: Finished Epoch[ 9 of 100]: [Validate] CrossEntropyWithSoftmax = 2.40280001 * 81
05/05/2016 15:51:16: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9'

05/05/2016 15:51:16: Starting Epoch 10: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:16: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:17: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.1; epochTime=0.530193s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:17: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.55921672 * 81; perplexity = 12.92568895
05/05/2016 15:51:17: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.55921672 * 81
05/05/2016 15:51:17: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:18: learnRatePerSample reduced to 0.050000001
05/05/2016 15:51:18: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:18: Starting Epoch 10: learning rate per sample = 0.050000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:18: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:19: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.050000001; epochTime=0.533828s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:19: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.53354127 * 81; perplexity = 12.59804026
05/05/2016 15:51:19: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.53354127 * 81
05/05/2016 15:51:19: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:20: learnRatePerSample reduced to 0.025
05/05/2016 15:51:20: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:20: Starting Epoch 10: learning rate per sample = 0.025000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:20: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:21: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.025; epochTime=0.538541s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:21: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.52156067 * 81; perplexity = 12.44800873
05/05/2016 15:51:21: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.52156067 * 81
05/05/2016 15:51:21: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:22: learnRatePerSample reduced to 0.0125
05/05/2016 15:51:22: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:22: Starting Epoch 10: learning rate per sample = 0.012500  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:22: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:22: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0125; epochTime=0.525494s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51578776 * 81; perplexity = 12.37635454
05/05/2016 15:51:23: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51578776 * 81
05/05/2016 15:51:23: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:24: learnRatePerSample reduced to 0.0062500001
05/05/2016 15:51:24: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:24: Starting Epoch 10: learning rate per sample = 0.006250  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:24: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0062500001; epochTime=0.526005s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51295641 * 81; perplexity = 12.34136227
05/05/2016 15:51:25: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51295641 * 81
05/05/2016 15:51:25: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:25: learnRatePerSample reduced to 0.003125
05/05/2016 15:51:25: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:26: Starting Epoch 10: learning rate per sample = 0.003125  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:26: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:26: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.003125; epochTime=0.5285s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:26: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51155467 * 81; perplexity = 12.32407506
05/05/2016 15:51:26: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51155467 * 81
05/05/2016 15:51:26: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:27: learnRatePerSample reduced to 0.0015625
05/05/2016 15:51:27: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:27: Starting Epoch 10: learning rate per sample = 0.001563  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:27: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:28: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0015625; epochTime=0.530845s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:28: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51085672 * 81; perplexity = 12.31547649
05/05/2016 15:51:28: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51085672 * 81
05/05/2016 15:51:28: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:29: learnRatePerSample reduced to 0.00078125001
05/05/2016 15:51:29: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:29: Starting Epoch 10: learning rate per sample = 0.000781  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:29: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:30: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00078125001; epochTime=0.525647s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:30: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51050897 * 81; perplexity = 12.31119453
05/05/2016 15:51:30: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51050897 * 81
05/05/2016 15:51:30: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:31: learnRatePerSample reduced to 0.00039062501
05/05/2016 15:51:31: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:31: Starting Epoch 10: learning rate per sample = 0.000391  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:32: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.00039062501; epochTime=0.532848s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:32: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51033510 * 81; perplexity = 12.30905411
05/05/2016 15:51:32: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51033510 * 81
05/05/2016 15:51:32: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:33: learnRatePerSample reduced to 0.0001953125
05/05/2016 15:51:33: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:33: Starting Epoch 10: learning rate per sample = 0.000195  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:33: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:34: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.0001953125; epochTime=0.525013s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:34: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51024863 * 81; perplexity = 12.30798984
05/05/2016 15:51:34: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51024863 * 81
05/05/2016 15:51:34: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:35: learnRatePerSample reduced to 9.7656251e-005
05/05/2016 15:51:35: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:35: Starting Epoch 10: learning rate per sample = 0.000098  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:35: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:35: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.7656251e-005; epochTime=0.525507s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:36: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51020512 * 81; perplexity = 12.30745425
05/05/2016 15:51:36: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51020512 * 81
05/05/2016 15:51:36: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:36: learnRatePerSample reduced to 4.8828126e-005
05/05/2016 15:51:36: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:37: Starting Epoch 10: learning rate per sample = 0.000049  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:37: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:37: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.8828126e-005; epochTime=0.524064s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:37: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51018345 * 81; perplexity = 12.30718763
05/05/2016 15:51:37: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51018345 * 81
05/05/2016 15:51:37: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:38: learnRatePerSample reduced to 2.4414063e-005
05/05/2016 15:51:38: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:38: Starting Epoch 10: learning rate per sample = 0.000024  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:38: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:39: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.4414063e-005; epochTime=0.526795s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:39: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51017253 * 81; perplexity = 12.30705316
05/05/2016 15:51:39: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51017253 * 81
05/05/2016 15:51:39: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:40: learnRatePerSample reduced to 1.2207031e-005
05/05/2016 15:51:40: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:40: Starting Epoch 10: learning rate per sample = 0.000012  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:40: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:41: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.2207031e-005; epochTime=0.524991s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:41: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016706 * 81; perplexity = 12.30698593
05/05/2016 15:51:41: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016706 * 81
05/05/2016 15:51:41: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:42: learnRatePerSample reduced to 6.1035157e-006
05/05/2016 15:51:42: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:42: Starting Epoch 10: learning rate per sample = 0.000006  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:42: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:43: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 6.1035157e-006; epochTime=0.524762s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:43: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016461 * 81; perplexity = 12.30695579
05/05/2016 15:51:43: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016461 * 81
05/05/2016 15:51:43: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:44: learnRatePerSample reduced to 3.0517579e-006
05/05/2016 15:51:44: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:44: Starting Epoch 10: learning rate per sample = 0.000003  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:44: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:44: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.0517579e-006; epochTime=0.523613s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:45: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016311 * 81; perplexity = 12.30693724
05/05/2016 15:51:45: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016311 * 81
05/05/2016 15:51:45: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:46: learnRatePerSample reduced to 1.5258789e-006
05/05/2016 15:51:46: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:46: Starting Epoch 10: learning rate per sample = 0.000002  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:46: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:46: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.5258789e-006; epochTime=0.524364s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:47: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016254 * 81; perplexity = 12.30693029
05/05/2016 15:51:47: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016254 * 81
05/05/2016 15:51:47: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:47: learnRatePerSample reduced to 7.6293946e-007
05/05/2016 15:51:47: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:48: Starting Epoch 10: learning rate per sample = 0.000001  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:48: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:48: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 7.6293946e-007; epochTime=0.526669s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:48: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016217 * 81; perplexity = 12.30692565
05/05/2016 15:51:48: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016217 * 81
05/05/2016 15:51:48: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:49: learnRatePerSample reduced to 3.8146973e-007
05/05/2016 15:51:49: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:49: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:49: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:50: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 3.8146973e-007; epochTime=0.525646s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:50: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:51:50: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:51:50: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:51: learnRatePerSample reduced to 1.9073487e-007
05/05/2016 15:51:51: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:51: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:51: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:52: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.9073487e-007; epochTime=0.527292s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:52: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:51:52: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:51:52: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:53: learnRatePerSample reduced to 9.5367433e-008
05/05/2016 15:51:53: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:53: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:53: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:54: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 9.5367433e-008; epochTime=0.53125s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:54: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:51:54: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:51:54: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:55: learnRatePerSample reduced to 4.7683717e-008
05/05/2016 15:51:55: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:55: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:55: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:56: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 4.7683717e-008; epochTime=0.532301s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:56: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:51:56: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:51:56: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:57: learnRatePerSample reduced to 2.3841858e-008
05/05/2016 15:51:57: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:57: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:57: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:57: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.3841858e-008; epochTime=0.539109s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:58: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:51:58: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:51:58: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:51:58: learnRatePerSample reduced to 1.1920929e-008
05/05/2016 15:51:58: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:51:59: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:51:59: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:51:59: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.1920929e-008; epochTime=0.526012s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:00: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:52:00: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:52:00: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:52:00: learnRatePerSample reduced to 5.9604646e-009
05/05/2016 15:52:00: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:52:01: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:52:01: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:01: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 5.9604646e-009; epochTime=0.525563s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:01: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:52:01: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:52:01: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:52:02: learnRatePerSample reduced to 2.9802323e-009
05/05/2016 15:52:02: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:52:03: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:52:03: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:03: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 2.9802323e-009; epochTime=0.530606s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:03: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:52:03: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:52:03: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:52:04: learnRatePerSample reduced to 1.4901161e-009
05/05/2016 15:52:04: SGD: revoke back to and update checkpoint file for epoch 9

05/05/2016 15:52:04: Starting Epoch 10: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/05/2016 15:52:04: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:05: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.40280001 * 81; totalSamplesSeen = 810; learningRatePerSample = 1.4901161e-009; epochTime=0.527393s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/05/2016 15:52:05: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.51016198 * 81; perplexity = 12.30692333
05/05/2016 15:52:05: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.51016198 * 81
05/05/2016 15:52:05: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160505153934.41413\Examples\Text\Miscellaneous_SLU@debug_gpu/cntkdebug.dnn.9.
05/05/2016 15:52:06: learnRatePerSample reduced to 7.4505807e-010
05/05/2016 15:52:06: SGD: revoke back to and update checkpoint file for epoch 9
05/05/2016 15:52:06: Learn Rate Per Sample for Epoch[10] = 7.4505807e-010 is less than minLearnRate 9.9999997e-010. Training complete.
05/05/2016 15:52:07: CNTKCommandTrainEnd: LSTM

05/05/2016 15:52:07: Action "train" complete.


05/05/2016 15:52:07: ##############################################################################
05/05/2016 15:52:07: #                                                                            #
05/05/2016 15:52:07: # Action "write"                                                             #
05/05/2016 15:52:07: #                                                                            #
05/05/2016 15:52:07: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

4 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	labels = InputValue()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[300 x 1 x *1]] [AutoName1 Gradient[300 x 1 x *1]] [AutoName10 Gradient[300 x 1 x *1]] [AutoName100 Gradient[300 x 1 x *1]] [AutoName101 Gradient[300 x 1 x *1]] [AutoName102 Gradient[300 x 1 x *1]] [AutoName103 Gradient[300 x 1 x *1]] [AutoName104 Gradient[300 x 1 x *1]] [AutoName105 Gradient[300 x 1 x *1]] [AutoName106 Gradient[300 x 1 x *1]] [AutoName107 Gradient[300 x 1 x *1]] [AutoName108 Gradient[300 x 1 x *1]] [AutoName109 Gradient[300 x 1 x *1]] [AutoName11 Gradient[300 x 1 x *1]] [AutoName110 Gradient[300 x 1 x *1]] [AutoName111 Gradient[300 x 1 x *1]] [AutoName112 Gradient[300 x 1 x *1]] [AutoName113 Gradient[300 x 1 x *1]] [AutoName114 Gradient[127 x 1 x *1]] [AutoName114 Value[127 x 1 x *1]] [AutoName12 Gradient[300 x 1 x *1]] [AutoName13 Gradient[300 x 1 x *1]] [AutoName14 Gradient[300 x 1 x *1]] [AutoName15 Gradient[300 x 1 x *1]] [AutoName16 Gradient[300 x *1]] [AutoName17 Gradient[300 x 1 x *1]] [AutoName18 Gradient[300 x 1 x *1]] [AutoName19 Gradient[300 x 1 x *1]] [AutoName2 Gradient[300 x 1 x *1]] [AutoName20 Gradient[300 x 1 x *1]] [AutoName21 Gradient[300 x 1 x *1]] [AutoName22 Gradient[300 x *1]] [AutoName23 Gradient[300 x 1 x *1]] [AutoName24 Gradient[300 x 1 x *1]] [AutoName25 Gradient[300 x 1 x *1]] [AutoName26 Gradient[300 x 1 x *1]] [AutoName27 Gradient[300 x 1 x *1]] [AutoName28 Gradient[300 x 1 x *1]] [AutoName29 Gradient[300 x 1 x *1]] [AutoName3 Gradient[300 x 1 x *1]] [AutoName30 Gradient[300 x 1 x *1]] [AutoName31 Gradient[300 x *1]] [AutoName32 Gradient[300 x 1 x *1]] [AutoName33 Gradient[300 x 1 x *1]] [AutoName34 Gradient[300 x 1 x *1]] [AutoName35 Gradient[300 x 1 x *1]] [AutoName36 Gradient[300 x 1 x *1]] [AutoName37 Gradient[300 x 1 x *1]] [AutoName38 Gradient[300 x 1 x *1]] [AutoName39 Gradient[300 x 1 x *1]] [AutoName4 Gradient[300 x 1 x *1]] [AutoName40 Gradient[300 x 1 x *1]] [AutoName41 Gradient[300 x 1 x *1]] [AutoName42 Gradient[300 x 1 x *1]] [AutoName43 Gradient[300 x 1 x *1]] [AutoName44 Gradient[300 x 1 x *1]] [AutoName45 Gradient[300 x 1 x *1]] [AutoName46 Gradient[300 x 1 x *1]] [AutoName47 Gradient[300 x 1 x *1]] [AutoName48 Gradient[300 x 1 x *1]] [AutoName49 Gradient[300 x 1 x *1]] [AutoName5 Gradient[300 x 1 x *1]] [AutoName50 Gradient[300 x 1 x *1]] [AutoName51 Gradient[300 x 1 x *1]] [AutoName52 Gradient[300 x 1 x *1]] [AutoName53 Gradient[300 x 1 x *1]] [AutoName54 Gradient[300 x 1 x *1]] [AutoName55 Gradient[300 x 1 x *1]] [AutoName56 Gradient[300 x 1 x *1]] [AutoName57 Gradient[300 x 1 x *1]] [AutoName58 Gradient[300 x 1 x *1]] [AutoName59 Gradient[300 x 1 x *1]] [AutoName6 Gradient[300 x 1 x *1]] [AutoName60 Gradient[300 x 1 x *1]] [AutoName61 Gradient[300 x 1 x *1]] [AutoName62 Gradient[300 x 1 x *1]] [AutoName63 Gradient[300 x 1 x *1]] [AutoName64 Gradient[300 x 1 x *1]] [AutoName65 Gradient[300 x 1 x *1]] [AutoName66 Gradient[300 x 1 x *1]] [AutoName67 Gradient[300 x 1 x *1]] [AutoName68 Gradient[300 x 1 x *1]] [AutoName69 Gradient[300 x 1 x *1]] [AutoName7 Gradient[300 x 1 x *1]] [AutoName70 Gradient[300 x 1 x *1]] [AutoName71 Gradient[300 x 1 x *1]] [AutoName72 Gradient[300 x 1 x *1]] [AutoName73 Gradient[300 x 1 x *1]] [AutoName74 Gradient[300 x 1 x *1]] [AutoName75 Gradient[300 x 1 x *1]] [AutoName76 Gradient[300 x 1 x *1]] [AutoName77 Gradient[300 x 1 x *1]] [AutoName78 Gradient[300 x 1 x *1]] [AutoName79 Gradient[300 x 1 x *1]] [AutoName8 Gradient[300 x 1 x *1]] [AutoName80 Gradient[300 x 1 x *1]] [AutoName81 Gradient[300 x 1 x *1]] [AutoName82 Gradient[300 x 1 x *1]] [AutoName83 Gradient[300 x 1 x *1]] [AutoName84 Gradient[300 x 1 x *1]] [AutoName85 Gradient[300 x 1 x *1]] [AutoName86 Gradient[300 x 1 x *1]] [AutoName87 Gradient[300 x 1 x *1]] [AutoName88 Gradient[300 x 1 x *1]] [AutoName89 Gradient[300 x 1 x *1]] [AutoName9 Gradient[300 x *1]] [AutoName90 Gradient[300 x 1 x *1]] [AutoName91 Gradient[300 x 1 x *1]] [AutoName92 Gradient[300 x 1 x *1]] [AutoName93 Gradient[300 x 1 x *1]] [AutoName94 Gradient[300 x 1 x *1]] [AutoName95 Gradient[300 x 1 x *1]] [AutoName96 Gradient[300 x 1 x *1]] [AutoName97 Gradient[300 x 1 x *1]] [AutoName98 Gradient[300 x 1 x *1]] [AutoName99 Gradient[300 x 1 x *1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [E0 Gradient[50 x 944]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[127 x 1 x *1]] [PosteriorProb Value[127 x 1 x *1]] [W4 Gradient[127 x 300]] [WCF0 Gradient[300 x 1]] [WCF2 Gradient[300 x 1]] [WCF3 Gradient[300 x 1]] [WCI0 Gradient[300 x 1]] [WCI2 Gradient[300 x 1]] [WCI3 Gradient[300 x 1]] [WCO0 Gradient[300 x 1]] [WCO2 Gradient[300 x 1]] [WCO3 Gradient[300 x 1]] [WHC0 Gradient[300 x 300]] [WHC2 Gradient[300 x 300]] [WHC3 Gradient[300 x 300]] [WHF0 Gradient[300 x 300]] [WHF2 Gradient[300 x 300]] [WHF3 Gradient[300 x 300]] [WHI0 Gradient[300 x 300]] [WHI2 Gradient[300 x 300]] [WHI3 Gradient[300 x 300]] [WHO0 Gradient[300 x 300]] [WHO2 Gradient[300 x 300]] [WHO3 Gradient[300 x 300]] [WXC0 Gradient[300 x 150]] [WXC2 Gradient[300 x 300]] [WXC3 Gradient[300 x 300]] [WXF0 Gradient[300 x 150]] [WXF2 Gradient[300 x 300]] [WXF3 Gradient[300 x 300]] [WXI0 Gradient[300 x 150]] [WXI2 Gradient[300 x 300]] [WXI3 Gradient[300 x 300]] [WXO0 Gradient[300 x 150]] [WXO2 Gradient[300 x 300]] [WXO3 Gradient[300 x 300]] [bc0 Gradient[300 x 1]] [bc2 Gradient[300 x 1]] [bc3 Gradient[300 x 1]] [bf0 Gradient[300 x 1]] [bf2 Gradient[300 x 1]] [bf3 Gradient[300 x 1]] [bi0 Gradient[300 x 1]] [bi2 Gradient[300 x 1]] [bi3 Gradient[300 x 1]] [bo0 Gradient[300 x 1]] [bo2 Gradient[300 x 1]] [bo3 Gradient[300 x 1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
000000323F6F5F50: {[AutoName0 Value[300 x 1 x *1]] }
000000323F6F61C0: {[AutoName1 Value[300 x 1 x *1]] }
000000323F6F6290: {[AutoName2 Value[300 x 1 x *1]] }
00000032400657C0: {[AutoName112 Value[300 x 1 x *1]] }
0000003240066320: {[AutoName104 Value[300 x 1 x *1]] }
00000032400669A0: {[AutoName111 Value[300 x 1 x *1]] }
0000003240066C10: {[AutoName110 Value[300 x 1 x *1]] }
0000003240066E80: {[AutoName105 Value[300 x 1 x *1]] }
0000003240066F50: {[AutoName113 Value[300 x 1 x *1]] }
0000003240072C50: {[AutoName11 Value[300 x 1 x *1]] }
0000003240072D20: {[AutoName69 Value[300 x 1 x *1]] }
0000003240072DF0: {[AutoName71 Value[300 x 1 x *1]] }
0000003240072EC0: {[AutoName59 Value[300 x 1 x *1]] }
0000003240072F90: {[AutoName47 Value[300 x 1 x *1]] }
0000003240073060: {[AutoName62 Value[300 x 1 x *1]] }
0000003240073130: {[AutoName64 Value[300 x 1 x *1]] }
0000003240073200: {[AutoName63 Value[300 x 1 x *1]] }
00000032400732D0: {[AutoName35 Value[300 x 1 x *1]] }
00000032400733A0: {[AutoName34 Value[300 x 1 x *1]] }
0000003240073470: {[AutoName25 Value[300 x 1 x *1]] }
0000003240073540: {[AutoName29 Value[300 x 1 x *1]] }
0000003240073610: {[AutoName61 Value[300 x 1 x *1]] }
00000032400736E0: {[AutoName7 Value[300 x 1 x *1]] }
00000032400737B0: {[AutoName58 Value[300 x 1 x *1]] }
0000003240073880: {[AutoName19 Value[300 x 1 x *1]] }
0000003240073950: {[AutoName17 Value[300 x 1 x *1]] }
0000003240073A20: {[AutoName26 Value[300 x 1 x *1]] }
0000003240073AF0: {[AutoName60 Value[300 x 1 x *1]] }
0000003240073BC0: {[AutoName12 Value[300 x 1 x *1]] }
0000003240073C90: {[AutoName37 Value[300 x 1 x *1]] }
0000003240073D60: {[AutoName70 Value[300 x 1 x *1]] }
0000003240073E30: {[AutoName54 Value[300 x 1 x *1]] }
0000003240073F00: {[AutoName14 Value[300 x 1 x *1]] }
0000003240073FD0: {[AutoName18 Value[300 x 1 x *1]] }
00000032400740A0: {[AutoName65 Value[300 x 1 x *1]] }
0000003240074170: {[AutoName13 Value[300 x 1 x *1]] }
0000003240074240: {[AutoName46 Value[300 x 1 x *1]] }
0000003240074310: {[AutoName68 Value[300 x 1 x *1]] }
00000032400743E0: {[AutoName49 Value[300 x 1 x *1]] }
00000032400744B0: {[AutoName15 Value[300 x 1 x *1]] }
0000003240074580: {[AutoName21 Value[300 x 1 x *1]] }
0000003240074650: {[AutoName36 Value[300 x 1 x *1]] }
0000003240074720: {[AutoName24 Value[300 x 1 x *1]] }
00000032400747F0: {[AutoName48 Value[300 x 1 x *1]] }
00000032400748C0: {[AutoName8 Value[300 x 1 x *1]] }
0000003240074990: {[AutoName20 Value[300 x 1 x *1]] }
0000003240074A60: {[AutoName27 Value[300 x 1 x *1]] }
0000003240074B30: {[AutoName28 Value[300 x 1 x *1]] }
0000003240076C70: {[AutoName57 Value[300 x 1 x *1]] }
0000003240076D40: {[AutoName66 Value[300 x 1 x *1]] }
0000003240076E10: {[AutoName97 Value[300 x 1 x *1]] }
0000003240076EE0: {[AutoName100 Value[300 x 1 x *1]] }
0000003240076FB0: {[AutoName56 Value[300 x 1 x *1]] }
0000003240077080: {[AutoName102 Value[300 x 1 x *1]] }
0000003240077150: {[AutoName103 Value[300 x 1 x *1]] }
0000003240077220: {[AutoName84 Value[300 x 1 x *1]] }
00000032400772F0: {[AutoName88 Value[300 x 1 x *1]] }
00000032400773C0: {[AutoName89 Value[300 x 1 x *1]] }
0000003240077490: {[AutoName90 Value[300 x 1 x *1]] }
0000003240077560: {[AutoName93 Value[300 x 1 x *1]] }
0000003240077630: {[AutoName51 Value[300 x 1 x *1]] }
0000003240077700: {[AutoName94 Value[300 x 1 x *1]] }
00000032400777D0: {[AutoName95 Value[300 x 1 x *1]] }
00000032400778A0: {[AutoName50 Value[300 x 1 x *1]] }
0000003240077970: {[AutoName53 Value[300 x 1 x *1]] }
0000003240077A40: {[AutoName72 Value[300 x 1 x *1]] }
0000003240077B10: {[AutoName86 Value[300 x 1 x *1]] }
0000003240077BE0: {[AutoName45 Value[300 x 1 x *1]] }
0000003240077CB0: {[AutoName55 Value[300 x 1 x *1]] }
0000003240077D80: {[AutoName92 Value[300 x 1 x *1]] }
0000003240077E50: {[AutoName106 Value[300 x 1 x *1]] }
0000003240077F20: {[AutoName75 Value[300 x 1 x *1]] }
0000003240077FF0: {[AutoName96 Value[300 x 1 x *1]] }
00000032400780C0: {[AutoName101 Value[300 x 1 x *1]] }
0000003240078190: {[AutoName87 Value[300 x 1 x *1]] }
0000003240078260: {[AutoName83 Value[300 x 1 x *1]] }
0000003240078330: {[AutoName52 Value[300 x 1 x *1]] }
0000003240078400: {[AutoName91 Value[300 x 1 x *1]] }
00000032400784D0: {[AutoName108 Value[300 x 1 x *1]] }
00000032400785A0: {[AutoName73 Value[300 x 1 x *1]] }
0000003240078670: {[AutoName74 Value[300 x 1 x *1]] }
0000003240078740: {[AutoName98 Value[300 x 1 x *1]] }
0000003240078810: {[AutoName99 Value[300 x 1 x *1]] }
00000032400788E0: {[AutoName109 Value[300 x 1 x *1]] }
00000032400789B0: {[AutoName85 Value[300 x 1 x *1]] }
0000003240078A80: {[AutoName107 Value[300 x 1 x *1]] }
0000003240078B50: {[AutoName67 Value[300 x 1 x *1]] }
00000032400F2E30: {[WXO0 Value[300 x 150]] }
00000032400F2F00: {[WHC3 Value[300 x 300]] }
00000032400F2FD0: {[WXF0 Value[300 x 150]] }
00000032400F30A0: {[WXI0 Value[300 x 150]] }
00000032400F3170: {[WHI3 Value[300 x 300]] }
00000032400F3240: {[WXO3 Value[300 x 300]] }
00000032400F3310: {[AutoName31 Value[300 x *1]] }
00000032400F33E0: {[AutoName32 Value[300 x 1 x *1]] }
00000032400F34B0: {[WXI3 Value[300 x 300]] }
00000032400F3580: {[WXF3 Value[300 x 300]] }
00000032400F3650: {[WXF2 Value[300 x 300]] }
00000032400F3720: {[WHI0 Value[300 x 300]] }
00000032400F37F0: {[WHI2 Value[300 x 300]] }
00000032400F38C0: {[AutoName23 Value[300 x 1 x *1]] }
00000032400F3990: {[AutoName9 Value[300 x *1]] }
00000032400F3A60: {[AutoName10 Value[300 x 1 x *1]] }
00000032400F3B30: {[AutoName16 Value[300 x *1]] }
00000032400F3C00: {[WHF3 Value[300 x 300]] }
00000032400F3CD0: {[WCO2 Value[300 x 1]] }
00000032400F3DA0: {[outputs Value[127 x 1 x *1]] }
00000032400F3E70: {[LookupTable Value[150 x *1]] }
00000032400F3F40: {[WHF2 Value[300 x 300]] }
00000032400F4010: {[WHC2 Value[300 x 300]] }
00000032400F40E0: {[WHO2 Value[300 x 300]] }
00000032400F41B0: {[WCO0 Value[300 x 1]] }
00000032400F4280: {[WHF0 Value[300 x 300]] }
00000032400F4350: {[WXI2 Value[300 x 300]] }
00000032400F4420: {[WCI3 Value[300 x 1]] }
00000032400F44F0: {[WHC0 Value[300 x 300]] }
00000032400F45C0: {[WCO3 Value[300 x 1]] }
00000032400F4690: {[AutoName33 Value[300 x 1 x *1]] }
00000032400F4760: {[WHO3 Value[300 x 300]] }
00000032400F4830: {[AutoName30 Value[300 x 1 x *1]] }
00000032400F4900: {[AutoName22 Value[300 x *1]] }
00000032400F49D0: {[WXC2 Value[300 x 300]] }
00000032400F4AA0: {[WXC3 Value[300 x 300]] }
00000032400F4B70: {[WHO0 Value[300 x 300]] }
00000032400F4C40: {[WXC0 Value[300 x 150]] }
00000032400F4D10: {[WXO2 Value[300 x 300]] }
0000003240116CF0: {[labels Value[127 x *1]] }
0000003240116DC0: {[AutoName80 Value[300 x 1 x *1]] }
0000003240116E90: {[AutoName42 Value[300 x 1 x *1]] }
0000003240116F60: {[AutoName6 Value[300 x 1 x *1]] }
0000003240117030: {[AutoName81 Value[300 x 1 x *1]] }
0000003240117100: {[bc2 Value[300 x 1]] }
00000032401171D0: {[AutoName41 Value[300 x 1 x *1]] }
00000032401172A0: {[AutoName76 Value[300 x 1 x *1]] }
0000003240117370: {[AutoName3 Value[300 x 1 x *1]] }
0000003240117440: {[bi3 Value[300 x 1]] }
0000003240117510: {[features Value[2832 x *1]] }
00000032401175E0: {[WCF0 Value[300 x 1]] }
00000032401176B0: {[WCF2 Value[300 x 1]] }
0000003240117780: {[WCF3 Value[300 x 1]] }
0000003240117850: {[bi2 Value[300 x 1]] }
0000003240117920: {[WCI0 Value[300 x 1]] }
00000032401179F0: {[E0 Value[50 x 944]] }
0000003240117AC0: {[WCI2 Value[300 x 1]] }
0000003240117B90: {[AutoName40 Value[300 x 1 x *1]] }
0000003240117C60: {[AutoName43 Value[300 x 1 x *1]] }
0000003240117D30: {[bc3 Value[300 x 1]] }
0000003240117E00: {[AutoName79 Value[300 x 1 x *1]] }
0000003240117ED0: {[AutoName82 Value[300 x 1 x *1]] }
0000003240117FA0: {[bo2 Value[300 x 1]] }
0000003240118070: {[bo3 Value[300 x 1]] }
0000003240118140: {[AutoName78 Value[300 x 1 x *1]] }
0000003240118210: {[W4 Value[127 x 300]] }
00000032401182E0: {[AutoName38 Value[300 x 1 x *1]] }
00000032401183B0: {[AutoName4 Value[300 x 1 x *1]] }
0000003240118480: {[bf0 Value[300 x 1]] }
0000003240118550: {[bf3 Value[300 x 1]] }
0000003240118620: {[AutoName44 Value[300 x 1 x *1]] }
00000032401186F0: {[bi0 Value[300 x 1]] }
00000032401187C0: {[bf2 Value[300 x 1]] }
0000003240118890: {[AutoName39 Value[300 x 1 x *1]] }
0000003240118960: {[AutoName5 Value[300 x 1 x *1]] }
0000003240118A30: {[AutoName77 Value[300 x 1 x *1]] }
0000003240118B00: {[bc0 Value[300 x 1]] }
0000003240118BD0: {[bo0 Value[300 x 1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O O O O O B-stoploc.city_name I-stoploc.city_name O 
O O O O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_time.time_relative B-depart_time.time I-depart_time.time O 
O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O 
O O O O O O O O O O O O O O O 
O O O O O O O B-round_trip I-round_trip O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O B-airline_name I-airline_name O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

05/05/2016 15:52:08: Action "write" complete.

05/05/2016 15:52:08: __COMPLETED__