CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/GettingStarted/01_OneHidden/../../../../../../Examples/Image/GettingStarted/01_OneHidden.cntk currentDirectory=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData RunDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu DataDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/GettingStarted/01_OneHidden/../../../../../../Examples/Image/GettingStarted OutputDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu DeviceId=0 timestamping=true forceDeterministicAlgorithms=true stderr=- trainNetwork=[SGD=[maxEpochs=3]]
CNTK 1.7+ (HEAD 216029, Sep 22 2016 21:51:53) on localhost at 2016/09/22 21:57:10

/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/GettingStarted/01_OneHidden/../../../../../../Examples/Image/GettingStarted/01_OneHidden.cntk  currentDirectory=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData  RunDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu  DataDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/GettingStarted/01_OneHidden/../../../../../../Examples/Image/GettingStarted  OutputDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu  DeviceId=0  timestamping=true  forceDeterministicAlgorithms=true  stderr=-  trainNetwork=[SGD=[maxEpochs=3]]
Changed current directory to /tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData
09/22/2016 21:57:11: Redirecting stderr to file -_trainNetwork_testNetwork.log
09/22/2016 21:57:11: -------------------------------------------------------------------
09/22/2016 21:57:11: Build info: 

09/22/2016 21:57:11: 		Built time: Sep 22 2016 21:51:53
09/22/2016 21:57:11: 		Last modified date: Thu Sep 22 21:50:25 2016
09/22/2016 21:57:11: 		Build type: release
09/22/2016 21:57:11: 		Build target: GPU
09/22/2016 21:57:11: 		With 1bit-SGD: no
09/22/2016 21:57:11: 		Math lib: mkl
09/22/2016 21:57:11: 		CUDA_PATH: /usr/local/cuda-7.5
09/22/2016 21:57:11: 		CUB_PATH: /usr/local/cub-1.4.1
09/22/2016 21:57:11: 		CUDNN_PATH: /usr/local/cudnn-5.1
09/22/2016 21:57:11: 		Build Branch: HEAD
09/22/2016 21:57:11: 		Build SHA1: 216029bfedd92253fd45034da1d1cc68c4d4c7f1
09/22/2016 21:57:11: 		Built by philly on 3f54c6a10121
09/22/2016 21:57:11: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
09/22/2016 21:57:11: -------------------------------------------------------------------
09/22/2016 21:57:12: -------------------------------------------------------------------
09/22/2016 21:57:12: GPU info:

09/22/2016 21:57:12: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
09/22/2016 21:57:12: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
09/22/2016 21:57:12: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
09/22/2016 21:57:12: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
09/22/2016 21:57:12: -------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: 01_OneHidden.cntk:command=trainNetwork:testNetwork
configparameters: 01_OneHidden.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/GettingStarted/01_OneHidden/../../../../../../Examples/Image/GettingStarted
configparameters: 01_OneHidden.cntk:currentDirectory=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:dataDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData
configparameters: 01_OneHidden.cntk:deviceId=0
configparameters: 01_OneHidden.cntk:forceDeterministicAlgorithms=true
configparameters: 01_OneHidden.cntk:modelPath=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/Models/01_OneHidden
configparameters: 01_OneHidden.cntk:outputDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:precision=float
configparameters: 01_OneHidden.cntk:rootDir=..
configparameters: 01_OneHidden.cntk:RunDir=/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu
configparameters: 01_OneHidden.cntk:stderr=-
configparameters: 01_OneHidden.cntk:testNetwork={
    action = "test"
minibatchSize = 1024    
    reader = {
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData/Test-28x28_cntk_text.txt"
        input = {
            features = { dim = 784 ; format = "dense" }
            labels =   { dim = 10  ; format = "dense" }
        }
    }
}

configparameters: 01_OneHidden.cntk:timestamping=true
configparameters: 01_OneHidden.cntk:traceLevel=1
configparameters: 01_OneHidden.cntk:trainNetwork={
    action = "train"
    BrainScriptNetworkBuilder = {
imageShape = 28:28:1                        
labelDim = 10                               
        featScale = 1/256
        Scale{f} = x => Constant(f) .* x
        model = Sequential (
            Scale {featScale} :
            DenseLayer {200} : ReLU : 
            LinearLayer {labelDim}
        )
        features = Input {imageShape}
        labels = Input (labelDim)
        ol = model (features)
        ce   = CrossEntropyWithSoftmax (labels, ol)
        errs = ClassificationError (labels, ol)
        featureNodes    = (features)
        labelNodes      = (labels)
        criterionNodes  = (ce)
        evaluationNodes = (errs)
        outputNodes     = (ol)
    }
    SGD = {
        epochSize = 60000
        minibatchSize = 64
        maxEpochs = 10
        learningRatesPerSample = 0.01*5:0.005
        momentumAsTimeConstant = 0
        numMBsToShowResult = 500
    }
    reader = {
        readerType = "CNTKTextFormatReader"
        file = "/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/TestData/Train-28x28_cntk_text.txt"
        input = {
            features = { dim = 784 ; format = "dense" }
            labels =   { dim = 10  ; format = "dense" }
        }
    }   
} [SGD=[maxEpochs=3]]

09/22/2016 21:57:12: Commands: trainNetwork testNetwork
09/22/2016 21:57:12: precision = "float"

09/22/2016 21:57:12: ##############################################################################
09/22/2016 21:57:12: #                                                                            #
09/22/2016 21:57:12: # trainNetwork command (train action)                                        #
09/22/2016 21:57:12: #                                                                            #
09/22/2016 21:57:12: ##############################################################################

09/22/2016 21:57:12: 
Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[10 x 0] as glorotUniform later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[200 x 0] as glorotUniform later when dimensions are fully known.

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ClassificationError()
	ol = Plus()

Validating network. 15 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> model.arrayOfFunctions[3].W = LearnableParameter() :  -> [10 x 0]
Validating --> model.arrayOfFunctions[1].arrayOfFunctions[0].W = LearnableParameter() :  -> [200 x 0]
Validating --> ol.x._.x.ElementTimesArgs[0] = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *]
Validating --> _ol.x._.x = ElementTimes (ol.x._.x.ElementTimesArgs[0], features) : [1 x 1], [28 x 28 x 1 x *] -> [28 x 28 x 1 x *]
Node 'model.arrayOfFunctions[1].arrayOfFunctions[0].W' (LearnableParameter operation) operation: Tensor shape was inferred as [200 x 28 x 28 x 1].
Node 'model.arrayOfFunctions[1].arrayOfFunctions[0].W' (LearnableParameter operation): Initializing Parameter[200 x 28 x 28 x 1] <- glorotUniform(seed=2, init dims=[200 x 784], range=0.078087*1.000000, onCPU=true) { -0.07808444, ... }
.
Validating --> ol.x._.x.PlusArgs[0] = Times (model.arrayOfFunctions[1].arrayOfFunctions[0].W, _ol.x._.x) : [200 x 28 x 28 x 1], [28 x 28 x 1 x *] -> [200 x *]
Validating --> model.arrayOfFunctions[1].arrayOfFunctions[0].b = LearnableParameter() :  -> [200]
Validating --> ol.x._.x = Plus (ol.x._.x.PlusArgs[0], model.arrayOfFunctions[1].arrayOfFunctions[0].b) : [200 x *], [200] -> [200 x *]
Validating --> ol.x = RectifiedLinear (ol.x._.x) : [200 x *] -> [200 x *]
Node 'model.arrayOfFunctions[3].W' (LearnableParameter operation) operation: Tensor shape was inferred as [10 x 200].
Node 'model.arrayOfFunctions[3].W' (LearnableParameter operation): Initializing Parameter[10 x 200] <- glorotUniform(seed=1, init dims=[10 x 200], range=0.169031*1.000000, onCPU=true) { -0.16902819, ... }
.
Validating --> ol.PlusArgs[0] = Times (model.arrayOfFunctions[3].W, ol.x) : [10 x 200], [200 x *] -> [10 x *]
Validating --> model.arrayOfFunctions[3].b = LearnableParameter() :  -> [10]
Validating --> ol = Plus (ol.PlusArgs[0], model.arrayOfFunctions[3].b) : [10 x *], [10] -> [10 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol) : [10 x *], [10 x *] -> [1]
Validating --> errs = ClassificationError (labels, ol) : [10 x *], [10 x *] -> [1]

Validating network. 8 nodes to process in pass 2.


Validating network, final pass.




Post-processing network complete.

09/22/2016 21:57:12: 
Model has 15 nodes. Using GPU 0.

09/22/2016 21:57:12: Training criterion:   ce = CrossEntropyWithSoftmax
09/22/2016 21:57:12: Evaluation criterion: errs = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 10 are shared as 5, and 15 are not shared.

	{ model.arrayOfFunctions[1].arrayOfFunctions[0].W : [200 x 28 x 28 x 1] (gradient)
	  ol.x._.x : [200 x *] }
	{ ol.x : [200 x *]
	  ol.x._.x.PlusArgs[0] : [200 x *] (gradient) }
	{ ol.PlusArgs[0] : [10 x *]
	  ol.x._.x : [200 x *] (gradient) }
	{ model.arrayOfFunctions[3].W : [10 x 200] (gradient)
	  ol : [10 x *] (gradient) }
	{ model.arrayOfFunctions[1].arrayOfFunctions[0].b : [200] (gradient)
	  ol.x : [200 x *] (gradient) }


09/22/2016 21:57:12: Training 159010 parameters in 4 out of 4 parameter tensors and 10 nodes with gradient:

09/22/2016 21:57:12: 	Node 'model.arrayOfFunctions[1].arrayOfFunctions[0].W' (LearnableParameter operation) : [200 x 28 x 28 x 1]
09/22/2016 21:57:12: 	Node 'model.arrayOfFunctions[1].arrayOfFunctions[0].b' (LearnableParameter operation) : [200]
09/22/2016 21:57:12: 	Node 'model.arrayOfFunctions[3].W' (LearnableParameter operation) : [10 x 200]
09/22/2016 21:57:12: 	Node 'model.arrayOfFunctions[3].b' (LearnableParameter operation) : [10]

09/22/2016 21:57:12: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

09/22/2016 21:57:12: Starting Epoch 1: learning rate per sample = 0.010000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

09/22/2016 21:57:12: Starting minibatch loop.
09/22/2016 21:57:14:  Epoch[ 1 of 3]-Minibatch[   1- 500, 53.33%]: ce = 0.31634845 * 32000; errs = 9.753% * 32000; time = 1.3297s; samplesPerSecond = 24065.8
09/22/2016 21:57:14: Finished Epoch[ 1 of 3]: [Training] ce = 0.23254831 * 60000; errs = 7.082% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.0099999998; epochTime=1.61541s
09/22/2016 21:57:14: SGD: Saving checkpoint model '/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/Models/01_OneHidden.1'

09/22/2016 21:57:14: Starting Epoch 2: learning rate per sample = 0.010000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

09/22/2016 21:57:14: Starting minibatch loop.
09/22/2016 21:57:14:  Epoch[ 2 of 3]-Minibatch[   1- 500, 53.33%]: ce = 0.09415868 * 32000; errs = 2.837% * 32000; time = 0.3177s; samplesPerSecond = 100714.8
09/22/2016 21:57:15: Finished Epoch[ 2 of 3]: [Training] ce = 0.09240444 * 60000; errs = 2.815% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.0099999998; epochTime=0.582459s
09/22/2016 21:57:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/Models/01_OneHidden.2'

09/22/2016 21:57:15: Starting Epoch 3: learning rate per sample = 0.010000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

09/22/2016 21:57:15: Starting minibatch loop.
09/22/2016 21:57:15:  Epoch[ 3 of 3]-Minibatch[   1- 500, 53.33%]: ce = 0.06243709 * 32000; errs = 1.962% * 32000; time = 0.2864s; samplesPerSecond = 111741.2
09/22/2016 21:57:15: Finished Epoch[ 3 of 3]: [Training] ce = 0.06433678 * 60000; errs = 1.978% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.0099999998; epochTime=0.558533s
09/22/2016 21:57:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160922215636.140922/Examples/Image/GettingStarted_01_OneHidden@release_gpu/Models/01_OneHidden'

09/22/2016 21:57:15: Action "train" complete.


09/22/2016 21:57:15: ##############################################################################
09/22/2016 21:57:15: #                                                                            #
09/22/2016 21:57:15: # testNetwork command (test action)                                          #
09/22/2016 21:57:15: #                                                                            #
09/22/2016 21:57:15: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ClassificationError()
	ol = Plus()

Validating network. 15 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> model.arrayOfFunctions[3].W = LearnableParameter() :  -> [10 x 200]
Validating --> model.arrayOfFunctions[1].arrayOfFunctions[0].W = LearnableParameter() :  -> [200 x 28 x 28 x 1]
Validating --> ol.x._.x.ElementTimesArgs[0] = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *1]
Validating --> _ol.x._.x = ElementTimes (ol.x._.x.ElementTimesArgs[0], features) : [1 x 1], [28 x 28 x 1 x *1] -> [28 x 28 x 1 x *1]
Validating --> ol.x._.x.PlusArgs[0] = Times (model.arrayOfFunctions[1].arrayOfFunctions[0].W, _ol.x._.x) : [200 x 28 x 28 x 1], [28 x 28 x 1 x *1] -> [200 x *1]
Validating --> model.arrayOfFunctions[1].arrayOfFunctions[0].b = LearnableParameter() :  -> [200]
Validating --> ol.x._.x = Plus (ol.x._.x.PlusArgs[0], model.arrayOfFunctions[1].arrayOfFunctions[0].b) : [200 x *1], [200] -> [200 x *1]
Validating --> ol.x = RectifiedLinear (ol.x._.x) : [200 x *1] -> [200 x *1]
Validating --> ol.PlusArgs[0] = Times (model.arrayOfFunctions[3].W, ol.x) : [10 x 200], [200 x *1] -> [10 x *1]
Validating --> model.arrayOfFunctions[3].b = LearnableParameter() :  -> [10]
Validating --> ol = Plus (ol.PlusArgs[0], model.arrayOfFunctions[3].b) : [10 x *1], [10] -> [10 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol) : [10 x *1], [10 x *1] -> [1]
Validating --> errs = ClassificationError (labels, ol) : [10 x *1], [10 x *1] -> [1]

Validating network. 8 nodes to process in pass 2.


Validating network, final pass.




Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 15 matrices, 0 are shared as 0, and 15 are not shared.


09/22/2016 21:57:16: Minibatch[1-10]: errs = 2.330% * 10000; ce = 0.07817033 * 10000
09/22/2016 21:57:16: Final Results: Minibatch[1-10]: errs = 2.330% * 10000; ce = 0.07817033 * 10000; perplexity = 1.08130682

09/22/2016 21:57:16: Action "test" complete.

09/22/2016 21:57:16: __COMPLETED__