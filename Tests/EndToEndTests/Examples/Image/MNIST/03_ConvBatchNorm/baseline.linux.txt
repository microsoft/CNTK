=== Running /home/mahilleb/CNTK/build/gpu/release/bin/cntk configFile=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.cntk currentDirectory=/home/mahilleb/CNTK/Examples/Image/MNIST/Data RunDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu DataDir=/home/mahilleb/CNTK/Examples/Image/MNIST/Data ConfigDir=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config OutputDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu DeviceId=0 timestamping=true train=[reader=[randomize=none]] imageLayout="cudnn"
-------------------------------------------------------------------
Build info: 

		Built time: Apr  6 2016 15:52:46
		Last modified date: Tue Apr  5 14:19:05 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.0
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: mahilleb/MNISTLinux
		Build SHA1: ad5c8cd8002553a87d462a9a1ddcdabf2c84f519 (modified)
		Built by mahilleb on atleneu04
		Build Path: /home/mahilleb/CNTK
-------------------------------------------------------------------
Changed current directory to /home/mahilleb/CNTK/Examples/Image/MNIST/Data
04/07/2016 14:05:08: -------------------------------------------------------------------
04/07/2016 14:05:08: Build info: 

04/07/2016 14:05:08: 		Built time: Apr  6 2016 15:52:46
04/07/2016 14:05:08: 		Last modified date: Tue Apr  5 14:19:05 2016
04/07/2016 14:05:08: 		Build type: release
04/07/2016 14:05:08: 		Build target: GPU
04/07/2016 14:05:08: 		With 1bit-SGD: no
04/07/2016 14:05:08: 		Math lib: acml
04/07/2016 14:05:08: 		CUDA_PATH: /usr/local/cuda-7.0
04/07/2016 14:05:08: 		CUB_PATH: /usr/local/cub-1.4.1
04/07/2016 14:05:08: 		CUDNN_PATH: /usr/local/cudnn-4.0
04/07/2016 14:05:08: 		Build Branch: mahilleb/MNISTLinux
04/07/2016 14:05:08: 		Build SHA1: ad5c8cd8002553a87d462a9a1ddcdabf2c84f519 (modified)
04/07/2016 14:05:08: 		Built by mahilleb on atleneu04
04/07/2016 14:05:08: 		Build Path: /home/mahilleb/CNTK
04/07/2016 14:05:08: -------------------------------------------------------------------

04/07/2016 14:05:08: Running on localhost at 2016/04/07 14:05:08
04/07/2016 14:05:08: Command line: 
/home/mahilleb/CNTK/build/gpu/release/bin/cntk  configFile=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.cntk  currentDirectory=/home/mahilleb/CNTK/Examples/Image/MNIST/Data  RunDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu  DataDir=/home/mahilleb/CNTK/Examples/Image/MNIST/Data  ConfigDir=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config  OutputDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu  DeviceId=0  timestamping=true  train=[reader=[randomize=none]]  imageLayout="cudnn"



04/07/2016 14:05:08: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
04/07/2016 14:05:08: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = 0
imageLayout = "cudnn"
command = train:test
precision = "float"
modelPath = "$ModelDir$/03_ConvBatchNorm"
ndlMacros = "$ConfigDir$/Macros.ndl"
traceLevel=1
numMBsToShowResult=500
initOnCPUOnly=true
train = [
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/03_ConvBatchNorm.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.5:0.1
        momentumPerMB = 0.9
        maxEpochs = 2
        batchNormalizationBlendTimeConstant=0:1#INF
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/Train-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "$DataDir$/labelsmap.txt"
        ]
    ]    
]
test = [
    action = "test"
    minibatchSize = 32
    modelPath=$ModelDir$/03_ConvBatchNorm
    NDLNetworkBuilder = [
        networkDescription = "$ConfigDir$/03_ConvBatchNorm.ndl"
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/Test-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "$DataDir$/labelsmap.txt"
        ]
    ]
]
currentDirectory=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
RunDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
DataDir=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
ConfigDir=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
DeviceId=0
timestamping=true
train=[reader=[randomize=none]]
imageLayout="cudnn"

04/07/2016 14:05:08: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

04/07/2016 14:05:08: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
04/07/2016 14:05:08: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models"
deviceId = 0
imageLayout = "cudnn"
command = train:test
precision = "float"
modelPath = "/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm"
ndlMacros = "/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/Macros.ndl"
traceLevel=1
numMBsToShowResult=500
initOnCPUOnly=true
train = [
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.5:0.1
        momentumPerMB = 0.9
        maxEpochs = 2
        batchNormalizationBlendTimeConstant=0:1#INF
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/Train-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/labelsmap.txt"
        ]
    ]    
]
test = [
    action = "test"
    minibatchSize = 32
    modelPath=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm
    NDLNetworkBuilder = [
        networkDescription = "/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.ndl"
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/Test-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/labelsmap.txt"
        ]
    ]
]
currentDirectory=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
RunDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
DataDir=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
ConfigDir=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config
OutputDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
DeviceId=0
timestamping=true
train=[reader=[randomize=none]]
imageLayout="cudnn"

04/07/2016 14:05:08: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

04/07/2016 14:05:08: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: 03_ConvBatchNorm.cntk:command=train:test
configparameters: 03_ConvBatchNorm.cntk:ConfigDir=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config
configparameters: 03_ConvBatchNorm.cntk:currentDirectory=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
configparameters: 03_ConvBatchNorm.cntk:DataDir=/home/mahilleb/CNTK/Examples/Image/MNIST/Data
configparameters: 03_ConvBatchNorm.cntk:deviceId=0
configparameters: 03_ConvBatchNorm.cntk:imageLayout=cudnn
configparameters: 03_ConvBatchNorm.cntk:initOnCPUOnly=true
configparameters: 03_ConvBatchNorm.cntk:ModelDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models
configparameters: 03_ConvBatchNorm.cntk:modelPath=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm
configparameters: 03_ConvBatchNorm.cntk:ndlMacros=/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/Macros.ndl
configparameters: 03_ConvBatchNorm.cntk:numMBsToShowResult=500
configparameters: 03_ConvBatchNorm.cntk:OutputDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
configparameters: 03_ConvBatchNorm.cntk:precision=float
configparameters: 03_ConvBatchNorm.cntk:RootDir=..
configparameters: 03_ConvBatchNorm.cntk:RunDir=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu
configparameters: 03_ConvBatchNorm.cntk:test=[
    action = "test"
    minibatchSize = 32
    modelPath=/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm
    NDLNetworkBuilder = [
        networkDescription = "/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.ndl"
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/Test-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/labelsmap.txt"
        ]
    ]
]

configparameters: 03_ConvBatchNorm.cntk:timestamping=true
configparameters: 03_ConvBatchNorm.cntk:traceLevel=1
configparameters: 03_ConvBatchNorm.cntk:train=[
    action = "train"
    NDLNetworkBuilder = [
        networkDescription = "/home/mahilleb/CNTK/Tests/EndToEndTests/Examples/Image/MNIST/03_ConvBatchNorm/../../../../../../Examples/Image/MNIST/Config/03_ConvBatchNorm.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.5:0.1
        momentumPerMB = 0.9
        maxEpochs = 2
        batchNormalizationBlendTimeConstant=0:1#INF
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/Train-28x28.txt"
        features = [
            dim = 784
            start = 1
        ]
        labels = [
            dim = 1
            start = 0
            labelDim = 10
            labelMappingFile = "/home/mahilleb/CNTK/Examples/Image/MNIST/Data/labelsmap.txt"
        ]
    ]    
] [reader=[randomize=none]]

04/07/2016 14:05:08: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
04/07/2016 14:05:08: Commands: train test
04/07/2016 14:05:08: Precision = "float"
04/07/2016 14:05:08: CNTKModelPath: /tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm
04/07/2016 14:05:08: CNTKCommandTrainInfo: train : 2
04/07/2016 14:05:08: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 2

04/07/2016 14:05:08: ##############################################################################
04/07/2016 14:05:08: #                                                                            #
04/07/2016 14:05:08: # Action "train"                                                             #
04/07/2016 14:05:08: #                                                                            #
04/07/2016 14:05:08: ##############################################################################

04/07/2016 14:05:08: CNTKCommandTrainBegin: train
NDLBuilder Using GPU 0
Reading UCI file /home/mahilleb/CNTK/Examples/Image/MNIST/Data/Train-28x28.txt

04/07/2016 14:05:08: Creating virgin network.

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = ErrorPrediction()
	ol.z = Plus()

Validating network. 36 nodes to process in pass 1.


h1.t Times operation: For legacy compatibility, the sample layout of left input (h1.W LearnableParameter operation) was patched to [128 x 7 x 7 x 32] (from [128 x 1568])

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.c.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.c.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *] -> [28 x 28 x 1 x *]

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Validating --> conv1.c.c.c = Convolution (conv1.c.W, featScaled) : [16 x 25], [28 x 28 x 1 x *] -> [28 x 28 x 16 x *]
Validating --> conv1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.isd = LearnableParameter() :  -> [16 x 1]

Using CNTK batch normalization engine.
Validating --> conv1.c.c.y = BatchNormalization (conv1.c.c.c, conv1.c.c.sc, conv1.c.c.b, conv1.c.c.m, conv1.c.c.isd) : [28 x 28 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [28 x 28 x 16 x *]
Validating --> conv1.y = RectifiedLinear (conv1.c.c.y) : [28 x 28 x 16 x *] -> [28 x 28 x 16 x *]

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Validating --> pool1 = MaxPooling (conv1.y) : [28 x 28 x 16 x *] -> [14 x 14 x 16 x *]

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 1 x 1 x 32, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Validating --> conv2.c.c.c = Convolution (conv2.c.W, pool1) : [32 x 400], [14 x 14 x 16 x *] -> [14 x 14 x 32 x *]
Validating --> conv2.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.isd = LearnableParameter() :  -> [32 x 1]

Using CNTK batch normalization engine.
Validating --> conv2.c.c.y = BatchNormalization (conv2.c.c.c, conv2.c.c.sc, conv2.c.c.b, conv2.c.c.m, conv2.c.c.isd) : [14 x 14 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [14 x 14 x 32 x *]
Validating --> conv2.y = RectifiedLinear (conv2.c.c.y) : [14 x 14 x 32 x *] -> [14 x 14 x 32 x *]

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Validating --> pool2 = MaxPooling (conv2.y) : [14 x 14 x 32 x *] -> [7 x 7 x 32 x *]
Validating --> h1.t = Times (h1.W, pool2) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *] -> [128 x *]
Validating --> h1.sc = LearnableParameter() :  -> [128 x 1]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.m = LearnableParameter() :  -> [128 x 1]
Validating --> h1.isd = LearnableParameter() :  -> [128 x 1]

Using CNTK batch normalization engine.
Validating --> h1.bn = BatchNormalization (h1.t, h1.sc, h1.b, h1.m, h1.isd) : [128 x *], [128 x 1], [128 x 1], [128 x 1], [128 x 1] -> [128 x *]
Validating --> h1.y = RectifiedLinear (h1.bn) : [128 x *] -> [128 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x *] -> [10 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> err = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]


20 out of 36 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

04/07/2016 14:05:09: Created model with 36 nodes on GPU 0.

04/07/2016 14:05:09: Training criterion node(s):
04/07/2016 14:05:09: 	ce = CrossEntropyWithSoftmax

04/07/2016 14:05:09: Evaluation criterion node(s):

04/07/2016 14:05:09: 	err = ErrorPrediction


Allocating matrices for forward and/or backward propagation.
04/07/2016 14:05:09: No PreCompute nodes found, skipping PreCompute step.

04/07/2016 14:05:09: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 303.7 samples
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 60000 records found.
starting epoch 0 at record count 0, and file position 0
already there from last epoch

04/07/2016 14:05:09: Starting minibatch loop.
04/07/2016 14:05:11:  Epoch[ 1 of 2]-Minibatch[   1- 500, 26.67%]: SamplesSeen = 16000; TrainLossPerSample =  0.18024605; EvalErr[0]PerSample = 0.05475000; TotalTime = 1.3570s; SamplesPerSecond = 11790.6
04/07/2016 14:05:12:  Epoch[ 1 of 2]-Minibatch[ 501-1000, 53.33%]: SamplesSeen = 16000; TrainLossPerSample =  0.07408237; EvalErr[0]PerSample = 0.02306250; TotalTime = 1.1839s; SamplesPerSecond = 13515.0
04/07/2016 14:05:13:  Epoch[ 1 of 2]-Minibatch[1001-1500, 80.00%]: SamplesSeen = 16000; TrainLossPerSample =  0.07168071; EvalErr[0]PerSample = 0.02187500; TotalTime = 1.1835s; SamplesPerSecond = 13519.7
04/07/2016 14:05:14: Finished Epoch[ 1 of 2]: [Training Set] TrainLossPerSample = 0.09788157; TotalSamplesSeen = 60000; EvalErrPerSample = 0.029816667; AvgLearningRatePerSample = 0.015625; EpochTime=5.13037
04/07/2016 14:05:14: SGD: Saving checkpoint model '/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm.1'
Setting batch normalization blend time constant to inf.

04/07/2016 14:05:14: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.900000  momentum as time constant = 303.7 samples
starting epoch 1 at record count 60000, and file position 0
already there from last epoch

04/07/2016 14:05:14: Starting minibatch loop.
04/07/2016 14:05:15:  Epoch[ 2 of 2]-Minibatch[   1- 500, 26.67%]: SamplesSeen = 16000; TrainLossPerSample =  0.02897029; EvalErr[0]PerSample = 0.00837500; TotalTime = 1.1826s; SamplesPerSecond = 13530.0
04/07/2016 14:05:16:  Epoch[ 2 of 2]-Minibatch[ 501-1000, 53.33%]: SamplesSeen = 16000; TrainLossPerSample =  0.02011888; EvalErr[0]PerSample = 0.00631250; TotalTime = 1.1831s; SamplesPerSecond = 13523.8
04/07/2016 14:05:18:  Epoch[ 2 of 2]-Minibatch[1001-1500, 80.00%]: SamplesSeen = 16000; TrainLossPerSample =  0.02228251; EvalErr[0]PerSample = 0.00625000; TotalTime = 1.1831s; SamplesPerSecond = 13523.5
04/07/2016 14:05:18: Finished Epoch[ 2 of 2]: [Training Set] TrainLossPerSample = 0.021928078; TotalSamplesSeen = 120000; EvalErrPerSample = 0.0064333333; AvgLearningRatePerSample = 0.003125; EpochTime=4.43763
04/07/2016 14:05:18: SGD: Saving checkpoint model '/tmp/cntk-test-20160407140437.931634/Examples/Image/MNIST_03_ConvBatchNorm@release_gpu/Models/03_ConvBatchNorm'
04/07/2016 14:05:18: CNTKCommandTrainEnd: train

04/07/2016 14:05:18: Action "train" complete.


04/07/2016 14:05:18: ##############################################################################
04/07/2016 14:05:18: #                                                                            #
04/07/2016 14:05:18: # Action "test"                                                              #
04/07/2016 14:05:18: #                                                                            #
04/07/2016 14:05:18: ##############################################################################

Reading UCI file /home/mahilleb/CNTK/Examples/Image/MNIST/Data/Test-28x28.txt

Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	err = ErrorPrediction()
	ol.z = Plus()

Validating network. 36 nodes to process in pass 1.


Validating network. 16 nodes to process in pass 2.


Validating network, final pass.

Validating --> labels = InputValue() :  -> [10 x *]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.c.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.c.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *] -> [28 x 28 x 1 x *]

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Validating --> conv1.c.c.c = Convolution (conv1.c.W, featScaled) : [16 x 25], [28 x 28 x 1 x *] -> [28 x 28 x 16 x *]
Validating --> conv1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.isd = LearnableParameter() :  -> [16 x 1]

Using CNTK batch normalization engine.
Validating --> conv1.c.c.y = BatchNormalization (conv1.c.c.c, conv1.c.c.sc, conv1.c.c.b, conv1.c.c.m, conv1.c.c.isd) : [28 x 28 x 16 x *], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [28 x 28 x 16 x *]
Validating --> conv1.y = RectifiedLinear (conv1.c.c.y) : [28 x 28 x 16 x *] -> [28 x 28 x 16 x *]

Using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Validating --> pool1 = MaxPooling (conv1.y) : [28 x 28 x 16 x *] -> [14 x 14 x 16 x *]

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 1 x 1 x 32, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Validating --> conv2.c.c.c = Convolution (conv2.c.W, pool1) : [32 x 400], [14 x 14 x 16 x *] -> [14 x 14 x 32 x *]
Validating --> conv2.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> conv2.c.c.isd = LearnableParameter() :  -> [32 x 1]

Using CNTK batch normalization engine.
Validating --> conv2.c.c.y = BatchNormalization (conv2.c.c.c, conv2.c.c.sc, conv2.c.c.b, conv2.c.c.m, conv2.c.c.isd) : [14 x 14 x 32 x *], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [14 x 14 x 32 x *]
Validating --> conv2.y = RectifiedLinear (conv2.c.c.y) : [14 x 14 x 32 x *] -> [14 x 14 x 32 x *]

Using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Validating --> pool2 = MaxPooling (conv2.y) : [14 x 14 x 32 x *] -> [7 x 7 x 32 x *]
Validating --> h1.t = Times (h1.W, pool2) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *] -> [128 x *]
Validating --> h1.sc = LearnableParameter() :  -> [128 x 1]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.m = LearnableParameter() :  -> [128 x 1]
Validating --> h1.isd = LearnableParameter() :  -> [128 x 1]

Using CNTK batch normalization engine.
Validating --> h1.bn = BatchNormalization (h1.t, h1.sc, h1.b, h1.m, h1.isd) : [128 x *], [128 x 1], [128 x 1], [128 x 1], [128 x 1] -> [128 x *]
Validating --> h1.y = RectifiedLinear (h1.bn) : [128 x *] -> [128 x *]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x *] -> [10 x *]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x *], [10 x 1] -> [10 x 1 x *]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]
Validating --> err = ErrorPrediction (labels, ol.z) : [10 x *], [10 x 1 x *] -> [1]


20 out of 36 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 10000 records found.
starting epoch 0 at record count 0, and file position 0
already there from last epoch
RandomOrdering: 2036 retries for 10000 elements (20.4%) to ensure window condition
RandomOrdering: recached sequence for seed 0: 2009, 1524, ...
Minibatch[1-313]: SamplesSeen = 10000    err: ErrorPrediction/Sample = 0.009    ce: CrossEntropyWithSoftmax/Sample = 0.026436486    
Final Results: Minibatch[1-313]: SamplesSeen = 10000    err: ErrorPrediction/Sample = 0.009    ce: CrossEntropyWithSoftmax/Sample = 0.026436486    Perplexity = 1.026789    

04/07/2016 14:05:19: Action "test" complete.

04/07/2016 14:05:19: __COMPLETED__