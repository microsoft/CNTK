+ . /home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/run-test-common
++ BinaryPath=/home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk
++ '[' cpu == cpu ']'
++ CNTKDeviceId=-1
++ LogFileName=
++ ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple
++ RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
++ DataDir=/home/eldak/repo/cntk_github/CNTK/Examples/Image/Miscellaneous/CIFAR-10
++ OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
++ MPIMode=0
++ MPIArgs=
++ DeleteExistingModels=1
++ DeleteModelsAfterTest=1
++ printHardwareInfo
+++ cat /proc/cpuinfo
+++ grep -m 1 'model name'
+++ cut -d : -f 2-
+++ tr -s ' '
+++ cut -c 2-
++ cpuName='Intel(R) Xeon(R) CPU E5-1650 0 @ 3.20GHz'
+++ cat /proc/meminfo
+++ grep MemTotal
+++ cut -d : -f 2-
+++ tr -s ' '
+++ cut -c 2-
++ totalMemory='32874316 kB'
+++ nproc
++ nproc=12
++ echo 'CPU info:'
CPU info:
++ echo '    CPU Model Name: Intel(R) Xeon(R) CPU E5-1650 0 @ 3.20GHz'
    CPU Model Name: Intel(R) Xeon(R) CPU E5-1650 0 @ 3.20GHz
++ echo '    Hardware threads: 12'
    Hardware threads: 12
++ echo '    Total Memory: 32874316 kB'
    Total Memory: 32874316 kB
++ echo -------------------------------------------------------------------
-------------------------------------------------------------------
+ ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10
+ echo Looking for data in: /home/eldak/repo/cntk_github/CNTK/Examples/Image/Miscellaneous/CIFAR-10
Looking for data in: /home/eldak/repo/cntk_github/CNTK/Examples/Image/Miscellaneous/CIFAR-10
+ [[ ! -d /home/eldak/repo/cntk_github/CNTK/Examples/Image/Miscellaneous/CIFAR-10 ]]
+ [[ ! -e /home/eldak/repo/cntk_github/CNTK/Examples/Image/Miscellaneous/CIFAR-10/cifar-10-batches-py ]]
+ '[' '' == Windows_NT ']'
+ ExternalDataSourceDir=/home/mahilleb/Data/CNTKTestData
+ echo Looking for data in: /home/mahilleb/Data/CNTKTestData
Looking for data in: /home/mahilleb/Data/CNTKTestData
+ [[ -d /home/mahilleb/Data/CNTKTestData ]]
+ DataSourceDir=/home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0
+ echo 'Copying test data to local directory'
Copying test data to local directory
+ CopyDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ mkdir /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ cp /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/CIFAR-10_mean.xml /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ cp /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/data.zip /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ cp /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/test_map.txt /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/test_regrLabels.txt /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/train_map.txt /home/mahilleb/Data/CNTKTestData/Image/CIFAR/v0/cifar-10-batches-py/train_regrLabels.txt /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ Copied=1
+ echo 'Done copying data'
Done copying data
+ DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
+ echo 'Starting cntk run'
Starting cntk run
+ cntkrun 06_RegressionSimple.cntk '[command=TrainConvNet:Test] forceDeterministicAlgorithms=true stderr=-'
+ configFileName=06_RegressionSimple.cntk
+ additionalCNTKArgs='[command=TrainConvNet:Test] forceDeterministicAlgorithms=true stderr=-'
+ '[' '' == Windows_NT ']'
+ CNTKArgs='configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DeviceId=-1 timestamping=true [command=TrainConvNet:Test] forceDeterministicAlgorithms=true stderr=-'
+ '[' '' '!=' '' ']'
+ modelsDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models
+ [[ 1 == 1 ]]
+ '[' -d /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models ']'
+ mkdir -p /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models
+ [[ 0 == 0 ]]
+ run /home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DeviceId=-1 timestamping=true '[command=TrainConvNet:Test]' forceDeterministicAlgorithms=true stderr=-
+ cmd=/home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk
+ shift
+ '[' '' == 1 ']'
+ echo === Running /home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DeviceId=-1 timestamping=true '[command=TrainConvNet:Test]' forceDeterministicAlgorithms=true stderr=-
=== Running /home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DeviceId=-1 timestamping=true [command=TrainConvNet:Test] forceDeterministicAlgorithms=true stderr=-
+ /home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10 OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu DeviceId=-1 timestamping=true '[command=TrainConvNet:Test]' forceDeterministicAlgorithms=true stderr=-
-------------------------------------------------------------------
Build info: 

		Built time: Sep  6 2016 12:51:49
		Last modified date: Tue Sep  6 12:03:39 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-5.0
		Build Branch: eldak/deterministicCPU2
		Build SHA1: 269b5c0ea6ee277a690890afbcd20d32eadeacd9 (modified)
		Built by eldak on atleneu04
		Build Path: /home/eldak/repo/cntk_github/CNTK
-------------------------------------------------------------------
Changed current directory to /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
09/06/2016 13:15:47: Redirecting stderr to file -_TrainConvNet_Test.log
09/06/2016 13:15:47: -------------------------------------------------------------------
09/06/2016 13:15:47: Build info: 

09/06/2016 13:15:47: 		Built time: Sep  6 2016 12:51:49
09/06/2016 13:15:47: 		Last modified date: Tue Sep  6 12:03:39 2016
09/06/2016 13:15:47: 		Build type: release
09/06/2016 13:15:47: 		Build target: GPU
09/06/2016 13:15:47: 		With 1bit-SGD: no
09/06/2016 13:15:47: 		Math lib: mkl
09/06/2016 13:15:47: 		CUDA_PATH: /usr/local/cuda-7.5
09/06/2016 13:15:47: 		CUB_PATH: /usr/local/cub-1.4.1
09/06/2016 13:15:47: 		CUDNN_PATH: /usr/local/cudnn-5.0
09/06/2016 13:15:47: 		Build Branch: eldak/deterministicCPU2
09/06/2016 13:15:47: 		Build SHA1: 269b5c0ea6ee277a690890afbcd20d32eadeacd9 (modified)
09/06/2016 13:15:47: 		Built by eldak on atleneu04
09/06/2016 13:15:47: 		Build Path: /home/eldak/repo/cntk_github/CNTK
09/06/2016 13:15:47: -------------------------------------------------------------------
09/06/2016 13:15:48: -------------------------------------------------------------------
09/06/2016 13:15:48: GPU info:

09/06/2016 13:15:48: 		Device[0]: cores = 1536; computeCapability = 5.2; type = "GeForce GTX 960"; memory = 2045 MB
09/06/2016 13:15:48: -------------------------------------------------------------------

09/06/2016 13:15:48: Running on localhost at 2016/09/06 13:15:48
09/06/2016 13:15:48: Command line: 
/home/eldak/repo/cntk_github/CNTK/build/release/bin/cntk  configFile=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple.cntk  currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu  RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu  DataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu  ConfigDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10  OutputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu  DeviceId=-1  timestamping=true  [command=TrainConvNet:Test]  forceDeterministicAlgorithms=true  stderr=-


Configuration After Processing and Variable Resolution:

configparameters: 06_RegressionSimple.cntk:command=TrainConvNet:Test
configparameters: 06_RegressionSimple.cntk:configDir=/home/eldak/repo/cntk_github/CNTK/Tests/EndToEndTests/Examples/Image/Miscellaneous/CIFAR-10/06_RegressionSimple/../../../../../../../Examples/Image/Miscellaneous/CIFAR-10
configparameters: 06_RegressionSimple.cntk:currentDirectory=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
configparameters: 06_RegressionSimple.cntk:dataDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
configparameters: 06_RegressionSimple.cntk:deviceId=-1
configparameters: 06_RegressionSimple.cntk:forceDeterministicAlgorithms=true
configparameters: 06_RegressionSimple.cntk:makeMode=false
configparameters: 06_RegressionSimple.cntk:modelDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models
configparameters: 06_RegressionSimple.cntk:modelPath=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models/06_RegressionSimple.cmf
configparameters: 06_RegressionSimple.cntk:outputDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
configparameters: 06_RegressionSimple.cntk:rootDir=.
configparameters: 06_RegressionSimple.cntk:RunDir=/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu
configparameters: 06_RegressionSimple.cntk:stderr=-
configparameters: 06_RegressionSimple.cntk:Test={
    action = "test"
    minibatchSize = 512
    outputNodeNames = (ol, regrLabels, rmse)
    outputPath = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/06_RegressionSimple"
    reader = {
        verbosity = 0 ; randomize = false
        deserializers = ({
            type = "ImageDeserializer" ; module = "ImageReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/test_map.txt"
            input = {
                features = { transforms = (
                    { type = "Scale" ; width = 32 ; height = 32 ; channels = 3 ; interpolations = "linear" } :
                    { type = "Transpose" }
                )}
                ignored = { labelDim = 10 }
            }
        } : {
            type = "CNTKTextFormatDeserializer" ; module = "CNTKTextFormatReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/test_regrLabels.txt"
            input = {
                regrLabels = { dim = 3 ; format = "dense" }
            }
        })
    }
}

configparameters: 06_RegressionSimple.cntk:timestamping=true
configparameters: 06_RegressionSimple.cntk:traceLevel=1
configparameters: 06_RegressionSimple.cntk:TrainConvNet={
    action = "train"
    BrainScriptNetworkBuilder = [
        imageShape = 32:32:3
        featScale = Constant(1/256)
        labelDim = 3
        model (features) = {
            featNorm = Scale(features, featScale)
            h1 = LinearLayer {100,      init="gaussian", initValueScale=1.5} (featNorm)
            ol = LinearLayer {labelDim, init="gaussian", initValueScale=1.5} (h1)
        }.ol
        features = Input {imageShape}
        regrLabels = Input {labelDim}
        ol = model (features)
        sqerr = SquareError (regrLabels, ol)
        rmse = Sqrt (Constant(1/labelDim).* sqerr)
        featureNodes    = (features)
        labelNodes      = (regrLabels)
        criterionNodes  = (rmse)
        evaluationNodes = (rmse)
        OutputNodes     = (ol)
    ]
    SGD = {
        epochSize = 0
        maxEpochs = 2
        minibatchSize = 128
        learningRatesPerSample = 0.0005
        momentumAsTimeConstant = 1024
        firstMBsToShowResult = 5 ; numMBsToShowResult = 50
    }
    reader = {
        verbosity = 0 ; randomize = true
        deserializers = ({
            type = "ImageDeserializer" ; module = "ImageReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/train_map.txt"
            input = {
                features = { transforms = (
                    { type = "Scale" ; width = 32 ; height = 32 ; channels = 3 ; interpolations = "linear" } :
                    { type = "Transpose" }
                )}
                ignored = { labelDim = 10 }
            }
        } : {
            type = "CNTKTextFormatDeserializer" ; module = "CNTKTextFormatReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/train_regrLabels.txt"
            input = {
                regrLabels = { dim = 3 ; format = "dense" }
            }
        })
    }
}

configparameters: 06_RegressionSimple.cntk:Write={
    action = "write"
    minibatchSize = 1
    outputNodeNames = (ol, regrLabels, rmse)
    outputPath = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/06_RegressionSimple"
    reader = {
        verbosity = 0 ; randomize = false
        deserializers = ({
            type = "ImageDeserializer" ; module = "ImageReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/test_map.txt"
            input = {
                features = { transforms = (
                    { type = "Scale" ; width = 32 ; height = 32 ; channels = 3 ; interpolations = "linear" } :
                    { type = "Transpose" }
                )}
                ignored = { labelDim = 10 }
            }
        } : {
            type = "CNTKTextFormatDeserializer" ; module = "CNTKTextFormatReader"
            file = "/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py/test_regrLabels.txt"
            input = {
                regrLabels = { dim = 3 ; format = "dense" }
            }
        })
    }
}

09/06/2016 13:15:48: Commands: TrainConvNet Test
09/06/2016 13:15:48: Precision = "float"
09/06/2016 13:15:48: forceDeterministcAlgorithms flag is specified. Using 1 CPU thread.
09/06/2016 13:15:48: CNTKModelPath: /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models/06_RegressionSimple.cmf
09/06/2016 13:15:48: CNTKCommandTrainInfo: TrainConvNet : 2
09/06/2016 13:15:48: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 2

09/06/2016 13:15:48: ##############################################################################
09/06/2016 13:15:48: #                                                                            #
09/06/2016 13:15:48: # Action "train"                                                             #
09/06/2016 13:15:48: #                                                                            #
09/06/2016 13:15:48: ##############################################################################

09/06/2016 13:15:48: CNTKCommandTrainBegin: TrainConvNet

09/06/2016 13:15:48: Creating virgin network.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.333333.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[3 x 0] as gaussian later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializating Parameter[100 x 0] as gaussian later when dimensions are fully known.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[1 x 1] <- 0.003906.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[100] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[100] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[3] <- 0.000000.
Node '<placeholder>' (LearnableParameter operation): Initializing Parameter[3] <- 0.000000.

Post-processing network...

1 roots:
	rmse = Sqrt()

Validating network. 16 nodes to process in pass 1.

Validating --> rmse.z.ElementTimesArgs[0] = LearnableParameter() :  -> [1 x 1]
Validating --> regrLabels = InputValue() :  -> [3 x *]
Validating --> ol.ol.W = LearnableParameter() :  -> [3 x 0]
Validating --> ol.h1.W = LearnableParameter() :  -> [100 x 0]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> ol.featNorm = ElementTimes (features, featScale) : [32 x 32 x 3 x *], [1 x 1] -> [32 x 32 x 3 x *]
Node 'ol.h1.W' (LearnableParameter operation) operation: Tensor shape was inferred as [100 x 32 x 32 x 3].
Node 'ol.h1.W' (LearnableParameter operation): Initializing Parameter[100 x 32 x 32 x 3] <- gaussian(seed=2, init dims=[100 x 3072], range=0.003608*1.500000, onCPU=true).
Validating --> ol.h1.PlusArgs[0] = Times (ol.h1.W, ol.featNorm) : [100 x 32 x 32 x 3], [32 x 32 x 3 x *] -> [100 x *]
Validating --> ol.h1.b = LearnableParameter() :  -> [100]
Validating --> ol.h1 = Plus (ol.h1.PlusArgs[0], ol.h1.b) : [100 x *], [100] -> [100 x *]
Node 'ol.ol.W' (LearnableParameter operation) operation: Tensor shape was inferred as [3 x 100].
Node 'ol.ol.W' (LearnableParameter operation): Initializing Parameter[3 x 100] <- gaussian(seed=1, init dims=[3 x 100], range=0.020000*1.500000, onCPU=true).
Validating --> ol.ol.PlusArgs[0] = Times (ol.ol.W, ol.h1) : [3 x 100], [100 x *] -> [3 x *]
Validating --> ol.ol.b = LearnableParameter() :  -> [3]
Validating --> ol = Plus (ol.ol.PlusArgs[0], ol.ol.b) : [3 x *], [3] -> [3 x *]
Validating --> sqerr = SquareError (regrLabels, ol) : [3 x *], [3 x *] -> [1]
Validating --> rmse.z = ElementTimes (rmse.z.ElementTimesArgs[0], sqerr) : [1 x 1], [1] -> [1 x 1]
Validating --> rmse = Sqrt (rmse.z) : [1 x 1] -> [1 x 1]

Validating network. 8 nodes to process in pass 2.


Validating network, final pass.



9 out of 16 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

09/06/2016 13:15:48: Created model with 16 nodes on CPU.

09/06/2016 13:15:48: Training criterion node(s):
09/06/2016 13:15:48: 	rmse = Sqrt


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 27 matrices, 13 are shared as 6, and 14 are not shared.

	{ ol.h1 : [100 x *]
	  ol.h1.W : [100 x 32 x 32 x 3] (gradient) }
	{ ol.h1.PlusArgs[0] : [100 x *] (gradient)
	  ol.ol.PlusArgs[0] : [3 x *] }
	{ ol : [3 x *]
	  ol.ol.W : [3 x 100] (gradient) }
	{ ol.ol.b : [3] (gradient)
	  sqerr : [1] }
	{ ol.h1.b : [100] (gradient)
	  ol.ol.PlusArgs[0] : [3 x *] (gradient) }
	{ ol : [3 x *] (gradient)
	  ol.h1 : [100 x *] (gradient)
	  rmse.z : [1 x 1] }


09/06/2016 13:15:48: Training 307603 parameters in 4 out of 4 parameter tensors and 11 nodes with gradient:

09/06/2016 13:15:48: 	Node 'ol.h1.W' (LearnableParameter operation) : [100 x 32 x 32 x 3]
09/06/2016 13:15:48: 	Node 'ol.h1.b' (LearnableParameter operation) : [100]
09/06/2016 13:15:48: 	Node 'ol.ol.W' (LearnableParameter operation) : [3 x 100]
09/06/2016 13:15:48: 	Node 'ol.ol.b' (LearnableParameter operation) : [3]

09/06/2016 13:15:48: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

09/06/2016 13:15:48: Starting Epoch 1: learning rate per sample = 0.000500  effective momentum = 0.882497  momentum as time constant = 1024.0 samples

09/06/2016 13:15:48: Starting minibatch loop.
09/06/2016 13:15:48:  Epoch[ 1 of 2]-Minibatch[ -48-   1]: rmse = 0.04111606 * 128; time = 0.3285s; samplesPerSecond = 389.7
09/06/2016 13:15:48:  Epoch[ 1 of 2]-Minibatch[ -47-   2]: rmse = 0.03852100 * 128; time = 0.0158s; samplesPerSecond = 8080.3
09/06/2016 13:15:48:  Epoch[ 1 of 2]-Minibatch[ -46-   3]: rmse = 0.03658416 * 128; time = 0.0141s; samplesPerSecond = 9049.1
09/06/2016 13:15:49:  Epoch[ 1 of 2]-Minibatch[ -45-   4]: rmse = 0.03162909 * 128; time = 0.0136s; samplesPerSecond = 9395.2
09/06/2016 13:15:49:  Epoch[ 1 of 2]-Minibatch[ -44-   5]: rmse = 0.02514125 * 128; time = 0.0138s; samplesPerSecond = 9290.2
09/06/2016 13:15:49:  Epoch[ 1 of 2]-Minibatch[   1-  50]: rmse = 0.00579311 * 5760; time = 0.6011s; samplesPerSecond = 9581.7
09/06/2016 13:15:50:  Epoch[ 1 of 2]-Minibatch[  51- 100]: rmse = 0.00148280 * 6400; time = 0.5907s; samplesPerSecond = 10834.2
09/06/2016 13:15:50:  Epoch[ 1 of 2]-Minibatch[ 101- 150]: rmse = 0.00089954 * 6400; time = 0.5832s; samplesPerSecond = 10974.1
09/06/2016 13:15:51:  Epoch[ 1 of 2]-Minibatch[ 151- 200]: rmse = 0.00063358 * 6400; time = 0.5802s; samplesPerSecond = 11030.4
09/06/2016 13:15:51:  Epoch[ 1 of 2]-Minibatch[ 201- 250]: rmse = 0.00054041 * 6400; time = 0.5825s; samplesPerSecond = 10987.4
09/06/2016 13:15:52:  Epoch[ 1 of 2]-Minibatch[ 251- 300]: rmse = 0.00050838 * 6400; time = 0.5791s; samplesPerSecond = 11052.2
09/06/2016 13:15:53:  Epoch[ 1 of 2]-Minibatch[ 301- 350]: rmse = 0.00048243 * 6400; time = 0.5785s; samplesPerSecond = 11063.1
09/06/2016 13:15:53: Finished Epoch[ 1 of 2]: [Training] rmse = 0.00174299 * 50000; totalSamplesSeen = 50000; learningRatePerSample = 0.00050000002; epochTime=5.03813s
09/06/2016 13:15:53: SGD: Saving checkpoint model '/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models/06_RegressionSimple.cmf.1'

09/06/2016 13:15:53: Starting Epoch 2: learning rate per sample = 0.000500  effective momentum = 0.882497  momentum as time constant = 1024.0 samples

09/06/2016 13:15:53: Starting minibatch loop.
09/06/2016 13:15:53:  Epoch[ 2 of 2]-Minibatch[ -48-   1, 0.29%]: rmse = 0.00048390 * 128; time = 0.0595s; samplesPerSecond = 2152.9
09/06/2016 13:15:53:  Epoch[ 2 of 2]-Minibatch[ -47-   2, 0.57%]: rmse = 0.00081575 * 128; time = 0.0115s; samplesPerSecond = 11083.2
09/06/2016 13:15:53:  Epoch[ 2 of 2]-Minibatch[ -46-   3, 0.86%]: rmse = 0.00051967 * 128; time = 0.0114s; samplesPerSecond = 11225.1
09/06/2016 13:15:53:  Epoch[ 2 of 2]-Minibatch[ -45-   4, 1.14%]: rmse = 0.00109265 * 128; time = 0.0114s; samplesPerSecond = 11203.5
09/06/2016 13:15:53:  Epoch[ 2 of 2]-Minibatch[ -44-   5, 1.43%]: rmse = 0.00086101 * 128; time = 0.0114s; samplesPerSecond = 11236.0
09/06/2016 13:15:54:  Epoch[ 2 of 2]-Minibatch[   1-  50, 14.29%]: rmse = 0.00064108 * 5760; time = 0.5176s; samplesPerSecond = 11127.6
09/06/2016 13:15:54:  Epoch[ 2 of 2]-Minibatch[  51- 100, 28.57%]: rmse = 0.00077196 * 6400; time = 0.5760s; samplesPerSecond = 11111.1
09/06/2016 13:15:55:  Epoch[ 2 of 2]-Minibatch[ 101- 150, 42.86%]: rmse = 0.00079998 * 6400; time = 0.5801s; samplesPerSecond = 11033.0
09/06/2016 13:15:56:  Epoch[ 2 of 2]-Minibatch[ 151- 200, 57.14%]: rmse = 0.00075646 * 6400; time = 0.5854s; samplesPerSecond = 10932.1
09/06/2016 13:15:56:  Epoch[ 2 of 2]-Minibatch[ 201- 250, 71.43%]: rmse = 0.00071374 * 6400; time = 0.5873s; samplesPerSecond = 10897.5
09/06/2016 13:15:57:  Epoch[ 2 of 2]-Minibatch[ 251- 300, 85.71%]: rmse = 0.00064332 * 6400; time = 0.5900s; samplesPerSecond = 10848.0
09/06/2016 13:15:57:  Epoch[ 2 of 2]-Minibatch[ 301- 350, 100.00%]: rmse = 0.00061381 * 6400; time = 0.5889s; samplesPerSecond = 10867.3
09/06/2016 13:15:58: Finished Epoch[ 2 of 2]: [Training] rmse = 0.00069766 * 50000; totalSamplesSeen = 100000; learningRatePerSample = 0.00050000002; epochTime=4.65426s
09/06/2016 13:15:58: SGD: Saving checkpoint model '/tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models/06_RegressionSimple.cmf'
09/06/2016 13:15:58: CNTKCommandTrainEnd: TrainConvNet

09/06/2016 13:15:58: Action "train" complete.


09/06/2016 13:15:58: ##############################################################################
09/06/2016 13:15:58: #                                                                            #
09/06/2016 13:15:58: # Action "test"                                                              #
09/06/2016 13:15:58: #                                                                            #
09/06/2016 13:15:58: ##############################################################################


Post-processing network...

1 roots:
	rmse = Sqrt()

Validating network. 16 nodes to process in pass 1.

Validating --> rmse.z.ElementTimesArgs[0] = LearnableParameter() :  -> [1 x 1]
Validating --> regrLabels = InputValue() :  -> [3 x *1]
Validating --> ol.ol.W = LearnableParameter() :  -> [3 x 100]
Validating --> ol.h1.W = LearnableParameter() :  -> [100 x 32 x 32 x 3]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *1]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> ol.featNorm = ElementTimes (features, featScale) : [32 x 32 x 3 x *1], [1 x 1] -> [32 x 32 x 3 x *1]
Validating --> ol.h1.PlusArgs[0] = Times (ol.h1.W, ol.featNorm) : [100 x 32 x 32 x 3], [32 x 32 x 3 x *1] -> [100 x *1]
Validating --> ol.h1.b = LearnableParameter() :  -> [100]
Validating --> ol.h1 = Plus (ol.h1.PlusArgs[0], ol.h1.b) : [100 x *1], [100] -> [100 x *1]
Validating --> ol.ol.PlusArgs[0] = Times (ol.ol.W, ol.h1) : [3 x 100], [100 x *1] -> [3 x *1]
Validating --> ol.ol.b = LearnableParameter() :  -> [3]
Validating --> ol = Plus (ol.ol.PlusArgs[0], ol.ol.b) : [3 x *1], [3] -> [3 x *1]
Validating --> sqerr = SquareError (regrLabels, ol) : [3 x *1], [3 x *1] -> [1]
Validating --> rmse.z = ElementTimes (rmse.z.ElementTimesArgs[0], sqerr) : [1 x 1], [1] -> [1 x 1]
Validating --> rmse = Sqrt (rmse.z) : [1 x 1] -> [1 x 1]

Validating network. 8 nodes to process in pass 2.


Validating network, final pass.



9 out of 16 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 16 matrices, 0 are shared as 0, and 16 are not shared.


09/06/2016 13:15:59: Minibatch[1-20]: rmse = 0.00107789 * 10000
09/06/2016 13:15:59: Final Results: Minibatch[1-20]: rmse = 0.00107789 * 10000

09/06/2016 13:15:59: Action "test" complete.

09/06/2016 13:15:59: __COMPLETED__
+ return 0
+ local ExitCode=0
+ [[ 1 == 1 ]]
+ '[' -d /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models ']'
+ rm -rf /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/Models
+ return 0
+ ExitCode=0
+ [[ 1 -eq 1 ]]
+ rm -rf /tmp/cntk-test-20160906131547.938087/Examples/Image/Miscellaneous/CIFAR-10_06_RegressionSimple@release_cpu/cifar-10-batches-py
+ exit 0