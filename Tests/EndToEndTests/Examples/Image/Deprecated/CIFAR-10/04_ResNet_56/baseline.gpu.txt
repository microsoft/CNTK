CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3565 @ 3.20GHz
    Hardware threads: 8
    Total Memory: 12580436 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/04_ResNet_56_ndl_deprecated.cntk currentDirectory=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu DataDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56 OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu DeviceId=0 timestamping=true Train=[SGD=[maxEpochs=1]] Train=[SGD=[epochSize=128]] Train=[reader=[randomize=none]] Train=[SGD=[minibatchSize=16]] Test=[minibatchSize=16] stderr=-
CNTK 2.0.beta6.0+ (HEAD 5f1fab, Dec 15 2016 06:29:34) on cntk-muc01 at 2016/12/15 08:29:37

C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/04_ResNet_56_ndl_deprecated.cntk  currentDirectory=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu  DataDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu  DeviceId=0  timestamping=true  Train=[SGD=[maxEpochs=1]]  Train=[SGD=[epochSize=128]]  Train=[reader=[randomize=none]]  Train=[SGD=[minibatchSize=16]]  Test=[minibatchSize=16]  stderr=-
Changed current directory to C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData
12/15/2016 08:29:38: Redirecting stderr to file -_Train_Test.log
12/15/2016 08:29:38: -------------------------------------------------------------------
12/15/2016 08:29:38: Build info: 

12/15/2016 08:29:38: 		Built time: Dec 15 2016 06:29:34
12/15/2016 08:29:38: 		Last modified date: Wed Dec 14 12:53:20 2016
12/15/2016 08:29:38: 		Build type: Release
12/15/2016 08:29:38: 		Build target: GPU
12/15/2016 08:29:38: 		With ASGD: yes
12/15/2016 08:29:38: 		Math lib: mkl
12/15/2016 08:29:38: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0
12/15/2016 08:29:38: 		CUB_PATH: c:\src\cub-1.4.1
12/15/2016 08:29:38: 		CUDNN_PATH: C:\local\cudnn-8.0-windows10-x64-v5.1
12/15/2016 08:29:38: 		Build Branch: HEAD
12/15/2016 08:29:38: 		Build SHA1: 5f1fabfe95e68af0787193f8849159f824d914d5 (modified)
12/15/2016 08:29:38: 		Built by svcphil on liana-08-w
12/15/2016 08:29:38: 		Build Path: C:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
12/15/2016 08:29:38: -------------------------------------------------------------------
12/15/2016 08:29:38: -------------------------------------------------------------------
12/15/2016 08:29:38: GPU info:

12/15/2016 08:29:38: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8192 MB
12/15/2016 08:29:38: -------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: 04_ResNet_56_ndl_deprecated.cntk:command=Train:Test
configparameters: 04_ResNet_56_ndl_deprecated.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56
configparameters: 04_ResNet_56_ndl_deprecated.cntk:currentDirectory=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData
configparameters: 04_ResNet_56_ndl_deprecated.cntk:DataDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData
configparameters: 04_ResNet_56_ndl_deprecated.cntk:deviceId=0
configparameters: 04_ResNet_56_ndl_deprecated.cntk:imageLayout=cudnn
configparameters: 04_ResNet_56_ndl_deprecated.cntk:initOnCPUOnly=true
configparameters: 04_ResNet_56_ndl_deprecated.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu/Models
configparameters: 04_ResNet_56_ndl_deprecated.cntk:ndlMacros=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/../Macros.ndl
configparameters: 04_ResNet_56_ndl_deprecated.cntk:numMBsToShowResult=200
configparameters: 04_ResNet_56_ndl_deprecated.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu
configparameters: 04_ResNet_56_ndl_deprecated.cntk:parallelTrain=false
configparameters: 04_ResNet_56_ndl_deprecated.cntk:precision=float
configparameters: 04_ResNet_56_ndl_deprecated.cntk:prefetch=true
configparameters: 04_ResNet_56_ndl_deprecated.cntk:Proj16to32Filename=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/../16to32.txt
configparameters: 04_ResNet_56_ndl_deprecated.cntk:Proj32to64Filename=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/../32to64.txt
configparameters: 04_ResNet_56_ndl_deprecated.cntk:RootDir=.
configparameters: 04_ResNet_56_ndl_deprecated.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu
configparameters: 04_ResNet_56_ndl_deprecated.cntk:stderr=-
configparameters: 04_ResNet_56_ndl_deprecated.cntk:Test=[
    action="test"
    modelPath="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu/Models/04_ResNet_56"
    minibatchSize=512
    reader=[
        readerType="ImageReader"
        file="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData/test_map.txt"
        randomize="none"
        features=[
            width=32
            height=32
            channels=3
            cropType="center"
            cropRatio=1
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
] [minibatchSize=16]

configparameters: 04_ResNet_56_ndl_deprecated.cntk:timestamping=true
configparameters: 04_ResNet_56_ndl_deprecated.cntk:traceLevel=1
configparameters: 04_ResNet_56_ndl_deprecated.cntk:Train=[
    action="train"
    modelPath="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu/Models/04_ResNet_56"
     NDLNetworkBuilder=[
        networkDescription="C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Image\Deprecated\CIFAR-10\04_ResNet_56/04_ResNet_56.ndl"
    ]
    SGD=[
        epochSize=0
        minibatchSize=128
        learningRatesPerMB=0.1*1:1.0*80:0.1*40:0.01
        momentumPerMB=0.9
        maxEpochs=160
        L2RegWeight=0.0001
        dropoutRate=0
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    reader=[
        readerType="ImageReader"
        file="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData/train_map.txt"
        randomize="auto"
        features=[
            width=32
            height=32
            channels=3
            cropType="random"
            cropRatio=0.8
            jitterType="uniRatio"
            interpolations="linear"
            meanFile="C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu\TestData/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
] [SGD=[maxEpochs=1]] [SGD=[epochSize=128]] [reader=[randomize=none]] [SGD=[minibatchSize=16]]

12/15/2016 08:29:38: Commands: Train Test
12/15/2016 08:29:38: precision = "float"

12/15/2016 08:29:38: ##############################################################################
12/15/2016 08:29:38: #                                                                            #
12/15/2016 08:29:38: # Train command (train action)                                               #
12/15/2016 08:29:38: #                                                                            #
12/15/2016 08:29:38: ##############################################################################

parallelTrain option is not enabled. ParallelTrain config will be ignored.
12/15/2016 08:29:38: 
Creating virgin network.
NDLBuilder Using GPU 0
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetGaussianRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

OutputNodes.t Times operation: For legacy compatibility, the sample layout of left input (OutputNodes.W LearnableParameter operation) was patched to [10 x 1 x 1 x 64] (from [10 x 64])
conv1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 16, Kernel: 3 x 3 x 3, Map: 1 x 1 x 16, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 3 x 3 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 1 x 1 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 3 x 3 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 1 x 1 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
pool: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 1 x 1 x 64, Kernel: 8 x 8 x 1, Map: 1, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
12/15/2016 08:29:41: 
Model has 949 nodes. Using GPU 0.

12/15/2016 08:29:41: Training criterion:   CE = CrossEntropyWithSoftmax
12/15/2016 08:29:41: Evaluation criterion: Err = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 1671 matrices, 880 are shared as 332, and 791 are not shared.

	{ rn1_2.c1.c.W : [16 x 144] (gradient)
	  rn1_2.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_2.p : [32 x 32 x 16 x *] }
	{ rn1_2.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.y : [32 x 32 x 16 x *] }
	{ rn1_2.c2.W : [16 x 144] (gradient)
	  rn1_3.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_2.c2.c.sc : [16 x 1] (gradient)
	  rn1_2.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_1.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_1.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_3.c1.y : [32 x 32 x 16 x *] }
	{ rn1_2.c2.c.b : [16 x 1] (gradient)
	  rn1_3.c2.c.c : [32 x 32 x 16 x *] }
	{ conv1.c.W : [16 x 27] (gradient)
	  rn1_1.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_1.c1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c1.c.W : [16 x 144] (gradient)
	  rn1_1.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_1.p : [32 x 32 x 16 x *] }
	{ rn1_1.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c2.W : [16 x 144] (gradient)
	  rn1_2.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_1.c2.c.sc : [16 x 1] (gradient)
	  rn1_1.p : [32 x 32 x 16 x *] (gradient) }
	{ conv1.c.c.sc : [16 x 1] (gradient)
	  conv1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_2.c1.y : [32 x 32 x 16 x *] }
	{ rn1_1.c2.c.b : [16 x 1] (gradient)
	  rn1_2.c2.c.c : [32 x 32 x 16 x *] }
	{ conv1.c.c.b : [16 x 1] (gradient)
	  rn1_1.c2.c.c : [32 x 32 x 16 x *] }
	{ conv1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  conv1.y : [32 x 32 x 16 x *] }
	{ rn1_5.c2.c.sc : [16 x 1] (gradient)
	  rn1_5.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_7.c1.c.W : [16 x 144] (gradient)
	  rn1_7.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_7.p : [32 x 32 x 16 x *] }
	{ rn1_3.c1.c.W : [16 x 144] (gradient)
	  rn1_3.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_3.p : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.y : [32 x 32 x 16 x *] }
	{ rn1_7.c2.W : [16 x 144] (gradient)
	  rn1_8.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.sc : [16 x 1] (gradient)
	  rn1_7.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_6.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_6.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_8.c1.y : [32 x 32 x 16 x *] }
	{ rn1_7.c2.c.b : [16 x 1] (gradient)
	  rn1_8.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.sc : [16 x 1] (gradient)
	  rn1_4.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_5.c1.c.W : [16 x 144] (gradient)
	  rn1_5.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_5.p : [32 x 32 x 16 x *] }
	{ rn1_5.c2.c.b : [16 x 1] (gradient)
	  rn1_6.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c2.W : [16 x 144] (gradient)
	  rn1_7.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_3.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_3.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_5.c1.y : [32 x 32 x 16 x *] }
	{ rn1_6.c2.c.sc : [16 x 1] (gradient)
	  rn1_6.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_3.c2.c.b : [16 x 1] (gradient)
	  rn1_4.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c1.c.W : [16 x 144] (gradient)
	  rn1_4.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_4.p : [32 x 32 x 16 x *] }
	{ rn1_3.c2.c.sc : [16 x 1] (gradient)
	  rn1_3.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_6.c1.c.W : [16 x 144] (gradient)
	  rn1_6.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_6.p : [32 x 32 x 16 x *] }
	{ rn1_6.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.y : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.y : [32 x 32 x 16 x *] }
	{ rn1_5.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_5.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_7.c1.y : [32 x 32 x 16 x *] }
	{ rn1_3.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_3.y : [32 x 32 x 16 x *] }
	{ rn1_3.c2.W : [16 x 144] (gradient)
	  rn1_4.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c2.c.b : [16 x 1] (gradient)
	  rn1_5.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c2.W : [16 x 144] (gradient)
	  rn1_5.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_2.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_2.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_2.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_4.c1.y : [32 x 32 x 16 x *] }
	{ rn1_5.c2.W : [16 x 144] (gradient)
	  rn1_6.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_6.c2.c.b : [16 x 1] (gradient)
	  rn1_7.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_4.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_4.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_4.y : [32 x 32 x 16 x *] (gradient)
	  rn1_6.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_6.c1.y : [32 x 32 x 16 x *] }
	{ rn1_5.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_5.y : [32 x 32 x 16 x *] }
	{ rn1_10.c2.c.sc : [16 x 1] (gradient)
	  rn1_10.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_10.c2.c.b : [16 x 1] (gradient)
	  rn1_11.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_11.c2.c.sc : [16 x 1] (gradient)
	  rn1_11.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_10.c2.W : [16 x 144] (gradient)
	  rn1_11.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_12.c1.c.W : [16 x 144] (gradient)
	  rn1_12.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_12.p : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.y : [32 x 32 x 16 x *] }
	{ rn1_12.c2.W : [16 x 144] (gradient)
	  rn1_13.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.sc : [16 x 1] (gradient)
	  rn1_12.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_11.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_11.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_11.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_13.c1.y : [32 x 32 x 16 x *] }
	{ rn1_12.c2.c.b : [16 x 1] (gradient)
	  rn1_13.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.c.c : [32 x 32 x 16 x *]
	  rn1_9.c2.W : [16 x 144] (gradient) }
	{ rn1_9.c2.c.sc : [16 x 1] (gradient)
	  rn1_9.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_11.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_11.c1.y : [32 x 32 x 16 x *]
	  rn1_9.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_9.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.y : [32 x 32 x 16 x *] (gradient) }
	{ rn1_11.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_11.y : [32 x 32 x 16 x *] }
	{ rn1_11.c2.W : [16 x 144] (gradient)
	  rn1_12.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_7.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_7.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_7.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_9.c1.y : [32 x 32 x 16 x *] }
	{ rn1_8.c2.W : [16 x 144] (gradient)
	  rn1_9.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_8.c2.c.b : [16 x 1] (gradient)
	  rn1_9.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_11.c1.c.W : [16 x 144] (gradient)
	  rn1_11.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_11.p : [32 x 32 x 16 x *] }
	{ rn1_9.c1.c.W : [16 x 144] (gradient)
	  rn1_9.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_9.p : [32 x 32 x 16 x *] }
	{ rn1_8.c1.c.W : [16 x 144] (gradient)
	  rn1_8.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_8.p : [32 x 32 x 16 x *] }
	{ rn1_8.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.y : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_10.c1.y : [32 x 32 x 16 x *]
	  rn1_8.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_8.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_8.y : [32 x 32 x 16 x *] (gradient) }
	{ rn1_9.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_9.y : [32 x 32 x 16 x *] }
	{ rn1_10.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_10.y : [32 x 32 x 16 x *] }
	{ rn1_8.c2.c.sc : [16 x 1] (gradient)
	  rn1_8.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_10.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_10.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_10.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_12.c1.y : [32 x 32 x 16 x *] }
	{ rn1_11.c2.c.b : [16 x 1] (gradient)
	  rn1_12.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_10.c1.c.W : [16 x 144] (gradient)
	  rn1_10.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_10.p : [32 x 32 x 16 x *] }
	{ rn1_10.c2.c.c : [32 x 32 x 16 x *]
	  rn1_9.c2.c.b : [16 x 1] (gradient) }
	{ rn1_15.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.y : [32 x 32 x 16 x *] }
	{ rn1_16.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.y : [32 x 32 x 16 x *] }
	{ rn1_15.c1.c.W : [16 x 144] (gradient)
	  rn1_15.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_15.p : [32 x 32 x 16 x *] }
	{ rn1_17.c1.c.W : [16 x 144] (gradient)
	  rn1_17.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_17.p : [32 x 32 x 16 x *] }
	{ rn1_17.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.y : [32 x 32 x 16 x *] }
	{ rn1_17.c2.W : [16 x 144] (gradient)
	  rn1_18.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_12.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_12.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_12.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_14.c1.y : [32 x 32 x 16 x *] }
	{ rn1_16.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_16.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_18.c1.y : [32 x 32 x 16 x *] }
	{ rn1_17.c2.c.b : [16 x 1] (gradient)
	  rn1_18.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c1.c.W : [16 x 144] (gradient)
	  rn1_14.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_14.p : [32 x 32 x 16 x *] }
	{ rn1_15.c2.c.sc : [16 x 1] (gradient)
	  rn1_15.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_17.c2.c.sc : [16 x 1] (gradient)
	  rn1_17.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_14.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.y : [32 x 32 x 16 x *] }
	{ rn1_14.c2.W : [16 x 144] (gradient)
	  rn1_15.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_15.c2.W : [16 x 144] (gradient)
	  rn1_16.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_14.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_14.y : [32 x 32 x 16 x *] (gradient)
	  rn1_16.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_16.c1.y : [32 x 32 x 16 x *] }
	{ rn1_16.c1.c.W : [16 x 144] (gradient)
	  rn1_16.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_16.p : [32 x 32 x 16 x *] }
	{ rn1_13.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.y : [32 x 32 x 16 x *] }
	{ rn1_16.c2.c.sc : [16 x 1] (gradient)
	  rn1_16.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_13.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_13.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_13.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_15.c1.y : [32 x 32 x 16 x *] }
	{ rn1_15.c2.c.b : [16 x 1] (gradient)
	  rn1_16.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_16.c2.c.b : [16 x 1] (gradient)
	  rn1_17.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_16.c2.W : [16 x 144] (gradient)
	  rn1_17.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_14.c2.c.sc : [16 x 1] (gradient)
	  rn1_14.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_13.c1.c.W : [16 x 144] (gradient)
	  rn1_13.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_13.p : [32 x 32 x 16 x *] }
	{ rn1_13.c2.c.sc : [16 x 1] (gradient)
	  rn1_13.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_14.c2.c.b : [16 x 1] (gradient)
	  rn1_15.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_13.c2.c.b : [16 x 1] (gradient)
	  rn1_14.c2.c.c : [32 x 32 x 16 x *] }
	{ rn1_13.c2.W : [16 x 144] (gradient)
	  rn1_14.c1.c.c.c : [32 x 32 x 16 x *] }
	{ rn1_15.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_15.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_15.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.c1.c.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_17.c1.y : [32 x 32 x 16 x *] }
	{ rn2_3.c1.c.W : [32 x 288] (gradient)
	  rn2_3.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_3.p : [16 x 16 x 32 x *] }
	{ rn2_3.c2.W : [32 x 288] (gradient)
	  rn2_4.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn1_18.c1.c.W : [16 x 144] (gradient)
	  rn1_18.c2.c.c : [32 x 32 x 16 x *] (gradient)
	  rn1_18.p : [32 x 32 x 16 x *] }
	{ rn1_17.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_17.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_17.y : [32 x 32 x 16 x *] (gradient)
	  rn2_1.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_1.c1.y : [16 x 16 x 32 x *] }
	{ rn2_1.c2.c.b : [32 x 1] (gradient)
	  rn2_1.c_proj.c : [16 x 16 x 32 x *] (gradient)
	  rn2_1.p : [16 x 16 x 32 x *] }
	{ rn2_3.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.y : [16 x 16 x 32 x *] }
	{ rn2_3.c2.c.sc : [32 x 1] (gradient)
	  rn2_3.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_3.c2.c.b : [32 x 1] (gradient)
	  rn2_4.c2.c.c : [16 x 16 x 32 x *] }
	{ rn1_18.c2.W : [16 x 144] (gradient)
	  rn2_1.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_2.c1.c.W : [32 x 288] (gradient)
	  rn2_2.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_2.p : [16 x 16 x 32 x *] }
	{ rn2_2.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_2.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_4.c1.y : [16 x 16 x 32 x *] }
	{ rn2_2.c2.W : [32 x 288] (gradient)
	  rn2_3.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn1_18.c2.c.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.y : [32 x 32 x 16 x *] }
	{ rn2_2.c2.c.sc : [32 x 1] (gradient)
	  rn2_2.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_2.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.y : [16 x 16 x 32 x *] }
	{ rn2_2.c2.c.b : [32 x 1] (gradient)
	  rn2_3.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.y : [16 x 16 x 32 x *] }
	{ rn2_4.c2.W : [32 x 288] (gradient)
	  rn2_5.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_1.c_proj.sc : [32 x 1] (gradient)
	  rn2_1.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_1.c2.c.sc : [32 x 1] (gradient)
	  rn2_1.c_proj.c : [16 x 16 x 32 x *] }
	{ rn2_4.c1.c.W : [32 x 288] (gradient)
	  rn2_4.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_4.p : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.sc : [32 x 1] (gradient)
	  rn2_4.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_1.c2.W : [32 x 288] (gradient)
	  rn2_2.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn1_18.c2.c.sc : [16 x 1] (gradient)
	  rn1_18.p : [32 x 32 x 16 x *] (gradient) }
	{ rn1_18.c2.c.b : [16 x 1] (gradient)
	  rn2_1.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_1.c1.c.W : [32 x 144] (gradient)
	  rn2_1.c2.c.c : [16 x 16 x 32 x *] (gradient) }
	{ rn2_1.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_1.y : [16 x 16 x 32 x *] }
	{ rn1_18.c1.c.c.sc : [16 x 1] (gradient)
	  rn1_18.c1.y : [32 x 32 x 16 x *] (gradient)
	  rn1_18.y : [32 x 32 x 16 x *] (gradient) }
	{ rn2_1.c_proj.y : [16 x 16 x 32 x *] (gradient)
	  rn2_2.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_2.c1.y : [16 x 16 x 32 x *] }
	{ rn2_1.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_1.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_3.c1.y : [16 x 16 x 32 x *] }
	{ rn2_8.c1.c.W : [32 x 288] (gradient)
	  rn2_8.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_8.p : [16 x 16 x 32 x *] }
	{ rn2_3.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_3.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_3.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_5.c1.y : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.y : [16 x 16 x 32 x *] }
	{ rn2_8.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.y : [16 x 16 x 32 x *] }
	{ rn2_8.c2.W : [32 x 288] (gradient)
	  rn2_9.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_8.c2.c.sc : [32 x 1] (gradient)
	  rn2_8.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_8.c2.c.b : [32 x 1] (gradient)
	  rn2_9.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_6.c2.c.b : [32 x 1] (gradient)
	  rn2_7.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.y : [16 x 16 x 32 x *] }
	{ rn2_4.c2.c.b : [32 x 1] (gradient)
	  rn2_5.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_7.c2.W : [32 x 288] (gradient)
	  rn2_8.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.sc : [32 x 1] (gradient)
	  rn2_7.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_7.c1.c.W : [32 x 288] (gradient)
	  rn2_7.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_7.p : [16 x 16 x 32 x *] }
	{ rn2_6.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_6.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_8.c1.y : [16 x 16 x 32 x *] }
	{ rn2_9.c1.c.W : [32 x 288] (gradient)
	  rn2_9.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_9.p : [16 x 16 x 32 x *] }
	{ rn2_9.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.y : [16 x 16 x 32 x *] }
	{ rn2_7.c2.c.b : [32 x 1] (gradient)
	  rn2_8.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_5.c1.c.W : [32 x 288] (gradient)
	  rn2_5.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_5.p : [16 x 16 x 32 x *] }
	{ rn2_6.c2.W : [32 x 288] (gradient)
	  rn2_7.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_4.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_4.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_4.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_6.c1.y : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.c : [16 x 16 x 32 x *]
	  rn2_9.c2.W : [32 x 288] (gradient) }
	{ rn2_9.c2.c.sc : [32 x 1] (gradient)
	  rn2_9.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_6.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_6.y : [16 x 16 x 32 x *] }
	{ rn2_7.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_7.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_9.c1.y : [16 x 16 x 32 x *] }
	{ rn2_6.c2.c.sc : [32 x 1] (gradient)
	  rn2_6.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_5.c2.W : [32 x 288] (gradient)
	  rn2_6.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.b : [32 x 1] (gradient)
	  rn2_6.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_6.c1.c.W : [32 x 288] (gradient)
	  rn2_6.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_6.p : [16 x 16 x 32 x *] }
	{ rn2_5.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_5.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_5.y : [16 x 16 x 32 x *] (gradient)
	  rn2_7.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_7.c1.y : [16 x 16 x 32 x *] }
	{ rn2_5.c2.c.sc : [32 x 1] (gradient)
	  rn2_5.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_13.c1.c.W : [32 x 288] (gradient)
	  rn2_13.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_13.p : [16 x 16 x 32 x *] }
	{ rn2_13.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.y : [16 x 16 x 32 x *] }
	{ rn2_12.c2.W : [32 x 288] (gradient)
	  rn2_13.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_11.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_11.c1.y : [16 x 16 x 32 x *]
	  rn2_9.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_9.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_9.y : [16 x 16 x 32 x *] (gradient) }
	{ rn2_13.c2.W : [32 x 288] (gradient)
	  rn2_14.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_12.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_12.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_14.c1.y : [16 x 16 x 32 x *] }
	{ rn2_14.c2.W : [32 x 288] (gradient)
	  rn2_15.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_10.c1.y : [16 x 16 x 32 x *]
	  rn2_8.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_8.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_8.y : [16 x 16 x 32 x *] (gradient) }
	{ rn2_11.c2.W : [32 x 288] (gradient)
	  rn2_12.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_12.c1.c.W : [32 x 288] (gradient)
	  rn2_12.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_12.p : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.b : [32 x 1] (gradient)
	  rn2_13.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_13.c2.c.b : [32 x 1] (gradient)
	  rn2_14.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.y : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_10.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_10.y : [16 x 16 x 32 x *] (gradient)
	  rn2_12.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_12.c1.y : [16 x 16 x 32 x *] }
	{ rn2_13.c2.c.sc : [32 x 1] (gradient)
	  rn2_13.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_10.c2.c.b : [32 x 1] (gradient)
	  rn2_11.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_12.c2.c.sc : [32 x 1] (gradient)
	  rn2_12.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_11.c1.c.W : [32 x 288] (gradient)
	  rn2_11.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_11.p : [16 x 16 x 32 x *] }
	{ rn2_14.c1.c.W : [32 x 288] (gradient)
	  rn2_14.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_14.p : [16 x 16 x 32 x *] }
	{ rn2_14.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.y : [16 x 16 x 32 x *] }
	{ rn2_10.c2.W : [32 x 288] (gradient)
	  rn2_11.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_10.c2.c.sc : [32 x 1] (gradient)
	  rn2_10.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_10.c2.c.c : [16 x 16 x 32 x *]
	  rn2_9.c2.c.b : [32 x 1] (gradient) }
	{ rn2_11.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_11.y : [16 x 16 x 32 x *] }
	{ rn2_10.c1.c.W : [32 x 288] (gradient)
	  rn2_10.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_10.p : [16 x 16 x 32 x *] }
	{ rn2_11.c2.c.sc : [32 x 1] (gradient)
	  rn2_11.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_11.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_11.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_11.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_13.c1.y : [16 x 16 x 32 x *] }
	{ rn2_10.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_10.y : [16 x 16 x 32 x *] }
	{ rn2_11.c2.c.b : [32 x 1] (gradient)
	  rn2_12.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_16.c2.c.b : [32 x 1] (gradient)
	  rn2_17.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_18.c1.c.W : [32 x 288] (gradient)
	  rn2_18.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_18.p : [16 x 16 x 32 x *] }
	{ rn2_17.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.y : [16 x 16 x 32 x *] }
	{ rn2_18.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.y : [16 x 16 x 32 x *] }
	{ rn2_15.c2.c.b : [32 x 1] (gradient)
	  rn2_16.c2.c.c : [16 x 16 x 32 x *] }
	{ rn3_1.c1.c.W : [64 x 288] (gradient)
	  rn3_1.c2.c.c : [8 x 8 x 64 x *] (gradient) }
	{ rn2_18.c2.c.sc : [32 x 1] (gradient)
	  rn2_18.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_15.c2.c.sc : [32 x 1] (gradient)
	  rn2_15.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_16.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.y : [16 x 16 x 32 x *] }
	{ rn2_16.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_16.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_18.c1.y : [16 x 16 x 32 x *] }
	{ rn2_17.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_17.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.y : [16 x 16 x 32 x *] (gradient)
	  rn3_1.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_1.c1.y : [8 x 8 x 64 x *] }
	{ rn2_17.c1.c.W : [32 x 288] (gradient)
	  rn2_17.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_17.p : [16 x 16 x 32 x *] }
	{ rn2_18.c2.W : [32 x 288] (gradient)
	  rn3_1.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn2_14.c2.c.sc : [32 x 1] (gradient)
	  rn2_14.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_14.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_14.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_14.y : [16 x 16 x 32 x *] (gradient)
	  rn2_16.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_16.c1.y : [16 x 16 x 32 x *] }
	{ rn2_17.c2.W : [32 x 288] (gradient)
	  rn2_18.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_18.c2.c.b : [32 x 1] (gradient)
	  rn3_1.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_1.c2.c.sc : [64 x 1] (gradient)
	  rn3_1.c_proj.c : [8 x 8 x 64 x *] }
	{ rn2_15.c2.c.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.y : [16 x 16 x 32 x *] }
	{ rn2_15.c2.W : [32 x 288] (gradient)
	  rn2_16.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_13.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_13.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_13.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_15.c1.y : [16 x 16 x 32 x *] }
	{ rn2_16.c1.c.W : [32 x 288] (gradient)
	  rn2_16.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_16.p : [16 x 16 x 32 x *] }
	{ rn2_14.c2.c.b : [32 x 1] (gradient)
	  rn2_15.c2.c.c : [16 x 16 x 32 x *] }
	{ rn2_16.c2.W : [32 x 288] (gradient)
	  rn2_17.c1.c.c.c : [16 x 16 x 32 x *] }
	{ rn2_16.c2.c.sc : [32 x 1] (gradient)
	  rn2_16.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_15.c1.c.W : [32 x 288] (gradient)
	  rn2_15.c2.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_15.p : [16 x 16 x 32 x *] }
	{ rn2_15.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_15.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_15.y : [16 x 16 x 32 x *] (gradient)
	  rn2_17.c1.c.c.c : [16 x 16 x 32 x *] (gradient)
	  rn2_17.c1.y : [16 x 16 x 32 x *] }
	{ rn2_17.c2.c.sc : [32 x 1] (gradient)
	  rn2_17.p : [16 x 16 x 32 x *] (gradient) }
	{ rn2_17.c2.c.b : [32 x 1] (gradient)
	  rn2_18.c2.c.c : [16 x 16 x 32 x *] }
	{ rn3_3.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.y : [8 x 8 x 64 x *] }
	{ rn3_3.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_3.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_5.c1.y : [8 x 8 x 64 x *] }
	{ rn3_2.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_2.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_4.c1.y : [8 x 8 x 64 x *] }
	{ rn3_2.c1.c.W : [64 x 576] (gradient)
	  rn3_2.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_2.p : [8 x 8 x 64 x *] }
	{ rn3_2.c2.c.sc : [64 x 1] (gradient)
	  rn3_2.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_5.c1.c.W : [64 x 576] (gradient)
	  rn3_5.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_5.p : [8 x 8 x 64 x *] }
	{ rn3_2.c2.W : [64 x 576] (gradient)
	  rn3_3.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_4.c2.W : [64 x 576] (gradient)
	  rn3_5.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_5.c2.W : [64 x 576] (gradient)
	  rn3_6.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_1.c2.c.b : [64 x 1] (gradient)
	  rn3_1.c_proj.c : [8 x 8 x 64 x *] (gradient)
	  rn3_1.p : [8 x 8 x 64 x *] }
	{ rn3_3.c2.W : [64 x 576] (gradient)
	  rn3_4.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_5.c2.c.sc : [64 x 1] (gradient)
	  rn3_5.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_2.c2.c.b : [64 x 1] (gradient)
	  rn3_3.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_4.c1.c.W : [64 x 576] (gradient)
	  rn3_4.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_4.p : [8 x 8 x 64 x *] }
	{ rn3_5.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.y : [8 x 8 x 64 x *] }
	{ rn3_3.c2.c.sc : [64 x 1] (gradient)
	  rn3_3.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_4.c2.c.sc : [64 x 1] (gradient)
	  rn3_4.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_4.c2.c.b : [64 x 1] (gradient)
	  rn3_5.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_2.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.y : [8 x 8 x 64 x *] }
	{ rn3_3.c2.c.b : [64 x 1] (gradient)
	  rn3_4.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_1.c_proj.sc : [64 x 1] (gradient)
	  rn3_1.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_4.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_4.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_6.c1.y : [8 x 8 x 64 x *] }
	{ rn3_5.c2.c.b : [64 x 1] (gradient)
	  rn3_6.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_1.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_1.y : [8 x 8 x 64 x *] }
	{ rn3_1.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_1.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_3.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_3.c1.y : [8 x 8 x 64 x *] }
	{ rn3_1.c2.W : [64 x 576] (gradient)
	  rn3_2.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn2_18.c1.c.c.sc : [32 x 1] (gradient)
	  rn2_18.c1.y : [16 x 16 x 32 x *] (gradient)
	  rn2_18.y : [16 x 16 x 32 x *] (gradient) }
	{ rn3_4.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_4.y : [8 x 8 x 64 x *] }
	{ rn3_1.c_proj.y : [8 x 8 x 64 x *] (gradient)
	  rn3_2.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_2.c1.y : [8 x 8 x 64 x *] }
	{ rn3_3.c1.c.W : [64 x 576] (gradient)
	  rn3_3.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_3.p : [8 x 8 x 64 x *] }
	{ rn3_7.c2.c.b : [64 x 1] (gradient)
	  rn3_8.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c2.c.c : [8 x 8 x 64 x *]
	  rn3_9.c2.c.b : [64 x 1] (gradient) }
	{ rn3_8.c1.c.W : [64 x 576] (gradient)
	  rn3_8.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_8.p : [8 x 8 x 64 x *] }
	{ rn3_8.c2.c.b : [64 x 1] (gradient)
	  rn3_9.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.W : [64 x 576] (gradient)
	  rn3_10.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_10.p : [8 x 8 x 64 x *] }
	{ rn3_10.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_10.y : [8 x 8 x 64 x *] }
	{ rn3_10.c2.W : [64 x 576] (gradient)
	  rn3_11.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c2.c.sc : [64 x 1] (gradient)
	  rn3_10.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_6.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.y : [8 x 8 x 64 x *] }
	{ rn3_11.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_11.c1.y : [8 x 8 x 64 x *]
	  rn3_9.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_9.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_5.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_5.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_5.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_7.c1.y : [8 x 8 x 64 x *] }
	{ rn3_9.c2.c.sc : [64 x 1] (gradient)
	  rn3_9.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_6.c2.c.sc : [64 x 1] (gradient)
	  rn3_6.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_6.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_6.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_6.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_8.c1.y : [8 x 8 x 64 x *] }
	{ rn3_6.c2.c.b : [64 x 1] (gradient)
	  rn3_7.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_8.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.y : [8 x 8 x 64 x *] }
	{ rn3_8.c2.c.sc : [64 x 1] (gradient)
	  rn3_8.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_6.c1.c.W : [64 x 576] (gradient)
	  rn3_6.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_6.p : [8 x 8 x 64 x *] }
	{ rn3_7.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_7.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_9.c1.y : [8 x 8 x 64 x *] }
	{ rn3_7.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_7.y : [8 x 8 x 64 x *] }
	{ rn3_8.c2.W : [64 x 576] (gradient)
	  rn3_9.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_7.c2.W : [64 x 576] (gradient)
	  rn3_8.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_6.c2.W : [64 x 576] (gradient)
	  rn3_7.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_9.c1.c.W : [64 x 576] (gradient)
	  rn3_9.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_9.p : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.c.c : [8 x 8 x 64 x *]
	  rn3_9.c2.W : [64 x 576] (gradient) }
	{ rn3_9.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_9.y : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_10.c1.y : [8 x 8 x 64 x *]
	  rn3_8.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_8.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_8.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_7.c2.c.sc : [64 x 1] (gradient)
	  rn3_7.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_7.c1.c.W : [64 x 576] (gradient)
	  rn3_7.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_7.p : [8 x 8 x 64 x *] }
	{ rn3_11.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_11.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_11.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_13.c1.y : [8 x 8 x 64 x *] }
	{ rn3_13.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_13.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_15.c1.y : [8 x 8 x 64 x *] }
	{ rn3_12.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_12.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_14.c1.y : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.b : [64 x 1] (gradient)
	  rn3_15.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_15.c1.c.W : [64 x 576] (gradient)
	  rn3_15.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_15.p : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.y : [8 x 8 x 64 x *] }
	{ rn3_15.c2.W : [64 x 576] (gradient)
	  rn3_16.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.sc : [64 x 1] (gradient)
	  rn3_15.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_11.c1.c.W : [64 x 576] (gradient)
	  rn3_11.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_11.p : [8 x 8 x 64 x *] }
	{ rn3_14.c2.W : [64 x 576] (gradient)
	  rn3_15.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_11.c2.W : [64 x 576] (gradient)
	  rn3_12.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c2.c.b : [64 x 1] (gradient)
	  rn3_11.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_10.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_10.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_10.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_12.c1.y : [8 x 8 x 64 x *] }
	{ rn3_11.c2.c.b : [64 x 1] (gradient)
	  rn3_12.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_12.c2.c.sc : [64 x 1] (gradient)
	  rn3_12.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_12.c2.c.b : [64 x 1] (gradient)
	  rn3_13.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_13.c1.c.W : [64 x 576] (gradient)
	  rn3_13.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_13.p : [8 x 8 x 64 x *] }
	{ rn3_11.c2.c.sc : [64 x 1] (gradient)
	  rn3_11.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_13.c2.W : [64 x 576] (gradient)
	  rn3_14.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.sc : [64 x 1] (gradient)
	  rn3_13.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_12.c1.c.W : [64 x 576] (gradient)
	  rn3_12.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_12.p : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_13.y : [8 x 8 x 64 x *] }
	{ rn3_13.c2.c.b : [64 x 1] (gradient)
	  rn3_14.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_12.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_12.y : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.sc : [64 x 1] (gradient)
	  rn3_14.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_11.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_11.y : [8 x 8 x 64 x *] }
	{ rn3_14.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.y : [8 x 8 x 64 x *] }
	{ rn3_14.c1.c.W : [64 x 576] (gradient)
	  rn3_14.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_14.p : [8 x 8 x 64 x *] }
	{ rn3_12.c2.W : [64 x 576] (gradient)
	  rn3_13.c1.c.c.c : [8 x 8 x 64 x *] }
	{ rn3_16.c1.c.W : [64 x 576] (gradient)
	  rn3_16.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_16.p : [8 x 8 x 64 x *] }
	{ rn3_14.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_14.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_14.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_16.c1.y : [8 x 8 x 64 x *] }
	{ rn3_15.c2.c.b : [64 x 1] (gradient)
	  rn3_16.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_17.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.y : [8 x 8 x 64 x *] }
	{ rn3_16.c2.c.b : [64 x 1] (gradient)
	  rn3_17.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_16.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_16.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_18.c1.y : [8 x 8 x 64 x *] }
	{ rn3_16.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_16.y : [8 x 8 x 64 x *] }
	{ rn3_18.c1.c.W : [64 x 576] (gradient)
	  rn3_18.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_18.p : [8 x 8 x 64 x *] }
	{ rn3_18.c2.c.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.y : [8 x 8 x 64 x *] }
	{ OutputNodes.t : [10 x *]
	  rn3_18.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_18.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_18.y : [8 x 8 x 64 x *] (gradient) }
	{ pool : [1 x 1 x 64 x *]
	  rn3_18.c2.c.sc : [64 x 1] (gradient)
	  rn3_18.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_16.c2.W : [64 x 576] (gradient)
	  rn3_17.c1.c.c.c : [8 x 8 x 64 x *] }
	{ pool : [1 x 1 x 64 x *] (gradient)
	  rn3_18.c2.W : [64 x 576] (gradient) }
	{ rn3_15.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_15.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_15.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.c1.c.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_17.c1.y : [8 x 8 x 64 x *] }
	{ OutputNodes.W : [10 x 1 x 1 x 64] (gradient)
	  OutputNodes.z : [10 x *] (gradient) }
	{ rn3_17.c2.c.sc : [64 x 1] (gradient)
	  rn3_17.p : [8 x 8 x 64 x *] (gradient) }
	{ rn3_16.c2.c.sc : [64 x 1] (gradient)
	  rn3_16.p : [8 x 8 x 64 x *] (gradient) }
	{ OutputNodes.t : [10 x *] (gradient)
	  rn3_17.c1.c.c.sc : [64 x 1] (gradient)
	  rn3_17.c1.y : [8 x 8 x 64 x *] (gradient)
	  rn3_17.y : [8 x 8 x 64 x *] (gradient) }
	{ rn3_17.c2.c.b : [64 x 1] (gradient)
	  rn3_18.c2.c.c : [8 x 8 x 64 x *] }
	{ rn3_17.c1.c.W : [64 x 576] (gradient)
	  rn3_17.c2.c.c : [8 x 8 x 64 x *] (gradient)
	  rn3_17.p : [8 x 8 x 64 x *] }
	{ rn3_17.c2.W : [64 x 576] (gradient)
	  rn3_18.c1.c.c.c : [8 x 8 x 64 x *] }


12/15/2016 08:29:42: Training 1728154 parameters in 333 out of 333 parameter tensors and 722 nodes with gradient:

12/15/2016 08:29:42: 	Node 'OutputNodes.W' (LearnableParameter operation) : [10 x 1 x 1 x 64]
12/15/2016 08:29:42: 	Node 'OutputNodes.b' (LearnableParameter operation) : [10]
12/15/2016 08:29:42: 	Node 'conv1.c.W' (LearnableParameter operation) : [16 x 27]
12/15/2016 08:29:42: 	Node 'conv1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'conv1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_1.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_1.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_1.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_1.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_1.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_1.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_10.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_10.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_10.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_10.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_10.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_10.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_11.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_11.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_11.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_11.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_11.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_11.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_12.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_12.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_12.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_12.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_12.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_12.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_13.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_13.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_13.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_13.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_13.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_13.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_14.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_14.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_14.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_14.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_14.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_14.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_15.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_15.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_15.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_15.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_15.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_15.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_16.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_16.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_16.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_16.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_16.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_16.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_17.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_17.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_17.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_17.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_17.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_17.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_18.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_18.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_18.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_18.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_18.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_18.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_2.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_2.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_2.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_2.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_2.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_2.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_3.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_3.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_3.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_3.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_3.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_3.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_4.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_4.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_4.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_4.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_4.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_4.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_5.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_5.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_5.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_5.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_5.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_5.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_6.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_6.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_6.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_6.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_6.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_6.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_7.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_7.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_7.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_7.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_7.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_7.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_8.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_8.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_8.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_8.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_8.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_8.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_9.c1.c.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_9.c1.c.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_9.c1.c.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_9.c2.W' (LearnableParameter operation) : [16 x 144]
12/15/2016 08:29:42: 	Node 'rn1_9.c2.c.b' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn1_9.c2.c.sc' (LearnableParameter operation) : [16 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c1.c.W' (LearnableParameter operation) : [32 x 144]
12/15/2016 08:29:42: 	Node 'rn2_1.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_1.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c_proj.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_1.c_proj.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_10.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_10.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_10.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_10.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_10.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_10.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_11.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_11.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_11.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_11.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_11.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_11.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_12.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_12.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_12.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_12.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_12.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_12.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_13.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_13.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_13.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_13.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_13.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_13.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_14.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_14.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_14.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_14.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_14.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_14.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_15.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_15.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_15.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_15.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_15.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_15.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_16.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_16.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_16.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_16.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_16.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_16.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_17.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_17.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_17.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_17.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_17.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_17.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_18.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_18.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_18.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_18.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_18.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_18.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_2.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_2.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_2.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_2.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_2.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_2.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_3.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_3.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_3.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_3.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_3.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_3.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_4.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_4.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_4.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_4.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_4.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_4.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_5.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_5.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_5.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_5.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_5.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_5.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_6.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_6.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_6.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_6.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_6.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_6.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_7.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_7.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_7.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_7.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_7.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_7.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_8.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_8.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_8.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_8.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_8.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_8.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_9.c1.c.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_9.c1.c.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_9.c1.c.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_9.c2.W' (LearnableParameter operation) : [32 x 288]
12/15/2016 08:29:42: 	Node 'rn2_9.c2.c.b' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn2_9.c2.c.sc' (LearnableParameter operation) : [32 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c1.c.W' (LearnableParameter operation) : [64 x 288]
12/15/2016 08:29:42: 	Node 'rn3_1.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_1.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c_proj.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_1.c_proj.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_10.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_10.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_10.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_10.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_10.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_10.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_11.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_11.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_11.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_11.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_11.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_11.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_12.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_12.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_12.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_12.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_12.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_12.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_13.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_13.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_13.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_13.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_13.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_13.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_14.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_14.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_14.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_14.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_14.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_14.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_15.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_15.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_15.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_15.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_15.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_15.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_16.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_16.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_16.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_16.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_16.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_16.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_17.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_17.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_17.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_17.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_17.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_17.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_18.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_18.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_18.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_18.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_18.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_18.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_2.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_2.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_2.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_2.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_2.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_2.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_3.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_3.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_3.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_3.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_3.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_3.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_4.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_4.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_4.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_4.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_4.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_4.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_5.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_5.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_5.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_5.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_5.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_5.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_6.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_6.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_6.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_6.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_6.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_6.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_7.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_7.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_7.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_7.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_7.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_7.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_8.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_8.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_8.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_8.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_8.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_8.c2.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_9.c1.c.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_9.c1.c.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_9.c1.c.c.sc' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_9.c2.W' (LearnableParameter operation) : [64 x 576]
12/15/2016 08:29:42: 	Node 'rn3_9.c2.c.b' (LearnableParameter operation) : [64 x 1]
12/15/2016 08:29:42: 	Node 'rn3_9.c2.c.sc' (LearnableParameter operation) : [64 x 1]

12/15/2016 08:29:42: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

12/15/2016 08:29:42: Starting Epoch 1: learning rate per sample = 0.006250  effective momentum = 0.900000  momentum as time constant = 151.9 samples

12/15/2016 08:29:42: Starting minibatch loop.
12/15/2016 08:29:53: Finished Epoch[ 1 of 1]: [Training] CE = 2.56776452 * 128; Err = 0.91406250 * 128; totalSamplesSeen = 128; learningRatePerSample = 0.0062500001; epochTime=11.4129s
12/15/2016 08:29:53: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20161215082658.690476\Examples\Image\Deprecated\CIFAR-10_04_ResNet_56@release_gpu/Models/04_ResNet_56'

12/15/2016 08:29:55: Action "train" complete.


12/15/2016 08:29:55: ##############################################################################
12/15/2016 08:29:55: #                                                                            #
12/15/2016 08:30:00: # Test command (test action)                                                 #
12/15/2016 08:30:00: #                                                                            #
12/15/2016 08:30:00: ##############################################################################


Post-processing network...

3 roots:
	CE = CrossEntropyWithSoftmax()
	Err = ClassificationError()
	OutputNodes.z = Plus()

Validating network. 949 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> OutputNodes.W = LearnableParameter() :  -> [10 x 1 x 1 x 64]
Validating --> rn3_18.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_18.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_17.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_16.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_15.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_14.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_13.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_12.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_11.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_10.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_9.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_8.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_7.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_6.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_5.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_4.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_3.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_2.c1.c.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c2.W = LearnableParameter() :  -> [64 x 576]
Validating --> rn3_1.c1.c.W = LearnableParameter() :  -> [64 x 288]
Validating --> rn2_18.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_18.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_17.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_16.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_15.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_14.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_13.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_12.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_11.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_10.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_9.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_8.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_7.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_6.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_5.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_4.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_3.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_2.c1.c.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c2.W = LearnableParameter() :  -> [32 x 288]
Validating --> rn2_1.c1.c.W = LearnableParameter() :  -> [32 x 144]
Validating --> rn1_18.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_18.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_17.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_16.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_15.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_14.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_13.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_12.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_11.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_10.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_9.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_8.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_7.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_6.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_5.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_4.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_3.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_2.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c2.W = LearnableParameter() :  -> [16 x 144]
Validating --> rn1_1.c1.c.W = LearnableParameter() :  -> [16 x 144]
Validating --> conv1.c.W = LearnableParameter() :  -> [16 x 27]
Validating --> features = InputValue() :  -> [32 x 32 x 3 x *1]
Validating --> conv1.c.c.c = Convolution (conv1.c.W, features) : [16 x 27], [32 x 32 x 3 x *1] -> [32 x 32 x 16 x *1]
Validating --> conv1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> conv1.c.c.y = BatchNormalization (conv1.c.c.c, conv1.c.c.sc, conv1.c.c.b, conv1.c.c.m, conv1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> conv1.y = RectifiedLinear (conv1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.c.c.c = Convolution (rn1_1.c1.c.W, conv1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c1.c.c.y = BatchNormalization (rn1_1.c1.c.c.c, rn1_1.c1.c.c.sc, rn1_1.c1.c.c.b, rn1_1.c1.c.c.m, rn1_1.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c1.y = RectifiedLinear (rn1_1.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c2.c.c = Convolution (rn1_1.c2.W, rn1_1.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_1.c2.c.y = BatchNormalization (rn1_1.c2.c.c, rn1_1.c2.c.sc, rn1_1.c2.c.b, rn1_1.c2.c.m, rn1_1.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.p = Plus (rn1_1.c2.c.y, conv1.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_1.y = RectifiedLinear (rn1_1.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.c.c.c = Convolution (rn1_2.c1.c.W, rn1_1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c1.c.c.y = BatchNormalization (rn1_2.c1.c.c.c, rn1_2.c1.c.c.sc, rn1_2.c1.c.c.b, rn1_2.c1.c.c.m, rn1_2.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c1.y = RectifiedLinear (rn1_2.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c2.c.c = Convolution (rn1_2.c2.W, rn1_2.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_2.c2.c.y = BatchNormalization (rn1_2.c2.c.c, rn1_2.c2.c.sc, rn1_2.c2.c.b, rn1_2.c2.c.m, rn1_2.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.p = Plus (rn1_2.c2.c.y, rn1_1.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_2.y = RectifiedLinear (rn1_2.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.c.c.c = Convolution (rn1_3.c1.c.W, rn1_2.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c1.c.c.y = BatchNormalization (rn1_3.c1.c.c.c, rn1_3.c1.c.c.sc, rn1_3.c1.c.c.b, rn1_3.c1.c.c.m, rn1_3.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c1.y = RectifiedLinear (rn1_3.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c2.c.c = Convolution (rn1_3.c2.W, rn1_3.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_3.c2.c.y = BatchNormalization (rn1_3.c2.c.c, rn1_3.c2.c.sc, rn1_3.c2.c.b, rn1_3.c2.c.m, rn1_3.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.p = Plus (rn1_3.c2.c.y, rn1_2.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_3.y = RectifiedLinear (rn1_3.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.c.c.c = Convolution (rn1_4.c1.c.W, rn1_3.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c1.c.c.y = BatchNormalization (rn1_4.c1.c.c.c, rn1_4.c1.c.c.sc, rn1_4.c1.c.c.b, rn1_4.c1.c.c.m, rn1_4.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c1.y = RectifiedLinear (rn1_4.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c2.c.c = Convolution (rn1_4.c2.W, rn1_4.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_4.c2.c.y = BatchNormalization (rn1_4.c2.c.c, rn1_4.c2.c.sc, rn1_4.c2.c.b, rn1_4.c2.c.m, rn1_4.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.p = Plus (rn1_4.c2.c.y, rn1_3.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_4.y = RectifiedLinear (rn1_4.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.c.c.c = Convolution (rn1_5.c1.c.W, rn1_4.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c1.c.c.y = BatchNormalization (rn1_5.c1.c.c.c, rn1_5.c1.c.c.sc, rn1_5.c1.c.c.b, rn1_5.c1.c.c.m, rn1_5.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c1.y = RectifiedLinear (rn1_5.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c2.c.c = Convolution (rn1_5.c2.W, rn1_5.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_5.c2.c.y = BatchNormalization (rn1_5.c2.c.c, rn1_5.c2.c.sc, rn1_5.c2.c.b, rn1_5.c2.c.m, rn1_5.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.p = Plus (rn1_5.c2.c.y, rn1_4.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_5.y = RectifiedLinear (rn1_5.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.c.c.c = Convolution (rn1_6.c1.c.W, rn1_5.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c1.c.c.y = BatchNormalization (rn1_6.c1.c.c.c, rn1_6.c1.c.c.sc, rn1_6.c1.c.c.b, rn1_6.c1.c.c.m, rn1_6.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c1.y = RectifiedLinear (rn1_6.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c2.c.c = Convolution (rn1_6.c2.W, rn1_6.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_6.c2.c.y = BatchNormalization (rn1_6.c2.c.c, rn1_6.c2.c.sc, rn1_6.c2.c.b, rn1_6.c2.c.m, rn1_6.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.p = Plus (rn1_6.c2.c.y, rn1_5.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_6.y = RectifiedLinear (rn1_6.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.c.c.c = Convolution (rn1_7.c1.c.W, rn1_6.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c1.c.c.y = BatchNormalization (rn1_7.c1.c.c.c, rn1_7.c1.c.c.sc, rn1_7.c1.c.c.b, rn1_7.c1.c.c.m, rn1_7.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c1.y = RectifiedLinear (rn1_7.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c2.c.c = Convolution (rn1_7.c2.W, rn1_7.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_7.c2.c.y = BatchNormalization (rn1_7.c2.c.c, rn1_7.c2.c.sc, rn1_7.c2.c.b, rn1_7.c2.c.m, rn1_7.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.p = Plus (rn1_7.c2.c.y, rn1_6.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_7.y = RectifiedLinear (rn1_7.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.c.c.c = Convolution (rn1_8.c1.c.W, rn1_7.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c1.c.c.y = BatchNormalization (rn1_8.c1.c.c.c, rn1_8.c1.c.c.sc, rn1_8.c1.c.c.b, rn1_8.c1.c.c.m, rn1_8.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c1.y = RectifiedLinear (rn1_8.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c2.c.c = Convolution (rn1_8.c2.W, rn1_8.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_8.c2.c.y = BatchNormalization (rn1_8.c2.c.c, rn1_8.c2.c.sc, rn1_8.c2.c.b, rn1_8.c2.c.m, rn1_8.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.p = Plus (rn1_8.c2.c.y, rn1_7.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_8.y = RectifiedLinear (rn1_8.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.c.c.c = Convolution (rn1_9.c1.c.W, rn1_8.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c1.c.c.y = BatchNormalization (rn1_9.c1.c.c.c, rn1_9.c1.c.c.sc, rn1_9.c1.c.c.b, rn1_9.c1.c.c.m, rn1_9.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c1.y = RectifiedLinear (rn1_9.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c2.c.c = Convolution (rn1_9.c2.W, rn1_9.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_9.c2.c.y = BatchNormalization (rn1_9.c2.c.c, rn1_9.c2.c.sc, rn1_9.c2.c.b, rn1_9.c2.c.m, rn1_9.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.p = Plus (rn1_9.c2.c.y, rn1_8.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_9.y = RectifiedLinear (rn1_9.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.c.c.c = Convolution (rn1_10.c1.c.W, rn1_9.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c1.c.c.y = BatchNormalization (rn1_10.c1.c.c.c, rn1_10.c1.c.c.sc, rn1_10.c1.c.c.b, rn1_10.c1.c.c.m, rn1_10.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c1.y = RectifiedLinear (rn1_10.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c2.c.c = Convolution (rn1_10.c2.W, rn1_10.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_10.c2.c.y = BatchNormalization (rn1_10.c2.c.c, rn1_10.c2.c.sc, rn1_10.c2.c.b, rn1_10.c2.c.m, rn1_10.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.p = Plus (rn1_10.c2.c.y, rn1_9.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_10.y = RectifiedLinear (rn1_10.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.c.c.c = Convolution (rn1_11.c1.c.W, rn1_10.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c1.c.c.y = BatchNormalization (rn1_11.c1.c.c.c, rn1_11.c1.c.c.sc, rn1_11.c1.c.c.b, rn1_11.c1.c.c.m, rn1_11.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c1.y = RectifiedLinear (rn1_11.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c2.c.c = Convolution (rn1_11.c2.W, rn1_11.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_11.c2.c.y = BatchNormalization (rn1_11.c2.c.c, rn1_11.c2.c.sc, rn1_11.c2.c.b, rn1_11.c2.c.m, rn1_11.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.p = Plus (rn1_11.c2.c.y, rn1_10.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_11.y = RectifiedLinear (rn1_11.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.c.c.c = Convolution (rn1_12.c1.c.W, rn1_11.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c1.c.c.y = BatchNormalization (rn1_12.c1.c.c.c, rn1_12.c1.c.c.sc, rn1_12.c1.c.c.b, rn1_12.c1.c.c.m, rn1_12.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c1.y = RectifiedLinear (rn1_12.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c2.c.c = Convolution (rn1_12.c2.W, rn1_12.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_12.c2.c.y = BatchNormalization (rn1_12.c2.c.c, rn1_12.c2.c.sc, rn1_12.c2.c.b, rn1_12.c2.c.m, rn1_12.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.p = Plus (rn1_12.c2.c.y, rn1_11.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_12.y = RectifiedLinear (rn1_12.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.c.c.c = Convolution (rn1_13.c1.c.W, rn1_12.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c1.c.c.y = BatchNormalization (rn1_13.c1.c.c.c, rn1_13.c1.c.c.sc, rn1_13.c1.c.c.b, rn1_13.c1.c.c.m, rn1_13.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c1.y = RectifiedLinear (rn1_13.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c2.c.c = Convolution (rn1_13.c2.W, rn1_13.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_13.c2.c.y = BatchNormalization (rn1_13.c2.c.c, rn1_13.c2.c.sc, rn1_13.c2.c.b, rn1_13.c2.c.m, rn1_13.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.p = Plus (rn1_13.c2.c.y, rn1_12.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_13.y = RectifiedLinear (rn1_13.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.c.c.c = Convolution (rn1_14.c1.c.W, rn1_13.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c1.c.c.y = BatchNormalization (rn1_14.c1.c.c.c, rn1_14.c1.c.c.sc, rn1_14.c1.c.c.b, rn1_14.c1.c.c.m, rn1_14.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c1.y = RectifiedLinear (rn1_14.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c2.c.c = Convolution (rn1_14.c2.W, rn1_14.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_14.c2.c.y = BatchNormalization (rn1_14.c2.c.c, rn1_14.c2.c.sc, rn1_14.c2.c.b, rn1_14.c2.c.m, rn1_14.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.p = Plus (rn1_14.c2.c.y, rn1_13.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_14.y = RectifiedLinear (rn1_14.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.c.c.c = Convolution (rn1_15.c1.c.W, rn1_14.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c1.c.c.y = BatchNormalization (rn1_15.c1.c.c.c, rn1_15.c1.c.c.sc, rn1_15.c1.c.c.b, rn1_15.c1.c.c.m, rn1_15.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c1.y = RectifiedLinear (rn1_15.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c2.c.c = Convolution (rn1_15.c2.W, rn1_15.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_15.c2.c.y = BatchNormalization (rn1_15.c2.c.c, rn1_15.c2.c.sc, rn1_15.c2.c.b, rn1_15.c2.c.m, rn1_15.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.p = Plus (rn1_15.c2.c.y, rn1_14.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_15.y = RectifiedLinear (rn1_15.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.c.c.c = Convolution (rn1_16.c1.c.W, rn1_15.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c1.c.c.y = BatchNormalization (rn1_16.c1.c.c.c, rn1_16.c1.c.c.sc, rn1_16.c1.c.c.b, rn1_16.c1.c.c.m, rn1_16.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c1.y = RectifiedLinear (rn1_16.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c2.c.c = Convolution (rn1_16.c2.W, rn1_16.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_16.c2.c.y = BatchNormalization (rn1_16.c2.c.c, rn1_16.c2.c.sc, rn1_16.c2.c.b, rn1_16.c2.c.m, rn1_16.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.p = Plus (rn1_16.c2.c.y, rn1_15.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_16.y = RectifiedLinear (rn1_16.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.c.c.c = Convolution (rn1_17.c1.c.W, rn1_16.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c1.c.c.y = BatchNormalization (rn1_17.c1.c.c.c, rn1_17.c1.c.c.sc, rn1_17.c1.c.c.b, rn1_17.c1.c.c.m, rn1_17.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c1.y = RectifiedLinear (rn1_17.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c2.c.c = Convolution (rn1_17.c2.W, rn1_17.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_17.c2.c.y = BatchNormalization (rn1_17.c2.c.c, rn1_17.c2.c.sc, rn1_17.c2.c.b, rn1_17.c2.c.m, rn1_17.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.p = Plus (rn1_17.c2.c.y, rn1_16.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_17.y = RectifiedLinear (rn1_17.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.c.c.c = Convolution (rn1_18.c1.c.W, rn1_17.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.c.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c1.c.c.y = BatchNormalization (rn1_18.c1.c.c.c, rn1_18.c1.c.c.sc, rn1_18.c1.c.c.b, rn1_18.c1.c.c.m, rn1_18.c1.c.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c1.y = RectifiedLinear (rn1_18.c1.c.c.y) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c2.c.c = Convolution (rn1_18.c2.W, rn1_18.c1.y) : [16 x 144], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.c2.c.sc = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.b = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.m = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.v = LearnableParameter() :  -> [16 x 1]
Validating --> rn1_18.c2.c.y = BatchNormalization (rn1_18.c2.c.c, rn1_18.c2.c.sc, rn1_18.c2.c.b, rn1_18.c2.c.m, rn1_18.c2.c.v) : [32 x 32 x 16 x *1], [16 x 1], [16 x 1], [16 x 1], [16 x 1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.p = Plus (rn1_18.c2.c.y, rn1_17.y) : [32 x 32 x 16 x *1], [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn1_18.y = RectifiedLinear (rn1_18.p) : [32 x 32 x 16 x *1] -> [32 x 32 x 16 x *1]
Validating --> rn2_1.c1.c.c.c = Convolution (rn2_1.c1.c.W, rn1_18.y) : [32 x 144], [32 x 32 x 16 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c1.c.c.y = BatchNormalization (rn2_1.c1.c.c.c, rn2_1.c1.c.c.sc, rn2_1.c1.c.c.b, rn2_1.c1.c.c.m, rn2_1.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c1.y = RectifiedLinear (rn2_1.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c2.c.c = Convolution (rn2_1.c2.W, rn2_1.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c2.c.y = BatchNormalization (rn2_1.c2.c.c, rn2_1.c2.c.sc, rn2_1.c2.c.b, rn2_1.c2.c.m, rn2_1.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1_Wproj = LearnableParameter() :  -> [32 x 16]
Validating --> rn2_1.c_proj.c = Convolution (rn2_1_Wproj, rn1_18.y) : [32 x 16], [32 x 32 x 16 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.c_proj.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_1.c_proj.y = BatchNormalization (rn2_1.c_proj.c, rn2_1.c_proj.sc, rn2_1.c_proj.b, rn2_1.c_proj.m, rn2_1.c_proj.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.p = Plus (rn2_1.c2.c.y, rn2_1.c_proj.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_1.y = RectifiedLinear (rn2_1.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.c.c.c = Convolution (rn2_2.c1.c.W, rn2_1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c1.c.c.y = BatchNormalization (rn2_2.c1.c.c.c, rn2_2.c1.c.c.sc, rn2_2.c1.c.c.b, rn2_2.c1.c.c.m, rn2_2.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c1.y = RectifiedLinear (rn2_2.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c2.c.c = Convolution (rn2_2.c2.W, rn2_2.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_2.c2.c.y = BatchNormalization (rn2_2.c2.c.c, rn2_2.c2.c.sc, rn2_2.c2.c.b, rn2_2.c2.c.m, rn2_2.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.p = Plus (rn2_2.c2.c.y, rn2_1.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_2.y = RectifiedLinear (rn2_2.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.c.c.c = Convolution (rn2_3.c1.c.W, rn2_2.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c1.c.c.y = BatchNormalization (rn2_3.c1.c.c.c, rn2_3.c1.c.c.sc, rn2_3.c1.c.c.b, rn2_3.c1.c.c.m, rn2_3.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c1.y = RectifiedLinear (rn2_3.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c2.c.c = Convolution (rn2_3.c2.W, rn2_3.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_3.c2.c.y = BatchNormalization (rn2_3.c2.c.c, rn2_3.c2.c.sc, rn2_3.c2.c.b, rn2_3.c2.c.m, rn2_3.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.p = Plus (rn2_3.c2.c.y, rn2_2.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_3.y = RectifiedLinear (rn2_3.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.c.c.c = Convolution (rn2_4.c1.c.W, rn2_3.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c1.c.c.y = BatchNormalization (rn2_4.c1.c.c.c, rn2_4.c1.c.c.sc, rn2_4.c1.c.c.b, rn2_4.c1.c.c.m, rn2_4.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c1.y = RectifiedLinear (rn2_4.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c2.c.c = Convolution (rn2_4.c2.W, rn2_4.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_4.c2.c.y = BatchNormalization (rn2_4.c2.c.c, rn2_4.c2.c.sc, rn2_4.c2.c.b, rn2_4.c2.c.m, rn2_4.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.p = Plus (rn2_4.c2.c.y, rn2_3.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_4.y = RectifiedLinear (rn2_4.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.c.c.c = Convolution (rn2_5.c1.c.W, rn2_4.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c1.c.c.y = BatchNormalization (rn2_5.c1.c.c.c, rn2_5.c1.c.c.sc, rn2_5.c1.c.c.b, rn2_5.c1.c.c.m, rn2_5.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c1.y = RectifiedLinear (rn2_5.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c2.c.c = Convolution (rn2_5.c2.W, rn2_5.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_5.c2.c.y = BatchNormalization (rn2_5.c2.c.c, rn2_5.c2.c.sc, rn2_5.c2.c.b, rn2_5.c2.c.m, rn2_5.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.p = Plus (rn2_5.c2.c.y, rn2_4.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_5.y = RectifiedLinear (rn2_5.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.c.c.c = Convolution (rn2_6.c1.c.W, rn2_5.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c1.c.c.y = BatchNormalization (rn2_6.c1.c.c.c, rn2_6.c1.c.c.sc, rn2_6.c1.c.c.b, rn2_6.c1.c.c.m, rn2_6.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c1.y = RectifiedLinear (rn2_6.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c2.c.c = Convolution (rn2_6.c2.W, rn2_6.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_6.c2.c.y = BatchNormalization (rn2_6.c2.c.c, rn2_6.c2.c.sc, rn2_6.c2.c.b, rn2_6.c2.c.m, rn2_6.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.p = Plus (rn2_6.c2.c.y, rn2_5.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_6.y = RectifiedLinear (rn2_6.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.c.c.c = Convolution (rn2_7.c1.c.W, rn2_6.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c1.c.c.y = BatchNormalization (rn2_7.c1.c.c.c, rn2_7.c1.c.c.sc, rn2_7.c1.c.c.b, rn2_7.c1.c.c.m, rn2_7.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c1.y = RectifiedLinear (rn2_7.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c2.c.c = Convolution (rn2_7.c2.W, rn2_7.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_7.c2.c.y = BatchNormalization (rn2_7.c2.c.c, rn2_7.c2.c.sc, rn2_7.c2.c.b, rn2_7.c2.c.m, rn2_7.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.p = Plus (rn2_7.c2.c.y, rn2_6.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_7.y = RectifiedLinear (rn2_7.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.c.c.c = Convolution (rn2_8.c1.c.W, rn2_7.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c1.c.c.y = BatchNormalization (rn2_8.c1.c.c.c, rn2_8.c1.c.c.sc, rn2_8.c1.c.c.b, rn2_8.c1.c.c.m, rn2_8.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c1.y = RectifiedLinear (rn2_8.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c2.c.c = Convolution (rn2_8.c2.W, rn2_8.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_8.c2.c.y = BatchNormalization (rn2_8.c2.c.c, rn2_8.c2.c.sc, rn2_8.c2.c.b, rn2_8.c2.c.m, rn2_8.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.p = Plus (rn2_8.c2.c.y, rn2_7.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_8.y = RectifiedLinear (rn2_8.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.c.c.c = Convolution (rn2_9.c1.c.W, rn2_8.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c1.c.c.y = BatchNormalization (rn2_9.c1.c.c.c, rn2_9.c1.c.c.sc, rn2_9.c1.c.c.b, rn2_9.c1.c.c.m, rn2_9.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c1.y = RectifiedLinear (rn2_9.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c2.c.c = Convolution (rn2_9.c2.W, rn2_9.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_9.c2.c.y = BatchNormalization (rn2_9.c2.c.c, rn2_9.c2.c.sc, rn2_9.c2.c.b, rn2_9.c2.c.m, rn2_9.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.p = Plus (rn2_9.c2.c.y, rn2_8.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_9.y = RectifiedLinear (rn2_9.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.c.c.c = Convolution (rn2_10.c1.c.W, rn2_9.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c1.c.c.y = BatchNormalization (rn2_10.c1.c.c.c, rn2_10.c1.c.c.sc, rn2_10.c1.c.c.b, rn2_10.c1.c.c.m, rn2_10.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c1.y = RectifiedLinear (rn2_10.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c2.c.c = Convolution (rn2_10.c2.W, rn2_10.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_10.c2.c.y = BatchNormalization (rn2_10.c2.c.c, rn2_10.c2.c.sc, rn2_10.c2.c.b, rn2_10.c2.c.m, rn2_10.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.p = Plus (rn2_10.c2.c.y, rn2_9.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_10.y = RectifiedLinear (rn2_10.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.c.c.c = Convolution (rn2_11.c1.c.W, rn2_10.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c1.c.c.y = BatchNormalization (rn2_11.c1.c.c.c, rn2_11.c1.c.c.sc, rn2_11.c1.c.c.b, rn2_11.c1.c.c.m, rn2_11.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c1.y = RectifiedLinear (rn2_11.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c2.c.c = Convolution (rn2_11.c2.W, rn2_11.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_11.c2.c.y = BatchNormalization (rn2_11.c2.c.c, rn2_11.c2.c.sc, rn2_11.c2.c.b, rn2_11.c2.c.m, rn2_11.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.p = Plus (rn2_11.c2.c.y, rn2_10.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_11.y = RectifiedLinear (rn2_11.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.c.c.c = Convolution (rn2_12.c1.c.W, rn2_11.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c1.c.c.y = BatchNormalization (rn2_12.c1.c.c.c, rn2_12.c1.c.c.sc, rn2_12.c1.c.c.b, rn2_12.c1.c.c.m, rn2_12.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c1.y = RectifiedLinear (rn2_12.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c2.c.c = Convolution (rn2_12.c2.W, rn2_12.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_12.c2.c.y = BatchNormalization (rn2_12.c2.c.c, rn2_12.c2.c.sc, rn2_12.c2.c.b, rn2_12.c2.c.m, rn2_12.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.p = Plus (rn2_12.c2.c.y, rn2_11.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_12.y = RectifiedLinear (rn2_12.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.c.c.c = Convolution (rn2_13.c1.c.W, rn2_12.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c1.c.c.y = BatchNormalization (rn2_13.c1.c.c.c, rn2_13.c1.c.c.sc, rn2_13.c1.c.c.b, rn2_13.c1.c.c.m, rn2_13.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c1.y = RectifiedLinear (rn2_13.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c2.c.c = Convolution (rn2_13.c2.W, rn2_13.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_13.c2.c.y = BatchNormalization (rn2_13.c2.c.c, rn2_13.c2.c.sc, rn2_13.c2.c.b, rn2_13.c2.c.m, rn2_13.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.p = Plus (rn2_13.c2.c.y, rn2_12.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_13.y = RectifiedLinear (rn2_13.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.c.c.c = Convolution (rn2_14.c1.c.W, rn2_13.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c1.c.c.y = BatchNormalization (rn2_14.c1.c.c.c, rn2_14.c1.c.c.sc, rn2_14.c1.c.c.b, rn2_14.c1.c.c.m, rn2_14.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c1.y = RectifiedLinear (rn2_14.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c2.c.c = Convolution (rn2_14.c2.W, rn2_14.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_14.c2.c.y = BatchNormalization (rn2_14.c2.c.c, rn2_14.c2.c.sc, rn2_14.c2.c.b, rn2_14.c2.c.m, rn2_14.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.p = Plus (rn2_14.c2.c.y, rn2_13.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_14.y = RectifiedLinear (rn2_14.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.c.c.c = Convolution (rn2_15.c1.c.W, rn2_14.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c1.c.c.y = BatchNormalization (rn2_15.c1.c.c.c, rn2_15.c1.c.c.sc, rn2_15.c1.c.c.b, rn2_15.c1.c.c.m, rn2_15.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c1.y = RectifiedLinear (rn2_15.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c2.c.c = Convolution (rn2_15.c2.W, rn2_15.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_15.c2.c.y = BatchNormalization (rn2_15.c2.c.c, rn2_15.c2.c.sc, rn2_15.c2.c.b, rn2_15.c2.c.m, rn2_15.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.p = Plus (rn2_15.c2.c.y, rn2_14.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_15.y = RectifiedLinear (rn2_15.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.c.c.c = Convolution (rn2_16.c1.c.W, rn2_15.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c1.c.c.y = BatchNormalization (rn2_16.c1.c.c.c, rn2_16.c1.c.c.sc, rn2_16.c1.c.c.b, rn2_16.c1.c.c.m, rn2_16.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c1.y = RectifiedLinear (rn2_16.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c2.c.c = Convolution (rn2_16.c2.W, rn2_16.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_16.c2.c.y = BatchNormalization (rn2_16.c2.c.c, rn2_16.c2.c.sc, rn2_16.c2.c.b, rn2_16.c2.c.m, rn2_16.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.p = Plus (rn2_16.c2.c.y, rn2_15.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_16.y = RectifiedLinear (rn2_16.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.c.c.c = Convolution (rn2_17.c1.c.W, rn2_16.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c1.c.c.y = BatchNormalization (rn2_17.c1.c.c.c, rn2_17.c1.c.c.sc, rn2_17.c1.c.c.b, rn2_17.c1.c.c.m, rn2_17.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c1.y = RectifiedLinear (rn2_17.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c2.c.c = Convolution (rn2_17.c2.W, rn2_17.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_17.c2.c.y = BatchNormalization (rn2_17.c2.c.c, rn2_17.c2.c.sc, rn2_17.c2.c.b, rn2_17.c2.c.m, rn2_17.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.p = Plus (rn2_17.c2.c.y, rn2_16.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_17.y = RectifiedLinear (rn2_17.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.c.c.c = Convolution (rn2_18.c1.c.W, rn2_17.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.c.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c1.c.c.y = BatchNormalization (rn2_18.c1.c.c.c, rn2_18.c1.c.c.sc, rn2_18.c1.c.c.b, rn2_18.c1.c.c.m, rn2_18.c1.c.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c1.y = RectifiedLinear (rn2_18.c1.c.c.y) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c2.c.c = Convolution (rn2_18.c2.W, rn2_18.c1.y) : [32 x 288], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.c2.c.sc = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.b = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.m = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.v = LearnableParameter() :  -> [32 x 1]
Validating --> rn2_18.c2.c.y = BatchNormalization (rn2_18.c2.c.c, rn2_18.c2.c.sc, rn2_18.c2.c.b, rn2_18.c2.c.m, rn2_18.c2.c.v) : [16 x 16 x 32 x *1], [32 x 1], [32 x 1], [32 x 1], [32 x 1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.p = Plus (rn2_18.c2.c.y, rn2_17.y) : [16 x 16 x 32 x *1], [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn2_18.y = RectifiedLinear (rn2_18.p) : [16 x 16 x 32 x *1] -> [16 x 16 x 32 x *1]
Validating --> rn3_1.c1.c.c.c = Convolution (rn3_1.c1.c.W, rn2_18.y) : [64 x 288], [16 x 16 x 32 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c1.c.c.y = BatchNormalization (rn3_1.c1.c.c.c, rn3_1.c1.c.c.sc, rn3_1.c1.c.c.b, rn3_1.c1.c.c.m, rn3_1.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c1.y = RectifiedLinear (rn3_1.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c2.c.c = Convolution (rn3_1.c2.W, rn3_1.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c2.c.y = BatchNormalization (rn3_1.c2.c.c, rn3_1.c2.c.sc, rn3_1.c2.c.b, rn3_1.c2.c.m, rn3_1.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1_Wproj = LearnableParameter() :  -> [64 x 32]
Validating --> rn3_1.c_proj.c = Convolution (rn3_1_Wproj, rn2_18.y) : [64 x 32], [16 x 16 x 32 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.c_proj.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_1.c_proj.y = BatchNormalization (rn3_1.c_proj.c, rn3_1.c_proj.sc, rn3_1.c_proj.b, rn3_1.c_proj.m, rn3_1.c_proj.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.p = Plus (rn3_1.c2.c.y, rn3_1.c_proj.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_1.y = RectifiedLinear (rn3_1.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.c.c.c = Convolution (rn3_2.c1.c.W, rn3_1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c1.c.c.y = BatchNormalization (rn3_2.c1.c.c.c, rn3_2.c1.c.c.sc, rn3_2.c1.c.c.b, rn3_2.c1.c.c.m, rn3_2.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c1.y = RectifiedLinear (rn3_2.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c2.c.c = Convolution (rn3_2.c2.W, rn3_2.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_2.c2.c.y = BatchNormalization (rn3_2.c2.c.c, rn3_2.c2.c.sc, rn3_2.c2.c.b, rn3_2.c2.c.m, rn3_2.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.p = Plus (rn3_2.c2.c.y, rn3_1.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_2.y = RectifiedLinear (rn3_2.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.c.c.c = Convolution (rn3_3.c1.c.W, rn3_2.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c1.c.c.y = BatchNormalization (rn3_3.c1.c.c.c, rn3_3.c1.c.c.sc, rn3_3.c1.c.c.b, rn3_3.c1.c.c.m, rn3_3.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c1.y = RectifiedLinear (rn3_3.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c2.c.c = Convolution (rn3_3.c2.W, rn3_3.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_3.c2.c.y = BatchNormalization (rn3_3.c2.c.c, rn3_3.c2.c.sc, rn3_3.c2.c.b, rn3_3.c2.c.m, rn3_3.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.p = Plus (rn3_3.c2.c.y, rn3_2.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_3.y = RectifiedLinear (rn3_3.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.c.c.c = Convolution (rn3_4.c1.c.W, rn3_3.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c1.c.c.y = BatchNormalization (rn3_4.c1.c.c.c, rn3_4.c1.c.c.sc, rn3_4.c1.c.c.b, rn3_4.c1.c.c.m, rn3_4.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c1.y = RectifiedLinear (rn3_4.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c2.c.c = Convolution (rn3_4.c2.W, rn3_4.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_4.c2.c.y = BatchNormalization (rn3_4.c2.c.c, rn3_4.c2.c.sc, rn3_4.c2.c.b, rn3_4.c2.c.m, rn3_4.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.p = Plus (rn3_4.c2.c.y, rn3_3.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_4.y = RectifiedLinear (rn3_4.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.c.c.c = Convolution (rn3_5.c1.c.W, rn3_4.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c1.c.c.y = BatchNormalization (rn3_5.c1.c.c.c, rn3_5.c1.c.c.sc, rn3_5.c1.c.c.b, rn3_5.c1.c.c.m, rn3_5.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c1.y = RectifiedLinear (rn3_5.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c2.c.c = Convolution (rn3_5.c2.W, rn3_5.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_5.c2.c.y = BatchNormalization (rn3_5.c2.c.c, rn3_5.c2.c.sc, rn3_5.c2.c.b, rn3_5.c2.c.m, rn3_5.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.p = Plus (rn3_5.c2.c.y, rn3_4.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_5.y = RectifiedLinear (rn3_5.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.c.c.c = Convolution (rn3_6.c1.c.W, rn3_5.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c1.c.c.y = BatchNormalization (rn3_6.c1.c.c.c, rn3_6.c1.c.c.sc, rn3_6.c1.c.c.b, rn3_6.c1.c.c.m, rn3_6.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c1.y = RectifiedLinear (rn3_6.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c2.c.c = Convolution (rn3_6.c2.W, rn3_6.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_6.c2.c.y = BatchNormalization (rn3_6.c2.c.c, rn3_6.c2.c.sc, rn3_6.c2.c.b, rn3_6.c2.c.m, rn3_6.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.p = Plus (rn3_6.c2.c.y, rn3_5.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_6.y = RectifiedLinear (rn3_6.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.c.c.c = Convolution (rn3_7.c1.c.W, rn3_6.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c1.c.c.y = BatchNormalization (rn3_7.c1.c.c.c, rn3_7.c1.c.c.sc, rn3_7.c1.c.c.b, rn3_7.c1.c.c.m, rn3_7.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c1.y = RectifiedLinear (rn3_7.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c2.c.c = Convolution (rn3_7.c2.W, rn3_7.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_7.c2.c.y = BatchNormalization (rn3_7.c2.c.c, rn3_7.c2.c.sc, rn3_7.c2.c.b, rn3_7.c2.c.m, rn3_7.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.p = Plus (rn3_7.c2.c.y, rn3_6.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_7.y = RectifiedLinear (rn3_7.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.c.c.c = Convolution (rn3_8.c1.c.W, rn3_7.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c1.c.c.y = BatchNormalization (rn3_8.c1.c.c.c, rn3_8.c1.c.c.sc, rn3_8.c1.c.c.b, rn3_8.c1.c.c.m, rn3_8.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c1.y = RectifiedLinear (rn3_8.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c2.c.c = Convolution (rn3_8.c2.W, rn3_8.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_8.c2.c.y = BatchNormalization (rn3_8.c2.c.c, rn3_8.c2.c.sc, rn3_8.c2.c.b, rn3_8.c2.c.m, rn3_8.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.p = Plus (rn3_8.c2.c.y, rn3_7.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_8.y = RectifiedLinear (rn3_8.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.c.c.c = Convolution (rn3_9.c1.c.W, rn3_8.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c1.c.c.y = BatchNormalization (rn3_9.c1.c.c.c, rn3_9.c1.c.c.sc, rn3_9.c1.c.c.b, rn3_9.c1.c.c.m, rn3_9.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c1.y = RectifiedLinear (rn3_9.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c2.c.c = Convolution (rn3_9.c2.W, rn3_9.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_9.c2.c.y = BatchNormalization (rn3_9.c2.c.c, rn3_9.c2.c.sc, rn3_9.c2.c.b, rn3_9.c2.c.m, rn3_9.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.p = Plus (rn3_9.c2.c.y, rn3_8.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_9.y = RectifiedLinear (rn3_9.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.c.c.c = Convolution (rn3_10.c1.c.W, rn3_9.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c1.c.c.y = BatchNormalization (rn3_10.c1.c.c.c, rn3_10.c1.c.c.sc, rn3_10.c1.c.c.b, rn3_10.c1.c.c.m, rn3_10.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c1.y = RectifiedLinear (rn3_10.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c2.c.c = Convolution (rn3_10.c2.W, rn3_10.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_10.c2.c.y = BatchNormalization (rn3_10.c2.c.c, rn3_10.c2.c.sc, rn3_10.c2.c.b, rn3_10.c2.c.m, rn3_10.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.p = Plus (rn3_10.c2.c.y, rn3_9.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_10.y = RectifiedLinear (rn3_10.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.c.c.c = Convolution (rn3_11.c1.c.W, rn3_10.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c1.c.c.y = BatchNormalization (rn3_11.c1.c.c.c, rn3_11.c1.c.c.sc, rn3_11.c1.c.c.b, rn3_11.c1.c.c.m, rn3_11.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c1.y = RectifiedLinear (rn3_11.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c2.c.c = Convolution (rn3_11.c2.W, rn3_11.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_11.c2.c.y = BatchNormalization (rn3_11.c2.c.c, rn3_11.c2.c.sc, rn3_11.c2.c.b, rn3_11.c2.c.m, rn3_11.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.p = Plus (rn3_11.c2.c.y, rn3_10.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_11.y = RectifiedLinear (rn3_11.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.c.c.c = Convolution (rn3_12.c1.c.W, rn3_11.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c1.c.c.y = BatchNormalization (rn3_12.c1.c.c.c, rn3_12.c1.c.c.sc, rn3_12.c1.c.c.b, rn3_12.c1.c.c.m, rn3_12.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c1.y = RectifiedLinear (rn3_12.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c2.c.c = Convolution (rn3_12.c2.W, rn3_12.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_12.c2.c.y = BatchNormalization (rn3_12.c2.c.c, rn3_12.c2.c.sc, rn3_12.c2.c.b, rn3_12.c2.c.m, rn3_12.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.p = Plus (rn3_12.c2.c.y, rn3_11.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_12.y = RectifiedLinear (rn3_12.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.c.c.c = Convolution (rn3_13.c1.c.W, rn3_12.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c1.c.c.y = BatchNormalization (rn3_13.c1.c.c.c, rn3_13.c1.c.c.sc, rn3_13.c1.c.c.b, rn3_13.c1.c.c.m, rn3_13.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c1.y = RectifiedLinear (rn3_13.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c2.c.c = Convolution (rn3_13.c2.W, rn3_13.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_13.c2.c.y = BatchNormalization (rn3_13.c2.c.c, rn3_13.c2.c.sc, rn3_13.c2.c.b, rn3_13.c2.c.m, rn3_13.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.p = Plus (rn3_13.c2.c.y, rn3_12.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_13.y = RectifiedLinear (rn3_13.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.c.c.c = Convolution (rn3_14.c1.c.W, rn3_13.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c1.c.c.y = BatchNormalization (rn3_14.c1.c.c.c, rn3_14.c1.c.c.sc, rn3_14.c1.c.c.b, rn3_14.c1.c.c.m, rn3_14.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c1.y = RectifiedLinear (rn3_14.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c2.c.c = Convolution (rn3_14.c2.W, rn3_14.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_14.c2.c.y = BatchNormalization (rn3_14.c2.c.c, rn3_14.c2.c.sc, rn3_14.c2.c.b, rn3_14.c2.c.m, rn3_14.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.p = Plus (rn3_14.c2.c.y, rn3_13.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_14.y = RectifiedLinear (rn3_14.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.c.c.c = Convolution (rn3_15.c1.c.W, rn3_14.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c1.c.c.y = BatchNormalization (rn3_15.c1.c.c.c, rn3_15.c1.c.c.sc, rn3_15.c1.c.c.b, rn3_15.c1.c.c.m, rn3_15.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c1.y = RectifiedLinear (rn3_15.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c2.c.c = Convolution (rn3_15.c2.W, rn3_15.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_15.c2.c.y = BatchNormalization (rn3_15.c2.c.c, rn3_15.c2.c.sc, rn3_15.c2.c.b, rn3_15.c2.c.m, rn3_15.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.p = Plus (rn3_15.c2.c.y, rn3_14.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_15.y = RectifiedLinear (rn3_15.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.c.c.c = Convolution (rn3_16.c1.c.W, rn3_15.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c1.c.c.y = BatchNormalization (rn3_16.c1.c.c.c, rn3_16.c1.c.c.sc, rn3_16.c1.c.c.b, rn3_16.c1.c.c.m, rn3_16.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c1.y = RectifiedLinear (rn3_16.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c2.c.c = Convolution (rn3_16.c2.W, rn3_16.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_16.c2.c.y = BatchNormalization (rn3_16.c2.c.c, rn3_16.c2.c.sc, rn3_16.c2.c.b, rn3_16.c2.c.m, rn3_16.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.p = Plus (rn3_16.c2.c.y, rn3_15.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_16.y = RectifiedLinear (rn3_16.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.c.c.c = Convolution (rn3_17.c1.c.W, rn3_16.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c1.c.c.y = BatchNormalization (rn3_17.c1.c.c.c, rn3_17.c1.c.c.sc, rn3_17.c1.c.c.b, rn3_17.c1.c.c.m, rn3_17.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c1.y = RectifiedLinear (rn3_17.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c2.c.c = Convolution (rn3_17.c2.W, rn3_17.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_17.c2.c.y = BatchNormalization (rn3_17.c2.c.c, rn3_17.c2.c.sc, rn3_17.c2.c.b, rn3_17.c2.c.m, rn3_17.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.p = Plus (rn3_17.c2.c.y, rn3_16.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_17.y = RectifiedLinear (rn3_17.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.c.c.c = Convolution (rn3_18.c1.c.W, rn3_17.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.c.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c1.c.c.y = BatchNormalization (rn3_18.c1.c.c.c, rn3_18.c1.c.c.sc, rn3_18.c1.c.c.b, rn3_18.c1.c.c.m, rn3_18.c1.c.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c1.y = RectifiedLinear (rn3_18.c1.c.c.y) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c2.c.c = Convolution (rn3_18.c2.W, rn3_18.c1.y) : [64 x 576], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.c2.c.sc = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.b = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.m = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.v = LearnableParameter() :  -> [64 x 1]
Validating --> rn3_18.c2.c.y = BatchNormalization (rn3_18.c2.c.c, rn3_18.c2.c.sc, rn3_18.c2.c.b, rn3_18.c2.c.m, rn3_18.c2.c.v) : [8 x 8 x 64 x *1], [64 x 1], [64 x 1], [64 x 1], [64 x 1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.p = Plus (rn3_18.c2.c.y, rn3_17.y) : [8 x 8 x 64 x *1], [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> rn3_18.y = RectifiedLinear (rn3_18.p) : [8 x 8 x 64 x *1] -> [8 x 8 x 64 x *1]
Validating --> pool = AveragePooling (rn3_18.y) : [8 x 8 x 64 x *1] -> [1 x 1 x 64 x *1]
Validating --> OutputNodes.t = Times (OutputNodes.W, pool) : [10 x 1 x 1 x 64], [1 x 1 x 64 x *1] -> [10 x *1]
Validating --> OutputNodes.b = LearnableParameter() :  -> [10]
Validating --> OutputNodes.z = Plus (OutputNodes.t, OutputNodes.b) : [10 x *1], [10] -> [10 x *1]
Validating --> CE = CrossEntropyWithSoftmax (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]
Validating --> Err = ClassificationError (labels, OutputNodes.z) : [10 x *1], [10 x *1] -> [1]

Validating network. 390 nodes to process in pass 2.


Validating network, final pass.

conv1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 3, Output: 32 x 32 x 16, Kernel: 3 x 3 x 3, Map: 1 x 1 x 16, Stride: 1 x 1 x 3, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn1_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 32 x 32 x 16, Kernel: 3 x 3 x 16, Map: 1 x 1 x 16, Stride: 1 x 1 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 3 x 3 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 32 x 32 x 16, Output: 16 x 16 x 32, Kernel: 1 x 1 x 16, Map: 1 x 1 x 32, Stride: 2 x 2 x 16, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn2_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 16 x 16 x 32, Kernel: 3 x 3 x 32, Map: 1 x 1 x 32, Stride: 1 x 1 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 3 x 3 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_1.c_proj.c: using cuDNN convolution engine for geometry: Input: 16 x 16 x 32, Output: 8 x 8 x 64, Kernel: 1 x 1 x 32, Map: 1 x 1 x 64, Stride: 2 x 2 x 32, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_2.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_3.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_4.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_5.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_6.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_7.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_7.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_8.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_8.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_9.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_9.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_10.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_10.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_11.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_11.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_12.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_12.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_13.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_13.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_14.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_14.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_15.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_15.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_16.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_16.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_17.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_17.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_18.c1.c.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
rn3_18.c2.c.c: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 8 x 8 x 64, Kernel: 3 x 3 x 64, Map: 1 x 1 x 64, Stride: 1 x 1 x 64, Sharing: (1), AutoPad: (1), LowerPad: 0, UpperPad: 0.
Using CNTK batch normalization engine.
pool: using cuDNN convolution engine for geometry: Input: 8 x 8 x 64, Output: 1 x 1 x 64, Kernel: 8 x 8 x 1, Map: 1, Stride: 1 x 1 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.



Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 949 matrices, 0 are shared as 0, and 949 are not shared.


12/15/2016 08:30:27: Minibatch[1-200]: Err = 0.90250000 * 3200; CE = 1127.78256866 * 3200
12/15/2016 08:30:33: Minibatch[201-400]: Err = 0.90187500 * 3200; CE = 1082.21237762 * 3200
12/15/2016 08:30:38: Minibatch[401-600]: Err = 0.89656250 * 3200; CE = 1102.29771484 * 3200
12/15/2016 08:30:39: Minibatch[601-625]: Err = 0.89250000 * 400; CE = 1117.64145996 * 400
12/15/2016 08:30:39: Final Results: Minibatch[1-625]: Err = 0.90000000 * 10000; CE = 1104.63930996 * 10000; perplexity = 1.#INF0000

12/15/2016 08:30:39: Action "test" complete.

12/15/2016 08:30:39: __COMPLETED__