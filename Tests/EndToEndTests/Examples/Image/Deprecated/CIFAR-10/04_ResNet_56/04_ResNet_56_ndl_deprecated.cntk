# Note: This sample uses the deprecated NdlNetworkBuilder.
#       An updated version using BrainScript is coming soon.
#       Please find updated samples on Github, https://github.com/Microsoft/CNTK/tree/master/Examples /...
#
RootDir = "."

ConfigDir = "$RootDir$"
DataDir = "$RootDir$"
OutputDir = "$RootDir$/Output"
ModelDir = "$OutputDir$/Models"

ndlMacros="$ConfigDir$/../Macros.ndl"

precision="float"

deviceId = 0
imageLayout = "cudnn"
# override the above as follows when running on CPU:
# deviceId = -1

# If set to true, always initialize the network on CPU, making initialization consistent across CPU and GPU targets (for testing).
initOnCPUOnly=true

prefetch="true"
parallelTrain="false"

command=Train:Test

stderr="$OutputDir$/04_ResNet_56"
traceLevel=1
numMBsToShowResult=200

Proj16to32Filename = "$ConfigDir$/../16to32.txt"
Proj32to64Filename = "$ConfigDir$/../32to64.txt"

Train=[
    action="train"
    modelPath="$ModelDir$/04_ResNet_56"

     NDLNetworkBuilder=[
        networkDescription="$ConfigDir$/04_ResNet_56.ndl"
    ]
    
    SGD=[
        epochSize=0
        minibatchSize=128
        # Note that learning rates are 10x more than in the paper due to a different
        # momentum update rule in CNTK: v{t + 1} = lr*(1 - momentum)*g{t + 1} + momentum*v{t}
        learningRatesPerMB=0.1*1:1.0*80:0.1*40:0.01
        momentumPerMB=0.9
        maxEpochs=160
        L2RegWeight=0.0001
        dropoutRate=0
        
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
    ]
    
    reader=[
        readerType="ImageReader"
        file="$DataDir$/train_map.txt"
        randomize="auto"
        features=[
            width=32
            height=32
            channels=3
            cropType="RandomSide"
            sideRatio=0.8
            jitterType="UniRatio"
            interpolations="linear"
            meanFile="$DataDir$/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]

Test=[
    action="test"
    modelPath="$ModelDir$/04_ResNet_56"
    # Set minibatch size for testing.
    minibatchSize=512

    reader=[
        readerType="ImageReader"
        file="$DataDir$/test_map.txt"
        randomize="none"
        features=[
            width=32
            height=32
            channels=3
            cropType="Center"
            sideRatio=1
            jitterType="UniRatio"
            interpolations="linear"
            meanFile="$DataDir$/CIFAR-10_mean.xml"
        ]
        labels=[
            labelDim=10
        ]
    ]    
]
