CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu DeviceId=0 timestamping=true Simple_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug 16 2016 02:54:53
		Last modified date: Fri Aug 12 05:31:21 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
		Built by svcphil on Philly-Pool3
		Build Path: c:\Jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
08/16/2016 03:04:23: -------------------------------------------------------------------
08/16/2016 03:04:23: Build info: 

08/16/2016 03:04:23: 		Built time: Aug 16 2016 02:54:53
08/16/2016 03:04:23: 		Last modified date: Fri Aug 12 05:31:21 2016
08/16/2016 03:04:23: 		Build type: Release
08/16/2016 03:04:23: 		Build target: GPU
08/16/2016 03:04:23: 		With 1bit-SGD: no
08/16/2016 03:04:23: 		Math lib: mkl
08/16/2016 03:04:23: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/16/2016 03:04:23: 		CUB_PATH: c:\src\cub-1.4.1
08/16/2016 03:04:23: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/16/2016 03:04:23: 		Build Branch: HEAD
08/16/2016 03:04:23: 		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
08/16/2016 03:04:23: 		Built by svcphil on Philly-Pool3
08/16/2016 03:04:23: 		Build Path: c:\Jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
08/16/2016 03:04:23: -------------------------------------------------------------------
08/16/2016 03:04:26: -------------------------------------------------------------------
08/16/2016 03:04:26: GPU info:

08/16/2016 03:04:26: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:26: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:26: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:26: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:26: -------------------------------------------------------------------

08/16/2016 03:04:26: Running on DPHAIM-24 at 2016/08/16 03:04:26
08/16/2016 03:04:26: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu  DeviceId=0  timestamping=true  Simple_Demo_Train=[SGD=[maxEpochs=3]]



08/16/2016 03:04:26: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/16/2016 03:04:26: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "$OutputDir$/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "$DataDir$/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
DeviceId=0
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 03:04:26: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/16/2016 03:04:26: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/16/2016 03:04:26: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
DeviceId=0
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 03:04:26: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/16/2016 03:04:26: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Simple.cntk:command=Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
configparameters: Simple.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
configparameters: Simple.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:deviceId=0
configparameters: Simple.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models
configparameters: Simple.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn
configparameters: Simple.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
configparameters: Simple.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Simple.cntk:precision=float
configparameters: Simple.cntk:RootDir=..
configparameters: Simple.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu
configparameters: Simple.cntk:Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]

configparameters: Simple.cntk:Simple_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Simple.cntk:Simple_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Simple.cntk:timestamping=true
configparameters: Simple.cntk:traceLevel=1
08/16/2016 03:04:26: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/16/2016 03:04:26: Commands: Simple_Demo_Train Simple_Demo_Test Simple_Demo_Output
08/16/2016 03:04:26: Precision = "float"
08/16/2016 03:04:26: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn
08/16/2016 03:04:26: CNTKCommandTrainInfo: Simple_Demo_Train : 3
08/16/2016 03:04:26: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/16/2016 03:04:26: ##############################################################################
08/16/2016 03:04:26: #                                                                            #
08/16/2016 03:04:26: # Action "train"                                                             #
08/16/2016 03:04:26: #                                                                            #
08/16/2016 03:04:26: ##############################################################################

08/16/2016 03:04:26: CNTKCommandTrainBegin: Simple_Demo_Train
SimpleNetworkBuilder Using GPU 0

08/16/2016 03:04:26: Creating virgin network.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- 0.000000.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- uniform(seed=1, range=0.050000*1.000000, onCPU=false).
Microsoft::MSR::CNTK::GPUMatrix<ElemType>::SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- uniform(seed=2, range=0.050000*1.000000, onCPU=false).
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- uniform(seed=3, range=0.050000*1.000000, onCPU=false).
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/16/2016 03:04:26: Created model with 25 nodes on GPU 0.

08/16/2016 03:04:26: Training criterion node(s):
08/16/2016 03:04:26: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/16/2016 03:04:26: Evaluation criterion node(s):
08/16/2016 03:04:26: 	EvalClassificationError = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 40 matrices, 19 are shared as 8, and 21 are not shared.

	{ W1 : [50 x 50] (gradient)
	  W1*H1+B1 : [50 x 1 x *] }
	{ W0*features+B0 : [50 x 1 x *] (gradient)
	  W1*H1 : [50 x 1 x *] }
	{ B0 : [50 x 1] (gradient)
	  H1 : [50 x 1 x *] (gradient)
	  W1*H1+B1 : [50 x 1 x *] (gradient)
	  W2*H1 : [2 x 1 x *] }
	{ H2 : [50 x 1 x *]
	  W1*H1 : [50 x 1 x *] (gradient) }
	{ B1 : [50 x 1] (gradient)
	  H2 : [50 x 1 x *] (gradient)
	  HLast : [2 x 1 x *] (gradient) }
	{ H1 : [50 x 1 x *]
	  W0*features : [50 x *] (gradient) }
	{ W0 : [50 x 2] (gradient)
	  W0*features+B0 : [50 x 1 x *] }
	{ HLast : [2 x 1 x *]
	  W2 : [2 x 50] (gradient) }


08/16/2016 03:04:26: Training 2802 parameters in 6 out of 6 parameter tensors and 15 nodes with gradient:

08/16/2016 03:04:26: 	Node 'B0' (LearnableParameter operation) : [50 x 1]
08/16/2016 03:04:26: 	Node 'B1' (LearnableParameter operation) : [50 x 1]
08/16/2016 03:04:26: 	Node 'B2' (LearnableParameter operation) : [2 x 1]
08/16/2016 03:04:26: 	Node 'W0' (LearnableParameter operation) : [50 x 2]
08/16/2016 03:04:26: 	Node 'W1' (LearnableParameter operation) : [50 x 50]
08/16/2016 03:04:26: 	Node 'W2' (LearnableParameter operation) : [2 x 50]


08/16/2016 03:04:26: Precomputing --> 3 PreCompute nodes found.

08/16/2016 03:04:26: 	MeanOfFeatures = Mean()
08/16/2016 03:04:26: 	InvStdOfFeatures = InvStdDev()
08/16/2016 03:04:26: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 03:04:27: Precomputing --> Completed.


08/16/2016 03:04:27: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 03:04:27: Starting minibatch loop.
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.70124231 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0194s; samplesPerSecond = 12887.9
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.76372424 * 250; EvalClassificationError = 0.46400000 * 250; time = 0.0179s; samplesPerSecond = 13952.5
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.72703027 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0181s; samplesPerSecond = 13829.0
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.73895923 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0178s; samplesPerSecond = 14035.5
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.70621924 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0178s; samplesPerSecond = 14078.2
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.74767041 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0177s; samplesPerSecond = 14152.3
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.75094434 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0181s; samplesPerSecond = 13803.8
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.78058936 * 250; EvalClassificationError = 0.48400000 * 250; time = 0.0176s; samplesPerSecond = 14213.4
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.70407129 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0180s; samplesPerSecond = 13910.5
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.69555762 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0178s; samplesPerSecond = 14074.2
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.70626123 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0178s; samplesPerSecond = 14061.5
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.74540430 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0178s; samplesPerSecond = 14030.8
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.70824414 * 250; EvalClassificationError = 0.47600000 * 250; time = 0.0179s; samplesPerSecond = 14003.2
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.69895020 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0179s; samplesPerSecond = 13995.4
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.70353223 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0176s; samplesPerSecond = 14198.1
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.69346387 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0177s; samplesPerSecond = 14153.9
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.74449902 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0177s; samplesPerSecond = 14157.1
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.73767969 * 250; EvalClassificationError = 0.52000000 * 250; time = 0.0176s; samplesPerSecond = 14175.6
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.71876855 * 250; EvalClassificationError = 0.48400000 * 250; time = 0.0179s; samplesPerSecond = 13987.6
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.71509473 * 250; EvalClassificationError = 0.50400000 * 250; time = 0.0180s; samplesPerSecond = 13914.4
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.69956152 * 250; EvalClassificationError = 0.52000000 * 250; time = 0.0179s; samplesPerSecond = 13953.2
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.69785937 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0179s; samplesPerSecond = 13960.2
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.70736035 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0177s; samplesPerSecond = 14094.8
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.69820508 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0176s; samplesPerSecond = 14205.4
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.69537109 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0178s; samplesPerSecond = 14067.1
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69347266 * 250; EvalClassificationError = 0.51200000 * 250; time = 0.0179s; samplesPerSecond = 13982.1
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.70801172 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0178s; samplesPerSecond = 14023.7
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.69131641 * 250; EvalClassificationError = 0.46800000 * 250; time = 0.0177s; samplesPerSecond = 14152.3
08/16/2016 03:04:27:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.70370312 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0178s; samplesPerSecond = 14023.7
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.71200195 * 250; EvalClassificationError = 0.43600000 * 250; time = 0.0177s; samplesPerSecond = 14133.1
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.69506836 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0178s; samplesPerSecond = 14056.0
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69935352 * 250; EvalClassificationError = 0.51600000 * 250; time = 0.0179s; samplesPerSecond = 13976.6
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.69887109 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0178s; samplesPerSecond = 14018.2
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.69604492 * 250; EvalClassificationError = 0.49200000 * 250; time = 0.0180s; samplesPerSecond = 13874.2
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.69011719 * 250; EvalClassificationError = 0.48800000 * 250; time = 0.0181s; samplesPerSecond = 13820.6
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.68419531 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0181s; samplesPerSecond = 13831.3
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.67551367 * 250; EvalClassificationError = 0.32400000 * 250; time = 0.0177s; samplesPerSecond = 14140.3
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.67028516 * 250; EvalClassificationError = 0.40000000 * 250; time = 0.0180s; samplesPerSecond = 13868.1
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.65152734 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0179s; samplesPerSecond = 13937.7
08/16/2016 03:04:28:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.63594727 * 250; EvalClassificationError = 0.22000000 * 250; time = 0.0178s; samplesPerSecond = 14028.4
08/16/2016 03:04:28: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.70729233 * 10000; EvalClassificationError = 0.47740000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=0.717672s
08/16/2016 03:04:28: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn.1'

08/16/2016 03:04:28: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

08/16/2016 03:04:28: Starting minibatch loop.
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.61492108 * 250; EvalClassificationError = 0.26800000 * 250; time = 0.0183s; samplesPerSecond = 13687.4
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.59171271 * 250; EvalClassificationError = 0.28400000 * 250; time = 0.0180s; samplesPerSecond = 13905.9
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.53591638 * 250; EvalClassificationError = 0.20000000 * 250; time = 0.0178s; samplesPerSecond = 14045.7
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.51872742 * 250; EvalClassificationError = 0.14000000 * 250; time = 0.0181s; samplesPerSecond = 13821.3
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.48384375 * 250; EvalClassificationError = 0.12400000 * 250; time = 0.0177s; samplesPerSecond = 14094.0
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.43163501 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0181s; samplesPerSecond = 13790.8
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.38970386 * 250; EvalClassificationError = 0.12400000 * 250; time = 0.0180s; samplesPerSecond = 13915.9
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.33681616 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0180s; samplesPerSecond = 13862.7
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.31352393 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0178s; samplesPerSecond = 14010.3
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.26829492 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0179s; samplesPerSecond = 13966.5
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.24240820 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0177s; samplesPerSecond = 14094.0
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.21015820 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0179s; samplesPerSecond = 13976.6
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.22358789 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0177s; samplesPerSecond = 14153.1
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.20496631 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0181s; samplesPerSecond = 13776.4
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.20070508 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0175s; samplesPerSecond = 14307.0
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.19224707 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0180s; samplesPerSecond = 13886.6
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.19326563 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0176s; samplesPerSecond = 14189.2
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.21712451 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0177s; samplesPerSecond = 14109.1
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.17562354 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0177s; samplesPerSecond = 14125.9
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.18186035 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0177s; samplesPerSecond = 14111.5
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.14065234 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0179s; samplesPerSecond = 13957.9
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.17710254 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0177s; samplesPerSecond = 14107.6
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.13001953 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0176s; samplesPerSecond = 14178.0
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.21622949 * 250; EvalClassificationError = 0.10000000 * 250; time = 0.0179s; samplesPerSecond = 13949.3
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.21902246 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0182s; samplesPerSecond = 13726.5
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.18068799 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0179s; samplesPerSecond = 13998.5
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16232471 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0176s; samplesPerSecond = 14165.1
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.13792139 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0177s; samplesPerSecond = 14102.8
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16526709 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0181s; samplesPerSecond = 13800.7
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.14743457 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0177s; samplesPerSecond = 14108.4
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.15089160 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0178s; samplesPerSecond = 14053.6
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.12636230 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0179s; samplesPerSecond = 13932.2
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.16735547 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0176s; samplesPerSecond = 14164.3
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.14530957 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0178s; samplesPerSecond = 14006.4
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.13859570 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0176s; samplesPerSecond = 14166.7
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.14215234 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0179s; samplesPerSecond = 13940.0
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.15903027 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0178s; samplesPerSecond = 14069.4
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.16232520 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0177s; samplesPerSecond = 14160.3
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13596484 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0176s; samplesPerSecond = 14198.9
08/16/2016 03:04:28:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.15469434 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0176s; samplesPerSecond = 14185.2
08/16/2016 03:04:28: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.24215964 * 10000; EvalClassificationError = 0.09440000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=0.71504s
08/16/2016 03:04:28: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn.2'

08/16/2016 03:04:28: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

08/16/2016 03:04:28: Starting minibatch loop.
08/16/2016 03:04:28:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.18305315 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0183s; samplesPerSecond = 13632.2
08/16/2016 03:04:28:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.12945729 * 250; EvalClassificationError = 0.04800000 * 250; time = 0.0177s; samplesPerSecond = 14137.9
08/16/2016 03:04:28:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.17735931 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0180s; samplesPerSecond = 13886.6
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.14128339 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0180s; samplesPerSecond = 13903.6
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.16558209 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0176s; samplesPerSecond = 14173.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.19102692 * 250; EvalClassificationError = 0.10800000 * 250; time = 0.0178s; samplesPerSecond = 14036.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.12279083 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0181s; samplesPerSecond = 13844.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.16642798 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0178s; samplesPerSecond = 14033.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.12386572 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0177s; samplesPerSecond = 14110.7
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.19928418 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0177s; samplesPerSecond = 14102.8
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.14213635 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0179s; samplesPerSecond = 13957.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.12377087 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0177s; samplesPerSecond = 14088.5
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.16361621 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0178s; samplesPerSecond = 14026.0
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.19886914 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0178s; samplesPerSecond = 14015.8
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.17207544 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0179s; samplesPerSecond = 13935.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.13323437 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0180s; samplesPerSecond = 13901.2
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.14397510 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0180s; samplesPerSecond = 13905.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.20777515 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0179s; samplesPerSecond = 13964.1
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.19094092 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0180s; samplesPerSecond = 13874.2
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.14731372 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0179s; samplesPerSecond = 13942.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.15483569 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0177s; samplesPerSecond = 14117.1
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.13625415 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0177s; samplesPerSecond = 14162.7
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.17354004 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0177s; samplesPerSecond = 14094.0
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.14408350 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0179s; samplesPerSecond = 13929.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.13720044 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0180s; samplesPerSecond = 13895.8
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.14236426 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0178s; samplesPerSecond = 14027.6
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16857861 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0179s; samplesPerSecond = 13968.8
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.18606982 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0180s; samplesPerSecond = 13861.9
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16334619 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0177s; samplesPerSecond = 14094.8
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.15598535 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0179s; samplesPerSecond = 13979.0
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.18848584 * 250; EvalClassificationError = 0.09600000 * 250; time = 0.0178s; samplesPerSecond = 14073.4
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13281348 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0178s; samplesPerSecond = 14067.1
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.14679150 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0178s; samplesPerSecond = 14047.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.13977344 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0178s; samplesPerSecond = 14027.6
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.20015137 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0181s; samplesPerSecond = 13831.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.12582129 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0178s; samplesPerSecond = 14022.1
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.18500098 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0180s; samplesPerSecond = 13907.4
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15147754 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0181s; samplesPerSecond = 13800.0
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.11988379 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0177s; samplesPerSecond = 14089.3
08/16/2016 03:04:29:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.13059082 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0181s; samplesPerSecond = 13797.7
08/16/2016 03:04:29: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15767216 * 10000; EvalClassificationError = 0.07330000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=0.716967s
08/16/2016 03:04:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/Models/simple.dnn'
08/16/2016 03:04:29: CNTKCommandTrainEnd: Simple_Demo_Train

08/16/2016 03:04:29: Action "train" complete.


08/16/2016 03:04:29: ##############################################################################
08/16/2016 03:04:29: #                                                                            #
08/16/2016 03:04:29: # Action "test"                                                              #
08/16/2016 03:04:29: #                                                                            #
08/16/2016 03:04:29: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 2 are shared as 1, and 23 are not shared.

	{ PosteriorProb : [2 x 1 x *1]
	  ScaledLogLikelihood : [2 x 1 x *1] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
08/16/2016 03:04:29: Minibatch[1-1]: EvalClassificationError = 0.04975124 * 603; CrossEntropyWithSoftmax = 0.10845041 * 603
08/16/2016 03:04:29: Final Results: Minibatch[1-1]: EvalClassificationError = 0.04975124 * 603; CrossEntropyWithSoftmax = 0.10845041 * 603; perplexity = 1.11454964

08/16/2016 03:04:29: Action "test" complete.


08/16/2016 03:04:29: ##############################################################################
08/16/2016 03:04:29: #                                                                            #
08/16/2016 03:04:29: # Action "write"                                                             #
08/16/2016 03:04:29: #                                                                            #
08/16/2016 03:04:29: ##############################################################################


Post-processing network...

8 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()
	labels = InputValue()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *2]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *2]
Validating --> MeanOfFeatures = Mean (features) : [2 x *2] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *2] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *2], [2], [2] -> [2 x *2]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *2] -> [50 x *2]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *2] -> [2 x 1 x *2]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *2], [2 x 1] -> [2 x 1 x *2]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *2] -> [2 x 1 x *2]
Validating --> Prior = Mean (labels) : [2 x *2] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *2], [2] -> [2 x 1 x *2]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 3 are shared as 1, and 22 are not shared.

	{ CrossEntropyWithSoftmax : [1]
	  EvalClassificationError : [1]
	  ScaledLogLikelihood : [2 x 1 x *2] }

Minibatch[0]: ActualMBSize = 603
Written to C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_gpu/SimpleOutput*
Total Samples Evaluated = 603

08/16/2016 03:04:29: Action "write" complete.

08/16/2016 03:04:29: __COMPLETED__