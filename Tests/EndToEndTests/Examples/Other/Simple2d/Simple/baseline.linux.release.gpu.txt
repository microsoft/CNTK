=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config/Simple.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data RunDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config OutputDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu DeviceId=0 timestamping=true Simple_Demo_Train=[SGD=[maxEpochs=1]] Simple_Demo_Train=[SGD=[epochSize=100]] Simple_Demo_Train=[reader=[randomize=none]]
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 17:56:15
		Last modified date: Tue May  3 11:36:22 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
		Built by philly on 18750d26eb32
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
05/03/2016 18:19:27: -------------------------------------------------------------------
05/03/2016 18:19:27: Build info: 

05/03/2016 18:19:27: 		Built time: May  3 2016 17:56:15
05/03/2016 18:19:27: 		Last modified date: Tue May  3 11:36:22 2016
05/03/2016 18:19:27: 		Build type: release
05/03/2016 18:19:27: 		Build target: GPU
05/03/2016 18:19:27: 		With 1bit-SGD: no
05/03/2016 18:19:27: 		Math lib: acml
05/03/2016 18:19:27: 		CUDA_PATH: /usr/local/cuda-7.5
05/03/2016 18:19:27: 		CUB_PATH: /usr/local/cub-1.4.1
05/03/2016 18:19:27: 		CUDNN_PATH: /usr/local/cudnn-4.0
05/03/2016 18:19:27: 		Build Branch: HEAD
05/03/2016 18:19:27: 		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
05/03/2016 18:19:27: 		Built by philly on 18750d26eb32
05/03/2016 18:19:27: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
05/03/2016 18:19:27: -------------------------------------------------------------------

05/03/2016 18:19:27: Running on localhost at 2016/05/03 18:19:27
05/03/2016 18:19:27: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config/Simple.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data  RunDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config  OutputDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu  DeviceId=0  timestamping=true  Simple_Demo_Train=[SGD=[maxEpochs=1]]  Simple_Demo_Train=[SGD=[epochSize=100]]  Simple_Demo_Train=[reader=[randomize=none]]



05/03/2016 18:19:27: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/03/2016 18:19:27: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25	
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/SimpleDataTrain.txt"
        miniBatchMode = "partial"
        randomize = "auto"
        verbosity = 1  
        features = [
dim = 2        
start = 0      
        ]
        labels = [
start = 2      
dim = 1        
labelDim = 2   
            labelMappingFile = "$DataDir$/SimpleMapping.txt"
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "$DataDir$/SimpleMapping.txt"
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "UCIFastReader"
        file = "$DataDir$/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "$DataDir$/SimpleMapping.txt"
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "$OutputDir$/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "$DataDir$/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
RunDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
OutputDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
DeviceId=0
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=1]]
Simple_Demo_Train=[SGD=[epochSize=100]]
Simple_Demo_Train=[reader=[randomize=none]]

05/03/2016 18:19:27: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/03/2016 18:19:27: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/03/2016 18:19:27: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25	
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTrain.txt"
        miniBatchMode = "partial"
        randomize = "auto"
        verbosity = 1  
        features = [
dim = 2        
start = 0      
        ]
        labels = [
start = 2      
dim = 1        
labelDim = 2   
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
RunDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
OutputDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
DeviceId=0
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=1]]
Simple_Demo_Train=[SGD=[epochSize=100]]
Simple_Demo_Train=[reader=[randomize=none]]

05/03/2016 18:19:27: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/03/2016 18:19:27: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Simple.cntk:command=Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
configparameters: Simple.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
configparameters: Simple.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
configparameters: Simple.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
configparameters: Simple.cntk:deviceId=0
configparameters: Simple.cntk:ModelDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models
configparameters: Simple.cntk:modelPath=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models/simple.dnn
configparameters: Simple.cntk:OutputDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
configparameters: Simple.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Simple.cntk:precision=float
configparameters: Simple.cntk:RootDir=..
configparameters: Simple.cntk:RunDir=/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu
configparameters: Simple.cntk:Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]

configparameters: Simple.cntk:Simple_Demo_Test=[
    action = "test"
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt"
        randomize = "none"
        features = [
            dim = 2
            start = 0
        ]
        labels = [
            start = 2
            dim = 1
            labelDim = 2
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
]

configparameters: Simple.cntk:Simple_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ErrorPrediction"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25	
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "UCIFastReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTrain.txt"
        miniBatchMode = "partial"
        randomize = "auto"
        verbosity = 1  
        features = [
dim = 2        
start = 0      
        ]
        labels = [
start = 2      
dim = 1        
labelDim = 2   
            labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt"
        ]
    ]
] [SGD=[maxEpochs=1]] [SGD=[epochSize=100]] [reader=[randomize=none]]

configparameters: Simple.cntk:timestamping=true
configparameters: Simple.cntk:traceLevel=1
05/03/2016 18:19:27: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/03/2016 18:19:27: Commands: Simple_Demo_Train Simple_Demo_Test Simple_Demo_Output
05/03/2016 18:19:27: Precision = "float"
05/03/2016 18:19:27: CNTKModelPath: /tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models/simple.dnn
05/03/2016 18:19:27: CNTKCommandTrainInfo: Simple_Demo_Train : 1
05/03/2016 18:19:27: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 1

05/03/2016 18:19:27: ##############################################################################
05/03/2016 18:19:27: #                                                                            #
05/03/2016 18:19:27: # Action "train"                                                             #
05/03/2016 18:19:27: #                                                                            #
05/03/2016 18:19:27: ##############################################################################

05/03/2016 18:19:27: CNTKCommandTrainBegin: Simple_Demo_Train
SimpleNetworkBuilder Using GPU 0
Reading UCI file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTrain.txt

05/03/2016 18:19:27: Creating virgin network.
SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/03/2016 18:19:27: Created model with 25 nodes on GPU 0.

05/03/2016 18:19:27: Training criterion node(s):
05/03/2016 18:19:27: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

05/03/2016 18:19:27: Evaluation criterion node(s):

05/03/2016 18:19:27: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *]] [PosteriorProb Value[2 x 1 x *]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *]] [features Gradient[2 x *]] [labels Gradient[2 x *]] }
0x20d5c58: {[features Value[2 x *]] }
0x2d4a568: {[W0 Value[50 x 2]] }
0x2d59988: {[MeanOfFeatures Value[2]] }
0x2d59e98: {[InvStdOfFeatures Value[2]] }
0x2f12e28: {[W1 Value[50 x 50]] }
0x2f13c88: {[B1 Value[50 x 1]] }
0x2f14fd8: {[W2 Value[2 x 50]] }
0x2f15908: {[B2 Value[2 x 1]] }
0x2f168e8: {[labels Value[2 x *]] }
0x2f17b28: {[Prior Value[2]] }
0x2f1d438: {[EvalErrorPrediction Value[1]] }
0x2f1d5d8: {[ScaledLogLikelihood Value[2 x 1 x *]] }
0x2f1d798: {[CrossEntropyWithSoftmax Value[1]] }
0x2f1dce8: {[W0 Gradient[50 x 2]] [W0*features+B0 Value[50 x 1 x *]] }
0x2f1de58: {[LogOfPrior Value[2]] }
0x2f23468: {[B0 Value[50 x 1]] }
0x31feb68: {[MVNormalizedFeatures Value[2 x *]] }
0x31ff328: {[W0*features Value[50 x *]] }
0x31ff538: {[H1 Value[50 x 1 x *]] [W0*features Gradient[50 x *]] }
0x31ff698: {[W0*features+B0 Gradient[50 x 1 x *]] [W1*H1 Value[50 x 1 x *]] }
0x31ff7f8: {[W1 Gradient[50 x 50]] [W1*H1+B1 Value[50 x 1 x *]] }
0x31ff9b8: {[H2 Value[50 x 1 x *]] [W1*H1 Gradient[50 x 1 x *]] }
0x31ffb78: {[B0 Gradient[50 x 1]] [H1 Gradient[50 x 1 x *]] [W1*H1+B1 Gradient[50 x 1 x *]] [W2*H1 Value[2 x 1 x *]] }
0x31ffd38: {[HLast Value[2 x 1 x *]] [W2 Gradient[2 x 50]] }
0x3200898: {[CrossEntropyWithSoftmax Gradient[1]] }
0x3200a58: {[B1 Gradient[50 x 1]] [H2 Gradient[50 x 1 x *]] [HLast Gradient[2 x 1 x *]] }
0x3200c18: {[W2*H1 Gradient[2 x 1 x *]] }
0x3200dd8: {[B2 Gradient[2 x 1]] }


05/03/2016 18:19:27: Precomputing --> 3 PreCompute nodes found.

05/03/2016 18:19:27: 	MeanOfFeatures = Mean()
05/03/2016 18:19:27: 	InvStdOfFeatures = InvStdDev()
05/03/2016 18:19:27: 	Prior = Mean()
UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 10000 records found.
starting epoch 0 at record count 0, and file position 0
already there from last epoch

05/03/2016 18:19:28: Precomputing --> Completed.


05/03/2016 18:19:28: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
starting epoch 0 at record count 0, and file position 0
already there from last epoch

05/03/2016 18:19:28: Starting minibatch loop.
05/03/2016 18:19:28: Finished Epoch[ 1 of 1]: [Training] CrossEntropyWithSoftmax = 0.70211647 * 100; EvalErrorPrediction = 0.55000000 * 100; totalSamplesSeen = 100; learningRatePerSample = 0.02; epochTime=0.004014s
05/03/2016 18:19:28: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/Models/simple.dnn'
05/03/2016 18:19:28: CNTKCommandTrainEnd: Simple_Demo_Train

05/03/2016 18:19:28: Action "train" complete.


05/03/2016 18:19:28: ##############################################################################
05/03/2016 18:19:28: #                                                                            #
05/03/2016 18:19:28: # Action "test"                                                              #
05/03/2016 18:19:28: #                                                                            #
05/03/2016 18:19:28: ##############################################################################

Reading UCI file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [EvalErrorPrediction Gradient[1]] [H1 Gradient[50 x 1 x *1]] [H2 Gradient[50 x 1 x *1]] [HLast Gradient[2 x 1 x *1]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *1]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *1]] [PosteriorProb Value[2 x 1 x *1]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *1]] [ScaledLogLikelihood Value[2 x 1 x *1]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *1]] [W0*features+B0 Gradient[50 x 1 x *1]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *1]] [W1*H1+B1 Gradient[50 x 1 x *1]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *1]] [features Gradient[2 x *1]] [labels Gradient[2 x *1]] }
0x20cea38: {[B0 Value[50 x 1]] }
0x20cf2a8: {[InvStdOfFeatures Value[2]] }
0x20d5998: {[B2 Value[2 x 1]] }
0x2d4a548: {[MeanOfFeatures Value[2]] }
0x2d59ac8: {[W1 Value[50 x 50]] }
0x2f124b8: {[W0 Value[50 x 2]] }
0x2f18788: {[W2*H1 Value[2 x 1 x *1]] }
0x2f18948: {[HLast Value[2 x 1 x *1]] }
0x2f1d288: {[Prior Value[2]] }
0x2f23468: {[B1 Value[50 x 1]] }
0x31fe448: {[CrossEntropyWithSoftmax Value[1]] }
0x31fe5a8: {[EvalErrorPrediction Value[1]] }
0x31fea98: {[W0*features Value[50 x *1]] }
0x31fec88: {[LogOfPrior Value[2]] }
0x32001e8: {[MVNormalizedFeatures Value[2 x *1]] }
0x3200728: {[W0*features+B0 Value[50 x 1 x *1]] }
0x32008e8: {[H1 Value[50 x 1 x *1]] }
0x3200aa8: {[W1*H1 Value[50 x 1 x *1]] }
0x3200c68: {[W1*H1+B1 Value[50 x 1 x *1]] }
0x3200e28: {[H2 Value[50 x 1 x *1]] }
0x320a248: {[features Value[2 x *1]] }
0x64d2038: {[W2 Value[2 x 50]] }
0x64d48d8: {[labels Value[2 x *1]] }

UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 603 records found.
starting epoch 0 at record count 0, and file position 0
already there from last epoch
05/03/2016 18:19:28: Final Results: Minibatch[1-1]: EvalErrorPrediction = 0.53233831 * 603; CrossEntropyWithSoftmax = 0.69392924 * 603; perplexity = 2.00156473

05/03/2016 18:19:28: Action "test" complete.


05/03/2016 18:19:28: ##############################################################################
05/03/2016 18:19:28: #                                                                            #
05/03/2016 18:19:28: # Action "write"                                                             #
05/03/2016 18:19:28: #                                                                            #
05/03/2016 18:19:28: ##############################################################################

Reading UCI file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest.txt

Post-processing network...

8 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()
	labels = InputValue()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *2]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *2]
Validating --> MeanOfFeatures = Mean (features) : [2 x *2] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *2] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *2], [2], [2] -> [2 x *2]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *2] -> [50 x *2]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *2] -> [2 x 1 x *2]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *2], [2 x 1] -> [2 x 1 x *2]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *2] -> [2 x 1 x *2]
Validating --> Prior = Mean (labels) : [2 x *2] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *2], [2] -> [2 x 1 x *2]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[B0 Gradient[50 x 1]] [B1 Gradient[50 x 1]] [B2 Gradient[2 x 1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [EvalErrorPrediction Gradient[1]] [EvalErrorPrediction Value[1]] [H1 Gradient[50 x 1 x *2]] [H2 Gradient[50 x 1 x *2]] [HLast Gradient[2 x 1 x *2]] [InvStdOfFeatures Gradient[2]] [LogOfPrior Gradient[2]] [MVNormalizedFeatures Gradient[2 x *2]] [MeanOfFeatures Gradient[2]] [PosteriorProb Gradient[2 x 1 x *2]] [Prior Gradient[2]] [ScaledLogLikelihood Gradient[2 x 1 x *2]] [ScaledLogLikelihood Value[2 x 1 x *2]] [W0 Gradient[50 x 2]] [W0*features Gradient[50 x *2]] [W0*features+B0 Gradient[50 x 1 x *2]] [W1 Gradient[50 x 50]] [W1*H1 Gradient[50 x 1 x *2]] [W1*H1+B1 Gradient[50 x 1 x *2]] [W2 Gradient[2 x 50]] [W2*H1 Gradient[2 x 1 x *2]] [features Gradient[2 x *2]] [labels Gradient[2 x *2]] }
0x20cf8f8: {[InvStdOfFeatures Value[2]] }
0x20d2698: {[B1 Value[50 x 1]] }
0x20d29e8: {[B0 Value[50 x 1]] }
0x20d5958: {[B2 Value[2 x 1]] }
0x2d4a648: {[MeanOfFeatures Value[2]] }
0x2d5a2f8: {[W2 Value[2 x 50]] }
0x2f12d48: {[labels Value[2 x *2]] }
0x3208438: {[Prior Value[2]] }
0x3209498: {[W0 Value[50 x 2]] }
0x320a368: {[W1 Value[50 x 50]] }
0x63f0c68: {[PosteriorProb Value[2 x 1 x *2]] }
0x63f11c8: {[W0*features+B0 Value[50 x 1 x *2]] }
0x63f1bd8: {[features Value[2 x *2]] }
0x648a298: {[LogOfPrior Value[2]] }
0x648b558: {[MVNormalizedFeatures Value[2 x *2]] }
0x648bb68: {[W0*features Value[50 x *2]] }
0x648bf18: {[H1 Value[50 x 1 x *2]] }
0x648c0d8: {[W1*H1 Value[50 x 1 x *2]] }
0x648c298: {[W1*H1+B1 Value[50 x 1 x *2]] }
0x648c458: {[H2 Value[50 x 1 x *2]] }
0x648c618: {[W2*H1 Value[2 x 1 x *2]] }
0x648c7d8: {[HLast Value[2 x 1 x *2]] }

UCIFastReader: Starting at epoch 0, counting lines to determine record count...
 603 records found.
starting epoch 0 at record count 0, and file position 0
already there from last epoch
Minibatch[0]: ActualMBSize = 603
Written to /tmp/cntk-test-20160503180114.713822/Examples/Other/Simple2d_Simple@release_gpu/SimpleOutput*
Total Samples Evaluated = 603

05/03/2016 18:19:28: Action "write" complete.

05/03/2016 18:19:28: __COMPLETED__