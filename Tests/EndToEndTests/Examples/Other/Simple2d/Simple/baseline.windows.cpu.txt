CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 268381192 kB
-------------------------------------------------------------------
=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu DeviceId=-1 timestamping=true Simple_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug 16 2016 02:54:53
		Last modified date: Fri Aug 12 05:31:21 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
		Built by svcphil on Philly-Pool3
		Build Path: c:\Jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
08/16/2016 03:04:13: -------------------------------------------------------------------
08/16/2016 03:04:13: Build info: 

08/16/2016 03:04:13: 		Built time: Aug 16 2016 02:54:53
08/16/2016 03:04:13: 		Last modified date: Fri Aug 12 05:31:21 2016
08/16/2016 03:04:13: 		Build type: Release
08/16/2016 03:04:13: 		Build target: GPU
08/16/2016 03:04:13: 		With 1bit-SGD: no
08/16/2016 03:04:13: 		Math lib: mkl
08/16/2016 03:04:13: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
08/16/2016 03:04:13: 		CUB_PATH: c:\src\cub-1.4.1
08/16/2016 03:04:13: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
08/16/2016 03:04:13: 		Build Branch: HEAD
08/16/2016 03:04:13: 		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
08/16/2016 03:04:13: 		Built by svcphil on Philly-Pool3
08/16/2016 03:04:13: 		Build Path: c:\Jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
08/16/2016 03:04:13: -------------------------------------------------------------------
08/16/2016 03:04:16: -------------------------------------------------------------------
08/16/2016 03:04:16: GPU info:

08/16/2016 03:04:16: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:16: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:16: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:16: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3072 MB
08/16/2016 03:04:16: -------------------------------------------------------------------

08/16/2016 03:04:16: Running on DPHAIM-24 at 2016/08/16 03:04:16
08/16/2016 03:04:16: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config/Simple.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu  DeviceId=-1  timestamping=true  Simple_Demo_Train=[SGD=[maxEpochs=3]]



08/16/2016 03:04:16: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/16/2016 03:04:16: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "$OutputDir$/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "$DataDir$/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 03:04:16: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/16/2016 03:04:16: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/16/2016 03:04:16: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 03:04:16: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/16/2016 03:04:16: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Simple.cntk:command=Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
configparameters: Simple.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Config
configparameters: Simple.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data
configparameters: Simple.cntk:deviceId=-1
configparameters: Simple.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models
configparameters: Simple.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn
configparameters: Simple.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
configparameters: Simple.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Simple.cntk:precision=float
configparameters: Simple.cntk:RootDir=..
configparameters: Simple.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu
configparameters: Simple.cntk:Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]

configparameters: Simple.cntk:Simple_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Simple.cntk:Simple_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Other\Simple2d\Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Simple.cntk:timestamping=true
configparameters: Simple.cntk:traceLevel=1
08/16/2016 03:04:16: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/16/2016 03:04:16: Commands: Simple_Demo_Train Simple_Demo_Test Simple_Demo_Output
08/16/2016 03:04:16: Precision = "float"
08/16/2016 03:04:16: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn
08/16/2016 03:04:16: CNTKCommandTrainInfo: Simple_Demo_Train : 3
08/16/2016 03:04:16: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/16/2016 03:04:16: ##############################################################################
08/16/2016 03:04:16: #                                                                            #
08/16/2016 03:04:16: # Action "train"                                                             #
08/16/2016 03:04:16: #                                                                            #
08/16/2016 03:04:16: ##############################################################################

08/16/2016 03:04:16: CNTKCommandTrainBegin: Simple_Demo_Train
SimpleNetworkBuilder Using CPU

08/16/2016 03:04:16: Creating virgin network.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- 0.000000.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- uniform(seed=1, range=0.050000*1.000000, onCPU=false).
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- uniform(seed=2, range=0.050000*1.000000, onCPU=false).
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- uniform(seed=3, range=0.050000*1.000000, onCPU=false).
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/16/2016 03:04:16: Created model with 25 nodes on CPU.

08/16/2016 03:04:16: Training criterion node(s):
08/16/2016 03:04:16: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/16/2016 03:04:16: Evaluation criterion node(s):
08/16/2016 03:04:16: 	EvalClassificationError = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 40 matrices, 19 are shared as 8, and 21 are not shared.

	{ H1 : [50 x 1 x *]
	  W0*features : [50 x *] (gradient) }
	{ W0 : [50 x 2] (gradient)
	  W0*features+B0 : [50 x 1 x *] }
	{ W0*features+B0 : [50 x 1 x *] (gradient)
	  W1*H1 : [50 x 1 x *] }
	{ W1 : [50 x 50] (gradient)
	  W1*H1+B1 : [50 x 1 x *] }
	{ H2 : [50 x 1 x *]
	  W1*H1 : [50 x 1 x *] (gradient) }
	{ B0 : [50 x 1] (gradient)
	  H1 : [50 x 1 x *] (gradient)
	  W1*H1+B1 : [50 x 1 x *] (gradient)
	  W2*H1 : [2 x 1 x *] }
	{ B1 : [50 x 1] (gradient)
	  H2 : [50 x 1 x *] (gradient)
	  HLast : [2 x 1 x *] (gradient) }
	{ HLast : [2 x 1 x *]
	  W2 : [2 x 50] (gradient) }


08/16/2016 03:04:16: Training 2802 parameters in 6 out of 6 parameter tensors and 15 nodes with gradient:

08/16/2016 03:04:16: 	Node 'B0' (LearnableParameter operation) : [50 x 1]
08/16/2016 03:04:16: 	Node 'B1' (LearnableParameter operation) : [50 x 1]
08/16/2016 03:04:16: 	Node 'B2' (LearnableParameter operation) : [2 x 1]
08/16/2016 03:04:16: 	Node 'W0' (LearnableParameter operation) : [50 x 2]
08/16/2016 03:04:16: 	Node 'W1' (LearnableParameter operation) : [50 x 50]
08/16/2016 03:04:16: 	Node 'W2' (LearnableParameter operation) : [2 x 50]


08/16/2016 03:04:16: Precomputing --> 3 PreCompute nodes found.

08/16/2016 03:04:16: 	MeanOfFeatures = Mean()
08/16/2016 03:04:16: 	InvStdOfFeatures = InvStdDev()
08/16/2016 03:04:16: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 03:04:16: Precomputing --> Completed.


08/16/2016 03:04:16: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 03:04:16: Starting minibatch loop.
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.70264496 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0355s; samplesPerSecond = 7041.1
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.76483063 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0281s; samplesPerSecond = 8903.5
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.72648584 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0269s; samplesPerSecond = 9307.5
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.73860254 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0254s; samplesPerSecond = 9858.4
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.70622803 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0248s; samplesPerSecond = 10062.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.74772852 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0246s; samplesPerSecond = 10142.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.75092773 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0253s; samplesPerSecond = 9869.3
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.78004932 * 250; EvalClassificationError = 0.48400000 * 250; time = 0.0250s; samplesPerSecond = 9983.2
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.70444336 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0257s; samplesPerSecond = 9745.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.69544189 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0253s; samplesPerSecond = 9889.6
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.70595947 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0255s; samplesPerSecond = 9823.2
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.74544189 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0250s; samplesPerSecond = 9994.4
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.70809961 * 250; EvalClassificationError = 0.47600000 * 250; time = 0.0253s; samplesPerSecond = 9888.5
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.69884375 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0252s; samplesPerSecond = 9917.5
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.70363086 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0257s; samplesPerSecond = 9717.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.69351758 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0250s; samplesPerSecond = 9998.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.74453613 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0252s; samplesPerSecond = 9901.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.73761426 * 250; EvalClassificationError = 0.52000000 * 250; time = 0.0247s; samplesPerSecond = 10133.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.71868652 * 250; EvalClassificationError = 0.48800000 * 250; time = 0.0256s; samplesPerSecond = 9782.1
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.71496484 * 250; EvalClassificationError = 0.50400000 * 250; time = 0.0249s; samplesPerSecond = 10052.7
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.69961230 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0249s; samplesPerSecond = 10036.1
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.69760645 * 250; EvalClassificationError = 0.49200000 * 250; time = 0.0260s; samplesPerSecond = 9618.3
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.70748047 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0256s; samplesPerSecond = 9771.7
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.69785937 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0253s; samplesPerSecond = 9882.6
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.69483203 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0256s; samplesPerSecond = 9754.6
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69258203 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0238s; samplesPerSecond = 10503.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.70665625 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0245s; samplesPerSecond = 10191.2
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.69031445 * 250; EvalClassificationError = 0.46800000 * 250; time = 0.0241s; samplesPerSecond = 10352.4
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.70169531 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0242s; samplesPerSecond = 10326.3
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.71008398 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0238s; samplesPerSecond = 10486.6
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.69152930 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0242s; samplesPerSecond = 10347.3
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69522656 * 250; EvalClassificationError = 0.51600000 * 250; time = 0.0239s; samplesPerSecond = 10472.1
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.69347070 * 250; EvalClassificationError = 0.49200000 * 250; time = 0.0243s; samplesPerSecond = 10308.9
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.68888281 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0242s; samplesPerSecond = 10329.7
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.68067578 * 250; EvalClassificationError = 0.48400000 * 250; time = 0.0243s; samplesPerSecond = 10280.9
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.66932227 * 250; EvalClassificationError = 0.44400000 * 250; time = 0.0242s; samplesPerSecond = 10317.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.65398437 * 250; EvalClassificationError = 0.24800000 * 250; time = 0.0237s; samplesPerSecond = 10545.4
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.63662500 * 250; EvalClassificationError = 0.32400000 * 250; time = 0.0240s; samplesPerSecond = 10400.6
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.59652344 * 250; EvalClassificationError = 0.04800000 * 250; time = 0.0242s; samplesPerSecond = 10346.8
08/16/2016 03:04:17:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.55820898 * 250; EvalClassificationError = 0.12000000 * 250; time = 0.0238s; samplesPerSecond = 10488.3
08/16/2016 03:04:17: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.70129624 * 10000; EvalClassificationError = 0.46850000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=1.01068s
08/16/2016 03:04:17: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn.1'

08/16/2016 03:04:18: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

08/16/2016 03:04:18: Starting minibatch loop.
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.50449603 * 250; EvalClassificationError = 0.14800000 * 250; time = 0.0230s; samplesPerSecond = 10862.5
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.45593445 * 250; EvalClassificationError = 0.12800000 * 250; time = 0.0229s; samplesPerSecond = 10916.6
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.38063666 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0230s; samplesPerSecond = 10880.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.35197192 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0227s; samplesPerSecond = 11005.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.30828760 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0229s; samplesPerSecond = 10918.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.29232886 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0228s; samplesPerSecond = 10979.4
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.26675781 * 250; EvalClassificationError = 0.09600000 * 250; time = 0.0230s; samplesPerSecond = 10878.6
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.23178394 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0230s; samplesPerSecond = 10857.3
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.23917383 * 250; EvalClassificationError = 0.10000000 * 250; time = 0.0228s; samplesPerSecond = 10954.3
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.21675732 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0227s; samplesPerSecond = 11001.6
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.19885376 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0230s; samplesPerSecond = 10854.5
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.18136646 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0232s; samplesPerSecond = 10786.6
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.19802368 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0231s; samplesPerSecond = 10826.7
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.18948218 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0227s; samplesPerSecond = 10990.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.18990088 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0230s; samplesPerSecond = 10861.1
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.18491504 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0232s; samplesPerSecond = 10772.1
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.18686621 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0232s; samplesPerSecond = 10788.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.21271729 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0232s; samplesPerSecond = 10780.5
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.16924951 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0225s; samplesPerSecond = 11127.4
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.17609473 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0231s; samplesPerSecond = 10845.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.13717920 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0229s; samplesPerSecond = 10921.8
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.17546387 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0233s; samplesPerSecond = 10708.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.12864746 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0228s; samplesPerSecond = 10944.8
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.21596680 * 250; EvalClassificationError = 0.10000000 * 250; time = 0.0231s; samplesPerSecond = 10832.8
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.21857666 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0228s; samplesPerSecond = 10946.7
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.18096436 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0239s; samplesPerSecond = 10463.8
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16132373 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0230s; samplesPerSecond = 10881.4
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.13699268 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0228s; samplesPerSecond = 10960.6
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16551953 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0229s; samplesPerSecond = 10909.4
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.14865527 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0238s; samplesPerSecond = 10483.1
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.15119824 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0226s; samplesPerSecond = 11060.0
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.12673340 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0230s; samplesPerSecond = 10887.1
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.16551514 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0231s; samplesPerSecond = 10808.9
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.14445264 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0233s; samplesPerSecond = 10734.2
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.13810986 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0230s; samplesPerSecond = 10880.4
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.14219189 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0225s; samplesPerSecond = 11107.2
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.15920459 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0225s; samplesPerSecond = 11113.1
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.16245654 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0238s; samplesPerSecond = 10512.2
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13554053 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0228s; samplesPerSecond = 10988.5
08/16/2016 03:04:18:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.15504346 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0228s; samplesPerSecond = 10968.3
08/16/2016 03:04:18: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.20713335 * 10000; EvalClassificationError = 0.08030000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=0.921702s
08/16/2016 03:04:18: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn.2'

08/16/2016 03:04:18: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

08/16/2016 03:04:18: Starting minibatch loop.
08/16/2016 03:04:18:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.18297285 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0231s; samplesPerSecond = 10833.8
08/16/2016 03:04:18:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.12934721 * 250; EvalClassificationError = 0.04800000 * 250; time = 0.0230s; samplesPerSecond = 10872.4
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.17702411 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0225s; samplesPerSecond = 11110.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.14030841 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0228s; samplesPerSecond = 10941.4
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.16429517 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0223s; samplesPerSecond = 11187.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.19154443 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0229s; samplesPerSecond = 10924.7
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.12275391 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0244s; samplesPerSecond = 10245.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.16801855 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0228s; samplesPerSecond = 10987.6
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.12472571 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0230s; samplesPerSecond = 10877.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.19939526 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0229s; samplesPerSecond = 10895.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.14222791 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0227s; samplesPerSecond = 10995.3
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.12374048 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0228s; samplesPerSecond = 10962.0
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.16442969 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0224s; samplesPerSecond = 11142.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.19837036 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0227s; samplesPerSecond = 11003.0
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.17180200 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0235s; samplesPerSecond = 10638.3
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.13326343 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0229s; samplesPerSecond = 10936.6
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.14289917 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0233s; samplesPerSecond = 10727.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.20692944 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0231s; samplesPerSecond = 10827.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.19077197 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0231s; samplesPerSecond = 10817.4
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.14746069 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0227s; samplesPerSecond = 11027.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.15464526 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0227s; samplesPerSecond = 11007.9
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.13673071 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0229s; samplesPerSecond = 10923.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.17348853 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0226s; samplesPerSecond = 11065.4
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.14420581 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0233s; samplesPerSecond = 10725.5
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.13774097 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0228s; samplesPerSecond = 10975.0
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.14177905 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0225s; samplesPerSecond = 11100.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16864648 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0229s; samplesPerSecond = 10928.0
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.18513623 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0228s; samplesPerSecond = 10968.3
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16393555 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0226s; samplesPerSecond = 11067.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.15467676 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0228s; samplesPerSecond = 10969.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.18951318 * 250; EvalClassificationError = 0.09600000 * 250; time = 0.0223s; samplesPerSecond = 11207.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13329639 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0232s; samplesPerSecond = 10793.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.14604785 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0229s; samplesPerSecond = 10894.2
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.13938086 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0229s; samplesPerSecond = 10896.6
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.19969873 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0226s; samplesPerSecond = 11040.9
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.12584180 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0228s; samplesPerSecond = 10949.1
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.18373438 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0232s; samplesPerSecond = 10780.0
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15064795 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0234s; samplesPerSecond = 10683.8
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.11991260 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0229s; samplesPerSecond = 10911.3
08/16/2016 03:04:19:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.13070557 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0230s; samplesPerSecond = 10857.8
08/16/2016 03:04:19: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15755114 * 10000; EvalClassificationError = 0.07370000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=0.918193s
08/16/2016 03:04:19: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/Models/simple.dnn'
08/16/2016 03:04:19: CNTKCommandTrainEnd: Simple_Demo_Train

08/16/2016 03:04:19: Action "train" complete.


08/16/2016 03:04:19: ##############################################################################
08/16/2016 03:04:19: #                                                                            #
08/16/2016 03:04:19: # Action "test"                                                              #
08/16/2016 03:04:19: #                                                                            #
08/16/2016 03:04:19: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 2 are shared as 1, and 23 are not shared.

	{ PosteriorProb : [2 x 1 x *1]
	  ScaledLogLikelihood : [2 x 1 x *1] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
08/16/2016 03:04:19: Minibatch[1-1]: EvalClassificationError = 0.05140962 * 603; CrossEntropyWithSoftmax = 0.10734609 * 603
08/16/2016 03:04:19: Final Results: Minibatch[1-1]: EvalClassificationError = 0.05140962 * 603; CrossEntropyWithSoftmax = 0.10734609 * 603; perplexity = 1.11331949

08/16/2016 03:04:19: Action "test" complete.


08/16/2016 03:04:19: ##############################################################################
08/16/2016 03:04:19: #                                                                            #
08/16/2016 03:04:19: # Action "write"                                                             #
08/16/2016 03:04:19: #                                                                            #
08/16/2016 03:04:19: ##############################################################################


Post-processing network...

8 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()
	labels = InputValue()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *2]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *2]
Validating --> MeanOfFeatures = Mean (features) : [2 x *2] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *2] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *2], [2], [2] -> [2 x *2]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *2] -> [50 x *2]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *2] -> [2 x 1 x *2]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *2], [2 x 1] -> [2 x 1 x *2]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *2] -> [2 x 1 x *2]
Validating --> Prior = Mean (labels) : [2 x *2] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *2], [2] -> [2 x 1 x *2]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 3 are shared as 1, and 22 are not shared.

	{ CrossEntropyWithSoftmax : [1]
	  EvalClassificationError : [1]
	  ScaledLogLikelihood : [2 x 1 x *2] }

Minibatch[0]: ActualMBSize = 603
Written to C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160816030038.674053\Examples\Other\Simple2d_Simple@release_cpu/SimpleOutput*
Total Samples Evaluated = 603

08/16/2016 03:04:19: Action "write" complete.

08/16/2016 03:04:19: __COMPLETED__