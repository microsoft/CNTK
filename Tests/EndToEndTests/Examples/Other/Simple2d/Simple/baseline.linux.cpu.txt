CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config/Simple.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data RunDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config OutputDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu DeviceId=-1 timestamping=true Simple_Demo_Train=[SGD=[maxEpochs=3]]
-------------------------------------------------------------------
Build info: 

		Built time: Aug 16 2016 09:41:56
		Last modified date: Fri Aug 12 07:32:43 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
		Built by philly on f67b30a647de
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
08/16/2016 10:51:34: -------------------------------------------------------------------
08/16/2016 10:51:34: Build info: 

08/16/2016 10:51:34: 		Built time: Aug 16 2016 09:41:56
08/16/2016 10:51:34: 		Last modified date: Fri Aug 12 07:32:43 2016
08/16/2016 10:51:34: 		Build type: release
08/16/2016 10:51:34: 		Build target: GPU
08/16/2016 10:51:34: 		With 1bit-SGD: no
08/16/2016 10:51:34: 		Math lib: mkl
08/16/2016 10:51:34: 		CUDA_PATH: /usr/local/cuda-7.5
08/16/2016 10:51:34: 		CUB_PATH: /usr/local/cub-1.4.1
08/16/2016 10:51:34: 		CUDNN_PATH: /usr/local/cudnn-4.0
08/16/2016 10:51:34: 		Build Branch: HEAD
08/16/2016 10:51:34: 		Build SHA1: 026b1e772b963461e189f8f00aa7ed6951298f84
08/16/2016 10:51:34: 		Built by philly on f67b30a647de
08/16/2016 10:51:34: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/16/2016 10:51:34: -------------------------------------------------------------------
08/16/2016 10:51:35: -------------------------------------------------------------------
08/16/2016 10:51:35: GPU info:

08/16/2016 10:51:35: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/16/2016 10:51:35: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/16/2016 10:51:35: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/16/2016 10:51:35: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
08/16/2016 10:51:35: -------------------------------------------------------------------

08/16/2016 10:51:35: Running on localhost at 2016/08/16 10:51:35
08/16/2016 10:51:35: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config/Simple.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data  RunDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config  OutputDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu  DeviceId=-1  timestamping=true  Simple_Demo_Train=[SGD=[maxEpochs=3]]



08/16/2016 10:51:35: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
08/16/2016 10:51:35: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "$ModelDir$/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "$DataDir$/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "$OutputDir$/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "$DataDir$/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
RunDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
OutputDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 10:51:35: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

08/16/2016 10:51:35: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
08/16/2016 10:51:35: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models"
deviceId = -1
command = Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
precision = "float"
traceLevel = 1
modelPath = "/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn"
outputNodeNames = ScaledLogLikelihood
Simple_Demo_Train = [
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Test = [
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]
Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
RunDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
OutputDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
DeviceId=-1
timestamping=true
Simple_Demo_Train=[SGD=[maxEpochs=3]]

08/16/2016 10:51:35: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

08/16/2016 10:51:35: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: Simple.cntk:command=Simple_Demo_Train:Simple_Demo_Test:Simple_Demo_Output
configparameters: Simple.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Other/Simple2d/Simple/../../../../../../Examples/Other/Simple2d/Config
configparameters: Simple.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
configparameters: Simple.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data
configparameters: Simple.cntk:deviceId=-1
configparameters: Simple.cntk:ModelDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models
configparameters: Simple.cntk:modelPath=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn
configparameters: Simple.cntk:OutputDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
configparameters: Simple.cntk:outputNodeNames=ScaledLogLikelihood
configparameters: Simple.cntk:precision=float
configparameters: Simple.cntk:RootDir=..
configparameters: Simple.cntk:RunDir=/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu
configparameters: Simple.cntk:Simple_Demo_Output=[
    action = "write"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
outputNodeNames = PosteriorProb : labels    
outputPath = "/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/SimpleOutput"     
    format = [
type = "category"                                
labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleMapping.txt" 
sequenceEpilogue = "\t// %s\n"                   
    ]
]

configparameters: Simple.cntk:Simple_Demo_Test=[
    action = "test"
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTest_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
]

configparameters: Simple.cntk:Simple_Demo_Train=[
    action = "train"
    SimpleNetworkBuilder = [
        layerSizes = 2:50*2:2
        trainingCriterion = "CrossEntropyWithSoftmax"
        evalCriterion = "ClassificationError"
        layerTypes = "Sigmoid"
        initValueScale = 1.0
        applyMeanVarNorm = true
        uniformInit = true
        needPrior = true
    ]
    SGD = [
        epochSize = 0 
        minibatchSize = 25  
        learningRatesPerMB = 0.5:0.2*20:0.1
        momentumPerMB = 0.9
        dropoutRate = 0.0
        maxEpochs = 10
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Other/Simple2d/Data/SimpleDataTrain_cntk_text.txt"
        input = [
            features = [
dim = 2        
                format = "dense"
            ]
            labels = [
dim = 2        
                format = "dense"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: Simple.cntk:timestamping=true
configparameters: Simple.cntk:traceLevel=1
08/16/2016 10:51:35: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
08/16/2016 10:51:35: Commands: Simple_Demo_Train Simple_Demo_Test Simple_Demo_Output
08/16/2016 10:51:35: Precision = "float"
08/16/2016 10:51:35: CNTKModelPath: /tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn
08/16/2016 10:51:35: CNTKCommandTrainInfo: Simple_Demo_Train : 3
08/16/2016 10:51:35: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

08/16/2016 10:51:35: ##############################################################################
08/16/2016 10:51:35: #                                                                            #
08/16/2016 10:51:35: # Action "train"                                                             #
08/16/2016 10:51:35: #                                                                            #
08/16/2016 10:51:35: ##############################################################################

08/16/2016 10:51:35: CNTKCommandTrainBegin: Simple_Demo_Train
SimpleNetworkBuilder Using CPU

08/16/2016 10:51:35: Creating virgin network.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- 0.000000.
Node 'W0' (LearnableParameter operation): Initializing Parameter[50 x 2] <- uniform(seed=1, range=0.050000*1.000000, onCPU=false).
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B0' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- 0.000000.
Node 'W1' (LearnableParameter operation): Initializing Parameter[50 x 50] <- uniform(seed=2, range=0.050000*1.000000, onCPU=false).
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'B1' (LearnableParameter operation): Initializing Parameter[50 x 1] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- 0.000000.
Node 'W2' (LearnableParameter operation): Initializing Parameter[2 x 50] <- uniform(seed=3, range=0.050000*1.000000, onCPU=false).
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.
Node 'B2' (LearnableParameter operation): Initializing Parameter[2 x 1] <- 0.000000.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *]
Validating --> MeanOfFeatures = Mean (features) : [2 x *] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *], [2], [2] -> [2 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *] -> [50 x *]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *] -> [50 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *], [50 x 1] -> [50 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *] -> [50 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *] -> [2 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *], [2 x 1] -> [2 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *], [2 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *] -> [2 x 1 x *]
Validating --> Prior = Mean (labels) : [2 x *] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *], [2] -> [2 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

08/16/2016 10:51:35: Created model with 25 nodes on CPU.

08/16/2016 10:51:35: Training criterion node(s):
08/16/2016 10:51:35: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

08/16/2016 10:51:35: Evaluation criterion node(s):
08/16/2016 10:51:35: 	EvalClassificationError = ClassificationError


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 40 matrices, 19 are shared as 8, and 21 are not shared.

	{ W0 : [50 x 2] (gradient)
	  W0*features+B0 : [50 x 1 x *] }
	{ H1 : [50 x 1 x *]
	  W0*features : [50 x *] (gradient) }
	{ W0*features+B0 : [50 x 1 x *] (gradient)
	  W1*H1 : [50 x 1 x *] }
	{ W1 : [50 x 50] (gradient)
	  W1*H1+B1 : [50 x 1 x *] }
	{ H2 : [50 x 1 x *]
	  W1*H1 : [50 x 1 x *] (gradient) }
	{ B0 : [50 x 1] (gradient)
	  H1 : [50 x 1 x *] (gradient)
	  W1*H1+B1 : [50 x 1 x *] (gradient)
	  W2*H1 : [2 x 1 x *] }
	{ HLast : [2 x 1 x *]
	  W2 : [2 x 50] (gradient) }
	{ B1 : [50 x 1] (gradient)
	  H2 : [50 x 1 x *] (gradient)
	  HLast : [2 x 1 x *] (gradient) }


08/16/2016 10:51:35: Training 2802 parameters in 6 out of 6 parameter tensors and 15 nodes with gradient:

08/16/2016 10:51:35: 	Node 'B0' (LearnableParameter operation) : [50 x 1]
08/16/2016 10:51:35: 	Node 'B1' (LearnableParameter operation) : [50 x 1]
08/16/2016 10:51:35: 	Node 'B2' (LearnableParameter operation) : [2 x 1]
08/16/2016 10:51:35: 	Node 'W0' (LearnableParameter operation) : [50 x 2]
08/16/2016 10:51:35: 	Node 'W1' (LearnableParameter operation) : [50 x 50]
08/16/2016 10:51:35: 	Node 'W2' (LearnableParameter operation) : [2 x 50]


08/16/2016 10:51:35: Precomputing --> 3 PreCompute nodes found.

08/16/2016 10:51:35: 	MeanOfFeatures = Mean()
08/16/2016 10:51:35: 	InvStdOfFeatures = InvStdDev()
08/16/2016 10:51:35: 	Prior = Mean()
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 10:51:35: Precomputing --> Completed.


08/16/2016 10:51:35: Starting Epoch 1: learning rate per sample = 0.020000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 0: frames [0..10000] (first sequence at sample 0), data subset 0 of 1

08/16/2016 10:51:35: Starting minibatch loop.
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[   1-  10]: CrossEntropyWithSoftmax = 0.69846765 * 250; EvalClassificationError = 0.50400000 * 250; time = 0.0606s; samplesPerSecond = 4125.1
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  11-  20]: CrossEntropyWithSoftmax = 0.76129944 * 250; EvalClassificationError = 0.46400000 * 250; time = 0.0177s; samplesPerSecond = 14150.7
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  21-  30]: CrossEntropyWithSoftmax = 0.72963208 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0497s; samplesPerSecond = 5028.9
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  31-  40]: CrossEntropyWithSoftmax = 0.74041528 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0333s; samplesPerSecond = 7501.9
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  41-  50]: CrossEntropyWithSoftmax = 0.70611035 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0223s; samplesPerSecond = 11225.9
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  51-  60]: CrossEntropyWithSoftmax = 0.74740723 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0168s; samplesPerSecond = 14876.5
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  61-  70]: CrossEntropyWithSoftmax = 0.75085840 * 250; EvalClassificationError = 0.40400000 * 250; time = 0.0169s; samplesPerSecond = 14758.8
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  71-  80]: CrossEntropyWithSoftmax = 0.78210742 * 250; EvalClassificationError = 0.48400000 * 250; time = 0.0170s; samplesPerSecond = 14729.3
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  81-  90]: CrossEntropyWithSoftmax = 0.70286572 * 250; EvalClassificationError = 0.47200000 * 250; time = 0.0263s; samplesPerSecond = 9508.6
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[  91- 100]: CrossEntropyWithSoftmax = 0.69580322 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0247s; samplesPerSecond = 10135.4
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[ 101- 110]: CrossEntropyWithSoftmax = 0.70703613 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0170s; samplesPerSecond = 14700.7
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[ 111- 120]: CrossEntropyWithSoftmax = 0.74512988 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0169s; samplesPerSecond = 14772.8
08/16/2016 10:51:35:  Epoch[ 1 of 3]-Minibatch[ 121- 130]: CrossEntropyWithSoftmax = 0.70837598 * 250; EvalClassificationError = 0.47600000 * 250; time = 0.0168s; samplesPerSecond = 14850.9
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 131- 140]: CrossEntropyWithSoftmax = 0.69913086 * 250; EvalClassificationError = 0.50000000 * 250; time = 0.0173s; samplesPerSecond = 14456.7
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 141- 150]: CrossEntropyWithSoftmax = 0.70321875 * 250; EvalClassificationError = 0.53600000 * 250; time = 0.0168s; samplesPerSecond = 14899.6
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 151- 160]: CrossEntropyWithSoftmax = 0.69290918 * 250; EvalClassificationError = 0.52400000 * 250; time = 0.0198s; samplesPerSecond = 12597.0
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 161- 170]: CrossEntropyWithSoftmax = 0.74415527 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0141s; samplesPerSecond = 17694.1
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 171- 180]: CrossEntropyWithSoftmax = 0.73745117 * 250; EvalClassificationError = 0.52000000 * 250; time = 0.0172s; samplesPerSecond = 14513.8
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 181- 190]: CrossEntropyWithSoftmax = 0.71849609 * 250; EvalClassificationError = 0.50800000 * 250; time = 0.0200s; samplesPerSecond = 12484.4
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 191- 200]: CrossEntropyWithSoftmax = 0.71476953 * 250; EvalClassificationError = 0.50400000 * 250; time = 0.0284s; samplesPerSecond = 8813.1
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 201- 210]: CrossEntropyWithSoftmax = 0.69918457 * 250; EvalClassificationError = 0.52000000 * 250; time = 0.0212s; samplesPerSecond = 11786.9
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 211- 220]: CrossEntropyWithSoftmax = 0.69749512 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0243s; samplesPerSecond = 10267.4
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 221- 230]: CrossEntropyWithSoftmax = 0.70658887 * 250; EvalClassificationError = 0.54400000 * 250; time = 0.0140s; samplesPerSecond = 17871.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 231- 240]: CrossEntropyWithSoftmax = 0.69760742 * 250; EvalClassificationError = 0.56800000 * 250; time = 0.0170s; samplesPerSecond = 14747.5
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 241- 250]: CrossEntropyWithSoftmax = 0.69499219 * 250; EvalClassificationError = 0.49600000 * 250; time = 0.0169s; samplesPerSecond = 14768.4
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 251- 260]: CrossEntropyWithSoftmax = 0.69291211 * 250; EvalClassificationError = 0.49200000 * 250; time = 0.0294s; samplesPerSecond = 8497.9
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 261- 270]: CrossEntropyWithSoftmax = 0.70718945 * 250; EvalClassificationError = 0.46000000 * 250; time = 0.0336s; samplesPerSecond = 7433.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 271- 280]: CrossEntropyWithSoftmax = 0.69039453 * 250; EvalClassificationError = 0.46800000 * 250; time = 0.0157s; samplesPerSecond = 15957.1
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 281- 290]: CrossEntropyWithSoftmax = 0.70257422 * 250; EvalClassificationError = 0.52800000 * 250; time = 0.0222s; samplesPerSecond = 11244.0
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 291- 300]: CrossEntropyWithSoftmax = 0.71058984 * 250; EvalClassificationError = 0.42800000 * 250; time = 0.0151s; samplesPerSecond = 16568.4
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 301- 310]: CrossEntropyWithSoftmax = 0.69296875 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0177s; samplesPerSecond = 14113.1
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 311- 320]: CrossEntropyWithSoftmax = 0.69641211 * 250; EvalClassificationError = 0.51600000 * 250; time = 0.0251s; samplesPerSecond = 9974.1
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 321- 330]: CrossEntropyWithSoftmax = 0.69531055 * 250; EvalClassificationError = 0.49200000 * 250; time = 0.0164s; samplesPerSecond = 15214.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 331- 340]: CrossEntropyWithSoftmax = 0.69090430 * 250; EvalClassificationError = 0.47600000 * 250; time = 0.0172s; samplesPerSecond = 14501.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 341- 350]: CrossEntropyWithSoftmax = 0.68339063 * 250; EvalClassificationError = 0.48000000 * 250; time = 0.0170s; samplesPerSecond = 14691.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 351- 360]: CrossEntropyWithSoftmax = 0.67383984 * 250; EvalClassificationError = 0.45200000 * 250; time = 0.0170s; samplesPerSecond = 14691.2
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 361- 370]: CrossEntropyWithSoftmax = 0.65904102 * 250; EvalClassificationError = 0.26400000 * 250; time = 0.0239s; samplesPerSecond = 10454.6
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 371- 380]: CrossEntropyWithSoftmax = 0.64259766 * 250; EvalClassificationError = 0.36000000 * 250; time = 0.0186s; samplesPerSecond = 13465.5
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 381- 390]: CrossEntropyWithSoftmax = 0.60433398 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0196s; samplesPerSecond = 12787.7
08/16/2016 10:51:36:  Epoch[ 1 of 3]-Minibatch[ 391- 400]: CrossEntropyWithSoftmax = 0.56497070 * 250; EvalClassificationError = 0.11600000 * 250; time = 0.0142s; samplesPerSecond = 17556.2
08/16/2016 10:51:36: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 0.70222344 * 10000; EvalClassificationError = 0.46820000 * 10000; totalSamplesSeen = 10000; learningRatePerSample = 0.02; epochTime=0.873074s
08/16/2016 10:51:36: SGD: Saving checkpoint model '/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn.1'

08/16/2016 10:51:36: Starting Epoch 2: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 1: frames [10000..20000] (first sequence at sample 10000), data subset 0 of 1

08/16/2016 10:51:36: Starting minibatch loop.
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.50663568 * 250; EvalClassificationError = 0.15200000 * 250; time = 0.0194s; samplesPerSecond = 12857.4
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.45398022 * 250; EvalClassificationError = 0.12000000 * 250; time = 0.0204s; samplesPerSecond = 12253.7
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.37457013 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0168s; samplesPerSecond = 14862.4
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.34124719 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0167s; samplesPerSecond = 14992.5
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.29298340 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0238s; samplesPerSecond = 10498.0
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.27701599 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0332s; samplesPerSecond = 7519.0
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.25128760 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0490s; samplesPerSecond = 5104.9
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.21941431 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0315s; samplesPerSecond = 7933.5
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.22864038 * 250; EvalClassificationError = 0.10000000 * 250; time = 0.0145s; samplesPerSecond = 17220.0
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.20533081 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0193s; samplesPerSecond = 12942.6
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.18820288 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0197s; samplesPerSecond = 12660.2
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.17363208 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0207s; samplesPerSecond = 12054.0
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.18979712 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0400s; samplesPerSecond = 6257.7
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.18266016 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0167s; samplesPerSecond = 15002.4
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.18476245 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0167s; samplesPerSecond = 14997.0
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.17951782 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0381s; samplesPerSecond = 6554.3
08/16/2016 10:51:36:  Epoch[ 2 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.18190771 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0495s; samplesPerSecond = 5048.7
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.21016113 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0245s; samplesPerSecond = 10195.3
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.16539111 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0166s; samplesPerSecond = 15091.2
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.17295947 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0166s; samplesPerSecond = 15059.3
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.13286475 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0134s; samplesPerSecond = 18714.0
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.17238135 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0370s; samplesPerSecond = 6753.5
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.12533740 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0166s; samplesPerSecond = 15029.5
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.21608838 * 250; EvalClassificationError = 0.10000000 * 250; time = 0.0306s; samplesPerSecond = 8160.1
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.21742236 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0164s; samplesPerSecond = 15279.3
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.17923486 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0174s; samplesPerSecond = 14330.8
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16031250 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0165s; samplesPerSecond = 15119.4
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.13486084 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0199s; samplesPerSecond = 12574.8
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16416699 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0162s; samplesPerSecond = 15386.5
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.14665625 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0172s; samplesPerSecond = 14556.9
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.14992627 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0190s; samplesPerSecond = 13191.2
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.12446338 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0165s; samplesPerSecond = 15123.1
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.16560303 * 250; EvalClassificationError = 0.09200000 * 250; time = 0.0169s; samplesPerSecond = 14759.7
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.14359863 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0163s; samplesPerSecond = 15295.2
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.13723389 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0165s; samplesPerSecond = 15156.1
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.14104785 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0206s; samplesPerSecond = 12144.8
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.15801807 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0259s; samplesPerSecond = 9664.1
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.16213721 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0165s; samplesPerSecond = 15138.7
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.13545947 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0167s; samplesPerSecond = 15003.3
08/16/2016 10:51:37:  Epoch[ 2 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.15420410 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0197s; samplesPerSecond = 12690.4
08/16/2016 10:51:37: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 0.20252788 * 10000; EvalClassificationError = 0.07960000 * 10000; totalSamplesSeen = 20000; learningRatePerSample = 0.0080000004; epochTime=0.894097s
08/16/2016 10:51:37: SGD: Saving checkpoint model '/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn.2'

08/16/2016 10:51:37: Starting Epoch 3: learning rate per sample = 0.008000  effective momentum = 0.900000  momentum as time constant = 237.3 samples
BlockRandomizer::StartEpoch: epoch 2: frames [20000..30000] (first sequence at sample 20000), data subset 0 of 1

08/16/2016 10:51:37: Starting minibatch loop.
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[   1-  10, 2.50%]: CrossEntropyWithSoftmax = 0.18365215 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0160s; samplesPerSecond = 15637.7
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  11-  20, 5.00%]: CrossEntropyWithSoftmax = 0.12863173 * 250; EvalClassificationError = 0.04800000 * 250; time = 0.0195s; samplesPerSecond = 12842.9
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  21-  30, 7.50%]: CrossEntropyWithSoftmax = 0.17736676 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0134s; samplesPerSecond = 18714.0
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  31-  40, 10.00%]: CrossEntropyWithSoftmax = 0.14110736 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0137s; samplesPerSecond = 18288.2
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  41-  50, 12.50%]: CrossEntropyWithSoftmax = 0.16524695 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0221s; samplesPerSecond = 11297.4
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  51-  60, 15.00%]: CrossEntropyWithSoftmax = 0.19137244 * 250; EvalClassificationError = 0.10800000 * 250; time = 0.0239s; samplesPerSecond = 10451.5
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  61-  70, 17.50%]: CrossEntropyWithSoftmax = 0.12233600 * 250; EvalClassificationError = 0.04000000 * 250; time = 0.0179s; samplesPerSecond = 13986.0
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  71-  80, 20.00%]: CrossEntropyWithSoftmax = 0.16686743 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0229s; samplesPerSecond = 10916.1
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  81-  90, 22.50%]: CrossEntropyWithSoftmax = 0.12411963 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0179s; samplesPerSecond = 13940.8
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[  91- 100, 25.00%]: CrossEntropyWithSoftmax = 0.19959802 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0211s; samplesPerSecond = 11875.4
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 101- 110, 27.50%]: CrossEntropyWithSoftmax = 0.14190784 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0180s; samplesPerSecond = 13927.6
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 111- 120, 30.00%]: CrossEntropyWithSoftmax = 0.12357324 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0188s; samplesPerSecond = 13270.3
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 121- 130, 32.50%]: CrossEntropyWithSoftmax = 0.16388794 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0180s; samplesPerSecond = 13866.5
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 131- 140, 35.00%]: CrossEntropyWithSoftmax = 0.19857666 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0179s; samplesPerSecond = 13944.7
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 141- 150, 37.50%]: CrossEntropyWithSoftmax = 0.17161865 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0541s; samplesPerSecond = 4625.3
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 151- 160, 40.00%]: CrossEntropyWithSoftmax = 0.13291455 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0204s; samplesPerSecond = 12276.6
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 161- 170, 42.50%]: CrossEntropyWithSoftmax = 0.14355762 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0132s; samplesPerSecond = 18926.5
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 171- 180, 45.00%]: CrossEntropyWithSoftmax = 0.20757080 * 250; EvalClassificationError = 0.10400000 * 250; time = 0.0164s; samplesPerSecond = 15286.8
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 181- 190, 47.50%]: CrossEntropyWithSoftmax = 0.19119531 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0288s; samplesPerSecond = 8688.4
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 191- 200, 50.00%]: CrossEntropyWithSoftmax = 0.14750488 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0101s; samplesPerSecond = 24781.9
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 201- 210, 52.50%]: CrossEntropyWithSoftmax = 0.15454297 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0204s; samplesPerSecond = 12226.7
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 211- 220, 55.00%]: CrossEntropyWithSoftmax = 0.13628662 * 250; EvalClassificationError = 0.04400000 * 250; time = 0.0134s; samplesPerSecond = 18693.0
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 221- 230, 57.50%]: CrossEntropyWithSoftmax = 0.17363599 * 250; EvalClassificationError = 0.08800000 * 250; time = 0.0236s; samplesPerSecond = 10598.6
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 231- 240, 60.00%]: CrossEntropyWithSoftmax = 0.14413379 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0100s; samplesPerSecond = 24942.6
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 241- 250, 62.50%]: CrossEntropyWithSoftmax = 0.13718579 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0195s; samplesPerSecond = 12810.7
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 251- 260, 65.00%]: CrossEntropyWithSoftmax = 0.14220020 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0134s; samplesPerSecond = 18648.4
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 261- 270, 67.50%]: CrossEntropyWithSoftmax = 0.16849121 * 250; EvalClassificationError = 0.06800000 * 250; time = 0.0164s; samplesPerSecond = 15271.8
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 271- 280, 70.00%]: CrossEntropyWithSoftmax = 0.18580225 * 250; EvalClassificationError = 0.08400000 * 250; time = 0.0166s; samplesPerSecond = 15018.6
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 281- 290, 72.50%]: CrossEntropyWithSoftmax = 0.16339307 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0223s; samplesPerSecond = 11232.4
08/16/2016 10:51:37:  Epoch[ 3 of 3]-Minibatch[ 291- 300, 75.00%]: CrossEntropyWithSoftmax = 0.15557813 * 250; EvalClassificationError = 0.07200000 * 250; time = 0.0133s; samplesPerSecond = 18785.7
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 301- 310, 77.50%]: CrossEntropyWithSoftmax = 0.18845215 * 250; EvalClassificationError = 0.09600000 * 250; time = 0.0163s; samplesPerSecond = 15311.1
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 311- 320, 80.00%]: CrossEntropyWithSoftmax = 0.13286035 * 250; EvalClassificationError = 0.05200000 * 250; time = 0.0170s; samplesPerSecond = 14677.4
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 321- 330, 82.50%]: CrossEntropyWithSoftmax = 0.14664014 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0164s; samplesPerSecond = 15248.6
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 331- 340, 85.00%]: CrossEntropyWithSoftmax = 0.13965381 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0143s; samplesPerSecond = 17474.0
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 341- 350, 87.50%]: CrossEntropyWithSoftmax = 0.20020557 * 250; EvalClassificationError = 0.11200000 * 250; time = 0.0196s; samplesPerSecond = 12779.2
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 351- 360, 90.00%]: CrossEntropyWithSoftmax = 0.12576953 * 250; EvalClassificationError = 0.06000000 * 250; time = 0.0197s; samplesPerSecond = 12707.1
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 361- 370, 92.50%]: CrossEntropyWithSoftmax = 0.18509766 * 250; EvalClassificationError = 0.07600000 * 250; time = 0.0422s; samplesPerSecond = 5925.9
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 371- 380, 95.00%]: CrossEntropyWithSoftmax = 0.15134277 * 250; EvalClassificationError = 0.08000000 * 250; time = 0.0391s; samplesPerSecond = 6392.4
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 381- 390, 97.50%]: CrossEntropyWithSoftmax = 0.11977588 * 250; EvalClassificationError = 0.05600000 * 250; time = 0.0355s; samplesPerSecond = 7032.9
08/16/2016 10:51:38:  Epoch[ 3 of 3]-Minibatch[ 391- 400, 100.00%]: CrossEntropyWithSoftmax = 0.13046729 * 250; EvalClassificationError = 0.06400000 * 250; time = 0.0726s; samplesPerSecond = 3443.6
08/16/2016 10:51:38: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 0.15760303 * 10000; EvalClassificationError = 0.07280000 * 10000; totalSamplesSeen = 30000; learningRatePerSample = 0.0080000004; epochTime=0.876577s
08/16/2016 10:51:38: SGD: Saving checkpoint model '/tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/Models/simple.dnn'
08/16/2016 10:51:38: CNTKCommandTrainEnd: Simple_Demo_Train

08/16/2016 10:51:38: Action "train" complete.


08/16/2016 10:51:38: ##############################################################################
08/16/2016 10:51:38: #                                                                            #
08/16/2016 10:51:38: # Action "test"                                                              #
08/16/2016 10:51:38: #                                                                            #
08/16/2016 10:51:38: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *1]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *1]
Validating --> MeanOfFeatures = Mean (features) : [2 x *1] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *1] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *1], [2], [2] -> [2 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *1] -> [50 x *1]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *1], [50 x 1] -> [50 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *1] -> [50 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *1] -> [2 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *1], [2 x 1] -> [2 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *1], [2 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *1] -> [2 x 1 x *1]
Validating --> Prior = Mean (labels) : [2 x *1] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *1], [2] -> [2 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 2 are shared as 1, and 23 are not shared.

	{ PosteriorProb : [2 x 1 x *1]
	  ScaledLogLikelihood : [2 x 1 x *1] }

BlockRandomizer::StartEpoch: epoch 0: frames [0..603] (first sequence at sample 0), data subset 0 of 1
08/16/2016 10:51:38: Minibatch[1-1]: EvalClassificationError = 0.04975124 * 603; CrossEntropyWithSoftmax = 0.10807832 * 603
08/16/2016 10:51:38: Final Results: Minibatch[1-1]: EvalClassificationError = 0.04975124 * 603; CrossEntropyWithSoftmax = 0.10807832 * 603; perplexity = 1.11413500

08/16/2016 10:51:38: Action "test" complete.


08/16/2016 10:51:38: ##############################################################################
08/16/2016 10:51:38: #                                                                            #
08/16/2016 10:51:38: # Action "write"                                                             #
08/16/2016 10:51:38: #                                                                            #
08/16/2016 10:51:38: ##############################################################################


Post-processing network...

8 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalClassificationError = ClassificationError()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()
	labels = InputValue()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [2 x *2]
Validating --> W2 = LearnableParameter() :  -> [2 x 50]
Validating --> W1 = LearnableParameter() :  -> [50 x 50]
Validating --> W0 = LearnableParameter() :  -> [50 x 2]
Validating --> features = InputValue() :  -> [2 x *2]
Validating --> MeanOfFeatures = Mean (features) : [2 x *2] -> [2]
Validating --> InvStdOfFeatures = InvStdDev (features) : [2 x *2] -> [2]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [2 x *2], [2], [2] -> [2 x *2]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [50 x 2], [2 x *2] -> [50 x *2]
Validating --> B0 = LearnableParameter() :  -> [50 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [50 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H1 = Sigmoid (W0*features+B0) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W1*H1 = Times (W1, H1) : [50 x 50], [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> B1 = LearnableParameter() :  -> [50 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [50 x 1 x *2], [50 x 1] -> [50 x 1 x *2]
Validating --> H2 = Sigmoid (W1*H1+B1) : [50 x 1 x *2] -> [50 x 1 x *2]
Validating --> W2*H1 = Times (W2, H2) : [2 x 50], [50 x 1 x *2] -> [2 x 1 x *2]
Validating --> B2 = LearnableParameter() :  -> [2 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [2 x 1 x *2], [2 x 1] -> [2 x 1 x *2]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> EvalClassificationError = ClassificationError (labels, HLast) : [2 x *2], [2 x 1 x *2] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [2 x 1 x *2] -> [2 x 1 x *2]
Validating --> Prior = Mean (labels) : [2 x *2] -> [2]
Validating --> LogOfPrior = Log (Prior) : [2] -> [2]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [2 x 1 x *2], [2] -> [2 x 1 x *2]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 25 matrices, 3 are shared as 1, and 22 are not shared.

	{ CrossEntropyWithSoftmax : [1]
	  EvalClassificationError : [1]
	  ScaledLogLikelihood : [2 x 1 x *2] }

Minibatch[0]: ActualMBSize = 603
Written to /tmp/cntk-test-20160816095502.258817/Examples/Other/Simple2d_Simple@release_cpu/SimpleOutput*
Total Samples Evaluated = 603

08/16/2016 10:51:38: Action "write" complete.

08/16/2016 10:51:38: __COMPLETED__