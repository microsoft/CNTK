model = LoadModel("$CurModel$", format = "cntk")
SetDefaultModel(model)

# Remove FCN8-specific nodes
Delete(pixelwiseError)
Delete(pixelwiseError.pixelNorm)
Delete(pixelwiseError.pixelNorm.z.r)
Delete(pixelwiseError.errSum.r)
Delete(pixelwiseError.diffs)
Delete(pixelwiseError.diffs.ElementTimesArgs[0])
Delete(pixelwiseError.acc.r)
Delete(pixelwiseError.acc._)
Delete(pixelwiseError.outHardmax.isMax)
Delete(pixelwiseError.outHardmax.maxVals.r)
Delete(miouError)
Delete(miouError.miou)
Delete(miouError.norm)
Delete(miouError.norm.z)
Delete(miouError.iouSum.r)
Delete(miouError.iou)
Delete(miouError.reciprocalUnion)
Delete(miouError.reciprocalUnion.z)
Delete(miouError.reciprocalUnion.z.PlusArgs[1])
Delete(miouError.u)
Delete(miouError.unionByClass.r)
Delete(miouError.unionFlat)
Delete(miouError.union)
Delete(miouError.union.MinusArgs[0])
Delete(miouError.i)
Delete(miouError.intersectionByClass.r)
Delete(miouError.intersectionFlat)
Delete(miouError.intersection)
Delete(miouError.labelMasked)
Delete(miouError.outMasked)
Delete(miouError.outHardmax.isMax)
Delete(miouError.outHardmax.maxVals.r)
Delete(BS.Constants.One)
Delete(CE)
Delete(CE.norm_factor)
Delete(CE.norm_factor.z)
Delete(CE.ce_unnorm)
Delete(CE.diff_valid)
Delete(CE.diff)
Delete(CE.logits.r)
Delete(CE.logits_per_class)
Delete(CE.log_sum.r)
Delete(CE.out_shift)
Delete(CE.out_max.r)
Delete(out)
Delete(upsampledFCN8)

SaveModel(model, "$NewModel$", format = "cntk")
