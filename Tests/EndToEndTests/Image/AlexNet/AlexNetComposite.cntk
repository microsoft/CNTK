Train = [
    reader = [
        verbosity = 0
        randomize = true

        # Currently for image reader a single sequence is a chunk
        # so setting randomization window to 1.
        randomizationWindow = 1

        # A list of deserializers to use.
        deserializers = (
            [   
                type = "ImageDeserializer"
                module = "ImageReader"

                # Map file which maps images to labels using the following format:
                # <full path to image><tab><numerical label (0-based class id)>
                # Example:
                # C:\Data\ImageNet\2012\train\n01440764\n01440764_10026.JPEG<tab>0
                file = "$ConfigDir$/train_map.txt"

                # Description of input streams
                input = [
                    features = [
                        transforms = (
                            [
                                type = "Crop"
                                # Possible values: Center, Random. Default: Center
                                cropType = "RandomSide"
                                # Crop scale side ratio. Examples: sideRatio = 0.9, sideRatio = 0.7:0.9.
                                sideRatio = 0.875
                                # Crop scale ratio jitter type.
                                # Possible values: None, UniRatio. Default: None
                                jitterType = "UniRatio"
                            ]:[
                                type = "Scale"
                                width = 227
                                height = 227
                                channels = 3
                                # Interpolation to use when scaling image to width x height size.
                                # Possible values: nearest, linear, cubic, lanczos. Default: linear.
                                interpolations = "linear"
                            ]:[
                                type = "Transpose"
                            ]
                        )
                    ]
                    labels = [
                        labelDim = 1000
                    ]
                ]
            ]
        )
    ]    
]

Test = [
    reader = [
        verbosity = 0
        randomize = false

        # A list of deserializers to use.
        deserializers = (
            [
                type = "ImageDeserializer"
                module = "ImageReader"
                file = "$ConfigDir$/val_map.txt"

                # Description of input streams
                input = [
                    features = [
                        transforms = (
                            [
                                type = "Crop"
                                cropType = "center"
                            ]:[
                                type = "Scale"
                                width = 227
                                height = 227
                                channels = 3
                            ]:[
                                type = "Transpose"
                            ]
                        )
                    ]
                    labels = [
                        labelDim = 1000
                    ]
                ]
            ]
        )
    ]        
]
