<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" InitialTargets="CheckDependencies" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$(SolutionDir)\CNTK.Common.props" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
    <ProjectGuid>{50EF9EE6-5018-453E-A063-F77044EF1A97}</ProjectGuid>
    <IntermediateOutputPath>$(IntDir)obj\</IntermediateOutputPath>
    <BaseIntermediateOutputPath>$(IntDir)obj\</BaseIntermediateOutputPath>
    <OutputPath>$(OutDir)</OutputPath>
    <OutputType>Library</OutputType>
    <PlatformTarget>x64</PlatformTarget>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CNTK</RootNamespace>
    <AssemblyName>CNTKLibraryManaged-2.0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition="$(DebugBuild)">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="$(ReleaseBuild)">
    <DefineConstants>TRACE</DefineConstants>
    <DebugType>pdbonly</DebugType>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <!-- The following definitions are needed in order to make the configuration Debug/Debug_CpuOnly live -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug_CpuOnly|x64'" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <Optimize>true</Optimize>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release_CpuOnly|x64'">
    <Optimize>true</Optimize>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release_NoOpt|x64'">
    <Optimize>false</Optimize>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="SwigProxyClasses\AdditionalLearningOptions.cs" />
    <Compile Include="SwigProxyClasses\Axis.cs" />
    <Compile Include="SwigProxyClasses\AxisVector.cs" />
    <Compile Include="SwigProxyClasses\BackPropState.cs" />
    <Compile Include="SwigProxyClasses\BoolVector.cs" />
    <Compile Include="SwigProxyClasses\BoolVectorVector.cs" />
    <Compile Include="SwigProxyClasses\CNTKLib.cs" />
    <Compile Include="SwigProxyClasses\CNTKLibPINVOKE.cs" />
    <Compile Include="SwigProxyClasses\Constant.cs" />
    <Compile Include="SwigProxyClasses\ConstantVector.cs" />
    <Compile Include="SwigProxyClasses\DataType.cs" />
    <Compile Include="SwigProxyClasses\DeviceDescriptor.cs" />
    <Compile Include="SwigProxyClasses\DeviceDescriptorVector.cs" />
    <Compile Include="SwigProxyClasses\DeviceKind.cs" />
    <Compile Include="SwigProxyClasses\Dictionary.cs" />
    <Compile Include="SwigProxyClasses\DictionaryValue.cs" />
    <Compile Include="SwigProxyClasses\DictionaryValueVector.cs" />
    <Compile Include="SwigProxyClasses\DictionaryVector.cs" />
    <Compile Include="SwigProxyClasses\DistributedCommunicator.cs" />
    <Compile Include="SwigProxyClasses\DistributedLearner.cs" />
    <Compile Include="SwigProxyClasses\DistributedLearnerVector.cs" />
    <Compile Include="SwigProxyClasses\DistributedWorkerDescriptor.cs" />
    <Compile Include="SwigProxyClasses\DoubleVector.cs" />
    <Compile Include="SwigProxyClasses\DoubleVectorVector.cs" />
    <Compile Include="SwigProxyClasses\FloatVector.cs" />
    <Compile Include="SwigProxyClasses\FloatVectorVector.cs" />
    <Compile Include="SwigProxyClasses\Function.cs" />
    <Compile Include="SwigProxyClasses\FunctionVector.cs" />
    <Compile Include="SwigProxyClasses\Learner.cs" />
    <Compile Include="SwigProxyClasses\LearnerVector.cs" />
    <Compile Include="SwigProxyClasses\MaskKind.cs" />
    <Compile Include="SwigProxyClasses\MinibatchData.cs" />
    <Compile Include="SwigProxyClasses\MinibatchInfo.cs" />
    <Compile Include="SwigProxyClasses\MinibatchSource.cs" />
    <Compile Include="SwigProxyClasses\MomentumAsTimeConstantSchedule.cs" />
    <Compile Include="SwigProxyClasses\NDArrayView.cs" />
    <Compile Include="SwigProxyClasses\NDArrayViewBoolVectorPair.cs" />
    <Compile Include="SwigProxyClasses\NDArrayViewNDArrayViewPair.cs" />
    <Compile Include="SwigProxyClasses\NDArrayViewVector.cs" />
    <Compile Include="SwigProxyClasses\NDMask.cs" />
    <Compile Include="SwigProxyClasses\NDShape.cs" />
    <Compile Include="SwigProxyClasses\Parameter.cs" />
    <Compile Include="SwigProxyClasses\ParameterCloningMethod.cs" />
    <Compile Include="SwigProxyClasses\ParameterVector.cs" />
    <Compile Include="SwigProxyClasses\PoolingType.cs" />
    <Compile Include="SwigProxyClasses\PrimitiveOpType.cs" />
    <Compile Include="SwigProxyClasses\QuantizedDistributedCommunicator.cs" />
    <Compile Include="SwigProxyClasses\SizeTDoublePair.cs" />
    <Compile Include="SwigProxyClasses\SizeTDoublePairVector.cs" />
    <Compile Include="SwigProxyClasses\SizeTIntPair.cs" />
    <Compile Include="SwigProxyClasses\SizeTSizeTPair.cs" />
    <Compile Include="SwigProxyClasses\SizeTSizeTPairVector.cs" />
    <Compile Include="SwigProxyClasses\SizeTVector.cs" />
    <Compile Include="SwigProxyClasses\SizeTVectorVector.cs" />
    <Compile Include="SwigProxyClasses\StorageFormat.cs" />
    <Compile Include="SwigProxyClasses\StreamConfiguration.cs" />
    <Compile Include="SwigProxyClasses\StreamConfigurationVector.cs" />
    <Compile Include="SwigProxyClasses\StreamInformation.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_CNTK__TrainingParameterPerUnitScheduleT_double_CNTK__TrainingParameterScheduleT_double_t__UnitType__Minibatch_t.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_CNTK__TrainingParameterPerUnitScheduleT_size_t_CNTK__TrainingParameterScheduleT_size_t_t__UnitType__Sample_t.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_CNTK__TrainingParameterScheduleT_double_t.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_std__shared_ptrT_CNTK__Function_t.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_std__wstring.cs" />
    <Compile Include="SwigProxyClasses\SWIGTYPE_p_uint64_t.cs" />
    <Compile Include="SwigProxyClasses\TensorBoardFileWriter.cs" />
    <Compile Include="SwigProxyClasses\Trainer.cs" />
    <Compile Include="SwigProxyClasses\TrainingSession.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapDictionaryDictionary.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapFunctionFunction.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapFunctionSizeT.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapParameterNDArrayView.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapStreamInformationMinibatchData.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapStreamInformationNDArrayViewNDArrayViewPair.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapStringDictionaryValue.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapVariableMinibatchData.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapVariableStreamInformation.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapVariableValue.cs" />
    <Compile Include="SwigProxyClasses\UnorderedMapVariableVariable.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetDistributedWorkerDescriptor.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetFunction.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetParameter.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetStreamInformation.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetString.cs" />
    <Compile Include="SwigProxyClasses\UnorderedSetVariable.cs" />
    <Compile Include="SwigProxyClasses\Value.cs" />
    <Compile Include="SwigProxyClasses\ValueVector.cs" />
    <Compile Include="SwigProxyClasses\Variable.cs" />
    <Compile Include="SwigProxyClasses\VariableKind.cs" />
    <Compile Include="SwigProxyClasses\VariableVariablePair.cs" />
    <Compile Include="SwigProxyClasses\VariableVariablePairVector.cs" />
    <Compile Include="SwigProxyClasses\VariableVector.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(CpuOnlyBuild)">
    <Compile Include="CNTKLibraryManagedDll-CPUOnly-AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(GpuBuild)">
    <Compile Include="CNTKLibraryManagedDll-GPU-AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="CNTKLibraryManagedDll-CPUOnly-KeyPair.snk" />
    <None Include="CNTKLibraryManagedDll-GPU-KeyPair.snk" />
    <None Include="SwigProxyClasses\README.md" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="Build" Condition="$(HasSwig)" DependsOnTargets="$(BuildDependsOn)" />
  <Target Name="CheckDependencies">
    <Warning Condition="!$(HasSwig)" Text="The project requires SWIG to be installed. Please see https://github.com/Microsoft/CNTK/wiki/Setup-CNTK-on-Windows#optional-cntk-cnet-library-for-evaluation for installation instructions." />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>