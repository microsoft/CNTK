[
    {
        "category": ["Image"],
        "name":  "Feature Extraction",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/FeatureExtraction",
        "description":  "Evaluate and write out different layers of a trained model using python.",
        "language":  [Python],
        "type":  ["Recipe"]
    },
    {
        "category": [""],
        "name":  "Model Evaluation on Azure",
        "url":  "https://github.com/Microsoft/CNTK/wiki/Evaluate-a-model-in-an-Azure-WebApi",
        "description":  "Host an already trained CNTK model on Azure.",
        "language":  [],
        "type":  ["Tutorial"]
    },
    {
        "category": [""],
        "name":  "Model Evaluation in C#",
        "url":  "https://github.com/Microsoft/CNTK/wiki/EvalDLL-Evaluation-on-Windows#using-the-evaldll-c-library",
        "description":  "Evaluation or inference of an already trained CNTK model in C#.",
        "language":  ["C#"],
        "type":  ["Example"]
    },
    {
        "category": [""],
        "name":  "Model Evaluation in C++",
        "url":  "https://github.com/Microsoft/CNTK/wiki/Native-EvalDLL-API",
        "description":  "Evaluation or inference of an already trained CNTK model in C++.",
        "language":  ["C++"],
        "type":  ["Example"]
    },
    {
        "category": ["Image"],
        "name":  "Video Action Recognition",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Video/GettingStarted",
        "description":  "Train a Basic 3-D convolutional neural network for video action recognition on the UCF11 dataset.",
        "language":  ["Python"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "AlexNet",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/AlexNet",
        "description":  "CNN based network by Alex Krizhevsky. This was the winning model of the ILSVRC2012 classification task.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "ConvNet",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/ConvNet#cntk-examples-imageclassificationconvnet",
        "description":  "A popular convolutional neural network for image-related tasks.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "Fast R-CNN",
        "url":  "https://github.com/Microsoft/CNTK/wiki/Object-Detection-using-Fast-R-CNN",
        "description":  "Train object detection from images by adapting pre-trained classification models on arbitrarily sized regions of interest using ROI pooling.",
        "language":  ["BrainScript"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "GoogLeNet (Inception V3)",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/GoogLeNet#cntk-examples-imageclassificationgooglenet",
        "description":  "GoogLeNet (Inception V3) network for image classification.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "MLP",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/MLP#cntk-examples-imageclassificationmlp",
        "description":  "Training a multilayer perceptron (MLP) network for image classification.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "MNIST CNN OCR",
        "url":  "https://github.com/Microsoft/CNTK/wiki/Tutorial2",
        "description":  "Use CNN on an OCR problem.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "MNIST Feed Forward OCR",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_103B_MNIST_FeedForwardNetwork.ipynb",
        "description":  "Use Feed Forward networks on an OCR problem.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "Image Recognition",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_201B_CIFAR-10_ImageHandsOn.ipynb",
        "description":  "Hands-on lab that shows how to implement an image recognition task using convolutional neural networks.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "Neural Artistic Style Transfer",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_205_Artistic_Style_Transfer.ipynb",
        "description":  "This tutorial shows how to transfer the style of one image to another. This allows us to take our ordinary photos and render them in the style of famous images or paintings.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "One Conv",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/GettingStarted#02_oneconvcntk",
        "description":  "Simple network with one convolutional layer.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "One Conv BN",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/GettingStarted#04_oneconvbncntk",
        "description":  "Simple network showing how to add batch normalization to a CNN.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "One Conv Dropout",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/GettingStarted#03_oneconvdropoutcntk",
        "description":  "Simple network showing how to add dropout to a CNN.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "One Hidden",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/GettingStarted#01_onehiddencntk",
        "description":  "Simple network with one hidden layer.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "MNIST Regression",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/GettingStarted#05_oneconvregrcntk",
        "description":  "Simple network showing how to treat MNIST as a regression problem using Root Mean Square Error.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "Simple Regression",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Regression#cntk-examples-imageregression",
        "description":  "A simple neural network to predict the average RGB values of normalized images.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "ResNet",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/ResNet#cntk-examples-imageclassificationresnet",
        "description":  "Deep residual learning invented by Microsoft Research. This was the winning model of the ILSVRC and MS-COCO challenges in 2015.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Image"],
        "name":  "VGG",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Image/Classification/VGG",
        "description":  "Deep CNN from University of Oxford. This was the winning model for the ILSVRC2014 localization task.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Numeric"],
        "name":  "Feed Forward Classification",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_102_FeedForward.ipynb",
        "description":  "Use Feed Forward networks on a classification problem with CNTK and NumPy.",
        "language":  ["Python"],
        "type":  ["Tutorial"]
    },
    {
        "category": ["Numeric"],
        "name":  "Finance Timeseries with CNTK, Pandas and Numpy",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_104_Finance_Timeseries_Basic_with_Pandas_Numpy.ipynb",
        "description":  ": Looking at the predictive potential on classification of an Exchange-traded Funds (ETF), and in this simplified setting how one could trade it.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Numeric"],
        "name":  "Logistic Regression",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_101_LogisticRegression.ipynb",
        "description":  "Logistic regression example with Synthetic data.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Numeric"],
        "name":  "Reinforcement Learning",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_203_Reinforcement_Learning_Basics.ipynb",
        "description":  "Example how software agents could take actions in an environment so as to maximize some notion of cumulative reward.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "AN4 Speech DNN",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/AN4",
        "description":  "Train a speech recognition DNN acoustic model on the CMU AN4 dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "AN4 Speech LSTM",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/AN4",
        "description":  "Train a speech recognition LSTM acoustic model on the CMU AN4 dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Kaldi Speech DNN",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/AMI",
        "description":  "Train a speech recognition DNN acoustic model on top of fMLLR features generated with the Kaldi toolchain.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Speech Adapt Learn Rate",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train a speech recognition model with learning rate adapted based on dev set on the TIMIT dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Speech Auto Encoder",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train autoencoder with bottleneck layer on the TIMIT dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Speech Multi Input",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train with two different inputs, fbank and mfcc, on the TIMIT dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Speech Multi Task",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train with multi-task learning and joint prediction of senone labels and dialect region on the TIMIT dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "Speech with PreTrain",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Pre-train using layerwise discriminative pre-training, then full network training on the TIMIT dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "TIMIT Speech DNN",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train a speech recognition DNN acoustic model on the TIMIT dataset (TrainSimpleNetwork).",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech"],
        "name":  "TIMIT Speech LSTM",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Speech/Miscellaneous/TIMIT/config",
        "description":  "Train a speech recognition LSTM acoustic model on the TIMIT dataset (TrainNDLNetwork).",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech", "Text"],
        "name":  "Grapheme to Phoneme (G2P)",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/SequenceToSequence/CMUDict",
        "description":  "Sequence-to-sequence model with attention mechanism for a grapheme to phoneme translation task on the CMUDict dataset.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Speech", "Text"],
        "name":  "Sequence-to-Sequence",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_204_Sequence_To_Sequence.ipynb",
        "description":  "The input is a sequence with a dynamic length, and the output is also a sequence with some dynamic length. This is a natural fit for machine translation , automatic text summarization , word to pronunciation models and even parse tree generation.",
        "language":  ["Python"],
        "type":  ["Tutorial"]
    },
    {
        "category": ["Text"],
        "name":  "LTSM LU on ATIS",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/LanguageUnderstanding/ATIS",
        "description":  "LSTM based model for language understanding on the ATIS dataset.",
        "language":  ["Python", "BrainScript"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Text"],
        "name":  "Language Understanding with Recurrent Networks",
        "url":  "https://github.com/Microsoft/CNTK/blob/master/Tutorials/CNTK_202_Language_Understanding.ipynb",
        "description":  "Implement a recurrent network for language understanding of the ATIS dataset.",
        "language":  ["Python"],
        "type":  ["Tutorial", "Recipe"]
    },
    {
        "category": ["Text"],
        "name":  "Neural Character Language Model",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/Text/CharacterLM",
        "description":  "A neural language model uses a recurrent neural network to predict words (or characters) with a richer context than traditional n-gram models allow.",
        "language":  ["Python"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Text"],
        "name":  "RNN LM on PennTreebank",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/SequenceToSequence/PennTreebank",
        "description":  "Recurrent neural network for language modeling on the PennTreebank dataset.",
        "language":  ["BrainScript"],
        "type":  ["Recipe"]
    },
    {
        "category": ["Text"],
        "name":  "Sequence Classification",
        "url":  "https://github.com/Microsoft/CNTK/tree/master/Examples/SequenceClassification/SimpleExample/Python",
        "description":  "Create and train an LSTM sequence classification model.",
        "language":  ["Python"],
        "type":  ["Recipe"]
    }
]
